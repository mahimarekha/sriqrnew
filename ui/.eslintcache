[{"C:\\polls\\ui\\src\\index.js":"1","C:\\polls\\ui\\src\\context\\LayoutContext.js":"2","C:\\polls\\ui\\src\\serviceWorker.js":"3","C:\\polls\\ui\\src\\components\\App.js":"4","C:\\polls\\ui\\src\\context\\UserContext.js":"5","C:\\polls\\ui\\src\\services\\CategoryServices.js":"6","C:\\polls\\ui\\src\\components\\LoginLayout\\LoginLayout.js":"7","C:\\polls\\ui\\src\\pages\\error\\Error.js":"8","C:\\polls\\ui\\src\\components\\Layout\\Layout.js":"9","C:\\polls\\ui\\src\\pages\\login\\Login.js":"10","C:\\polls\\ui\\src\\services\\httpServices.js":"11","C:\\polls\\ui\\src\\components\\LoginHeader\\LoginHeader.js":"12","C:\\polls\\ui\\src\\pages\\login\\styles.js":"13","C:\\polls\\ui\\src\\components\\PageTitle\\PageTitle.js":"14","C:\\polls\\ui\\src\\components\\UserAvatar\\UserAvatar.js":"15","C:\\polls\\ui\\src\\components\\PageTitle\\styles.js":"16","C:\\polls\\ui\\src\\components\\Wrappers\\Wrappers.js":"17","C:\\polls\\ui\\src\\components\\UserAvatar\\styles.js":"18","C:\\polls\\ui\\src\\components\\Layout\\styles.js":"19","C:\\polls\\ui\\src\\pages\\error\\styles.js":"20","C:\\polls\\ui\\src\\components\\LoginLayout\\styles.js":"21","C:\\polls\\ui\\src\\pages\\dashboard\\Party.js":"22","C:\\polls\\ui\\src\\pages\\dashboard\\Caste.js":"23","C:\\polls\\ui\\src\\pages\\dashboard\\District.js":"24","C:\\polls\\ui\\src\\pages\\dashboard\\ContactReports.js":"25","C:\\polls\\ui\\src\\pages\\dashboard\\RepresentiveReports.js":"26","C:\\polls\\ui\\src\\pages\\dashboard\\Constituency.js":"27","C:\\polls\\ui\\src\\pages\\maps\\Maps.js":"28","C:\\polls\\ui\\src\\pages\\dashboard\\ProfileRegistration.js":"29","C:\\polls\\ui\\src\\pages\\typography\\Typography.js":"30","C:\\polls\\ui\\src\\pages\\charts\\Charts.js":"31","C:\\polls\\ui\\src\\components\\Sidebar\\Sidebar.js":"32","C:\\polls\\ui\\src\\pages\\dashboard\\Booth.js":"33","C:\\polls\\ui\\src\\pages\\dashboard\\Voter.js":"34","C:\\polls\\ui\\src\\pages\\dashboard\\Village.js":"35","C:\\polls\\ui\\src\\pages\\dashboard\\Contact.js":"36","C:\\polls\\ui\\src\\components\\Header\\Header.js":"37","C:\\polls\\ui\\src\\pages\\notifications\\Notifications.js":"38","C:\\polls\\ui\\src\\pages\\dashboard\\RepresentiveContact.js":"39","C:\\polls\\ui\\src\\pages\\dashboard\\VoterData.js":"40","C:\\polls\\ui\\src\\pages\\maps\\styles.js":"41","C:\\polls\\ui\\src\\components\\Sidebar\\components\\Dot.js":"42","C:\\polls\\ui\\src\\components\\Widget\\Widget.js":"43","C:\\polls\\ui\\src\\pages\\dashboard\\mock.js":"44","C:\\polls\\ui\\src\\pages\\dashboard\\components\\BigStat\\BigStat.js":"45","C:\\polls\\ui\\src\\pages\\dashboard\\Locality\\Service\\villageService.js":"46","C:\\polls\\ui\\src\\pages\\dashboard\\Locality\\Service\\partyService.js":"47","C:\\polls\\ui\\src\\pages\\dashboard\\Locality\\Service\\voterDataService.js":"48","C:\\polls\\ui\\src\\pages\\dashboard\\Locality\\Service\\casteService.js":"49","C:\\polls\\ui\\src\\pages\\dashboard\\Locality\\Service\\boothService.js":"50","C:\\polls\\ui\\src\\components\\Notification\\Notification.js":"51","C:\\polls\\ui\\src\\pages\\dashboard\\Locality\\Service\\constituencyService.js":"52","C:\\polls\\ui\\src\\pages\\dashboard\\Locality\\Service\\districtService.js":"53","C:\\polls\\ui\\src\\Excelexport.js":"54","C:\\polls\\ui\\src\\pages\\dashboard\\Locality\\Service\\representiveContact.js":"55","C:\\polls\\ui\\src\\pages\\notifications\\styles.js":"56","C:\\polls\\ui\\src\\pages\\dashboard\\Locality\\Service\\contactService.js":"57","C:\\polls\\ui\\src\\components\\Header\\styles.js":"58","C:\\polls\\ui\\src\\components\\Widget\\styles.js":"59","C:\\polls\\ui\\src\\pages\\dashboard\\Locality\\Service\\voterService.js":"60","C:\\polls\\ui\\src\\components\\Sidebar\\styles.js":"61","C:\\polls\\ui\\src\\pages\\dashboard\\components\\BigStat\\styles.js":"62","C:\\polls\\ui\\src\\pages\\charts\\components\\ApexHeatmap.js":"63","C:\\polls\\ui\\src\\pages\\charts\\components\\ApexLineChart.js":"64","C:\\polls\\ui\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js":"65","C:\\polls\\ui\\src\\pages\\dashboard\\Locality\\Service\\httpService.js":"66","C:\\polls\\ui\\src\\pages\\typography\\styles.js":"67","C:\\polls\\ui\\src\\pages\\dashboard\\styles.js":"68","C:\\polls\\ui\\src\\components\\Notification\\styles.js":"69","C:\\polls\\ui\\src\\pages\\dashboard\\Locality\\Service\\profileRegistration.js":"70","C:\\polls\\ui\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js":"71","C:\\polls\\ui\\src\\pages\\icons\\Icons.js":"72","C:\\polls\\ui\\src\\pages\\icons\\styles.js":"73","C:\\polls\\ui\\src\\pages\\dashboard\\Track.js":"74","C:\\polls\\ui\\src\\pages\\dashboard\\Locality\\Service\\trackService.js":"75","C:\\polls\\ui\\src\\themes\\index.js":"76","C:\\polls\\ui\\src\\themes\\default.js":"77","C:\\polls\\ui\\src\\pages\\dashboard\\Dashboard.js":"78","C:\\polls\\ui\\src\\services\\CityServices.js":"79","C:\\polls\\ui\\src\\pages\\dashboard\\voterreport.js":"80","C:\\polls\\ui\\src\\pages\\dashboard\\OurVoter.js":"81","C:\\polls\\ui\\src\\pages\\dashboard\\TrackVoters.js":"82","C:\\polls\\ui\\src\\pages\\dashboard\\Locality\\Service\\trackVotersService.js":"83","C:\\QR-code\\ui\\src\\index.js":"84","C:\\QR-code\\ui\\src\\serviceWorker.js":"85","C:\\QR-code\\ui\\src\\components\\App.js":"86","C:\\QR-code\\ui\\src\\context\\LayoutContext.js":"87","C:\\QR-code\\ui\\src\\context\\UserContext.js":"88","C:\\QR-code\\ui\\src\\themes\\index.js":"89","C:\\QR-code\\ui\\src\\services\\CategoryServices.js":"90","C:\\QR-code\\ui\\src\\components\\LoginLayout\\LoginLayout.js":"91","C:\\QR-code\\ui\\src\\pages\\error\\Error.js":"92","C:\\QR-code\\ui\\src\\components\\Layout\\Layout.js":"93","C:\\QR-code\\ui\\src\\pages\\login\\Login.js":"94","C:\\QR-code\\ui\\src\\themes\\default.js":"95","C:\\QR-code\\ui\\src\\services\\httpServices.js":"96","C:\\QR-code\\ui\\src\\components\\LoginHeader\\LoginHeader.js":"97","C:\\QR-code\\ui\\src\\pages\\login\\styles.js":"98","C:\\QR-code\\ui\\src\\pages\\charts\\Charts.js":"99","C:\\QR-code\\ui\\src\\components\\UserAvatar\\UserAvatar.js":"100","C:\\QR-code\\ui\\src\\components\\Wrappers\\Wrappers.js":"101","C:\\QR-code\\ui\\src\\pages\\charts\\components\\ApexHeatmap.js":"102","C:\\QR-code\\ui\\src\\components\\PageTitle\\PageTitle.js":"103","C:\\QR-code\\ui\\src\\pages\\charts\\components\\ApexLineChart.js":"104","C:\\QR-code\\ui\\src\\components\\Widget\\Widget.js":"105","C:\\QR-code\\ui\\src\\components\\UserAvatar\\styles.js":"106","C:\\QR-code\\ui\\src\\components\\PageTitle\\styles.js":"107","C:\\QR-code\\ui\\src\\components\\Widget\\styles.js":"108","C:\\QR-code\\ui\\src\\components\\Layout\\styles.js":"109","C:\\QR-code\\ui\\src\\pages\\error\\styles.js":"110","C:\\QR-code\\ui\\src\\pages\\maps\\Maps.js":"111","C:\\QR-code\\ui\\src\\pages\\typography\\Typography.js":"112","C:\\QR-code\\ui\\src\\components\\LoginLayout\\styles.js":"113","C:\\QR-code\\ui\\src\\components\\Sidebar\\Sidebar.js":"114","C:\\QR-code\\ui\\src\\pages\\notifications\\Notifications.js":"115","C:\\QR-code\\ui\\src\\components\\Header\\Header.js":"116","C:\\QR-code\\ui\\src\\pages\\maps\\styles.js":"117","C:\\QR-code\\ui\\src\\pages\\typography\\styles.js":"118","C:\\QR-code\\ui\\src\\pages\\notifications\\styles.js":"119","C:\\QR-code\\ui\\src\\components\\Header\\styles.js":"120","C:\\QR-code\\ui\\src\\components\\Notification\\Notification.js":"121","C:\\QR-code\\ui\\src\\pages\\icons\\Icons.js":"122","C:\\QR-code\\ui\\src\\pages\\icons\\styles.js":"123","C:\\QR-code\\ui\\src\\components\\Notification\\styles.js":"124","C:\\QR-code\\ui\\src\\components\\Sidebar\\styles.js":"125","C:\\QR-code\\ui\\src\\components\\Sidebar\\components\\Dot.js":"126","C:\\QR-code\\ui\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js":"127","C:\\QR-code\\ui\\src\\pages\\dashboard\\Locality\\Service\\parkService.js":"128","C:\\QR-code\\ui\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js":"129","C:\\QR-code\\ui\\src\\pages\\dashboard\\Locality\\Service\\httpService.js":"130","C:\\QR-code\\ui\\src\\pages\\dashboard\\Dashboard.js":"131","C:\\QR-code\\ui\\src\\pages\\dashboard\\styles.js":"132","C:\\QR-code\\ui\\src\\pages\\dashboard\\mock.js":"133","C:\\QR-code\\ui\\src\\services\\CityServices.js":"134","C:\\QR-code\\ui\\src\\pages\\dashboard\\components\\BigStat\\BigStat.js":"135","C:\\QR-code\\ui\\src\\pages\\dashboard\\components\\BigStat\\styles.js":"136","C:\\QR-code\\ui\\src\\pages\\dashboard\\Park.js":"137","C:\\QR-code\\ui\\src\\pages\\dashboard\\TicketBooking.js":"138","C:\\QR-code\\ui\\src\\pages\\dashboard\\Locality\\Service\\ticketBookingService.js":"139","C:\\QR-code\\ui\\src\\pages\\dashboard\\BookingReport.js":"140","C:\\QR-code\\ui\\src\\pages\\dashboard\\ProfileRegistration.js":"141","C:\\QR-code\\ui\\src\\pages\\dashboard\\Locality\\Service\\profileRegistrationService.js":"142","C:\\QR-code\\ui\\src\\pages\\home\\Home.js":"143","C:\\QR-code\\ui\\src\\pages\\home\\styles.js":"144","C:\\QR-code\\ui\\src\\pages\\home\\Header.js":"145","C:\\QR-code\\ui\\src\\pages\\home\\Footer.js":"146","C:\\QR-code\\ui\\src\\pages\\dashboard\\report.js":"147","C:\\QR-code\\ui\\src\\pages\\dashboard\\Success.js":"148","C:\\QR-code\\ui\\src\\pages\\dashboard\\Getqr.js":"149","C:\\QR-code\\ui\\src\\pages\\dashboard\\Loader.js":"150","C:\\QR-code\\ui\\src\\pages\\dashboard\\Coaching.js":"151","C:\\QR-code\\ui\\src\\pages\\dashboard\\Locality\\Service\\coachingService.js":"152","C:\\QR-code\\ui\\src\\pages\\dashboard\\CoachingBooking.js":"153"},{"size":896,"mtime":1685964226547,"results":"154","hashOfConfig":"155"},{"size":1444,"mtime":1662566432935,"results":"156","hashOfConfig":"155"},{"size":5083,"mtime":1662566432974,"results":"157","hashOfConfig":"155"},{"size":2003,"mtime":1683103144518,"results":"158","hashOfConfig":"155"},{"size":2396,"mtime":1682677655049,"results":"159","hashOfConfig":"155"},{"size":1023,"mtime":1684145103992,"results":"160","hashOfConfig":"155"},{"size":5290,"mtime":1682680871607,"results":"161","hashOfConfig":"155"},{"size":1626,"mtime":1662566432950,"results":"162","hashOfConfig":"155"},{"size":6611,"mtime":1687942146891,"results":"163","hashOfConfig":"155"},{"size":5704,"mtime":1689941696499,"results":"164","hashOfConfig":"155"},{"size":1295,"mtime":1689577022550,"results":"165","hashOfConfig":"155"},{"size":5692,"mtime":1689138230446,"results":"166","hashOfConfig":"155"},{"size":3281,"mtime":1662566432962,"results":"167","hashOfConfig":"155"},{"size":447,"mtime":1662566432918,"results":"168","hashOfConfig":"155"},{"size":620,"mtime":1662566432929,"results":"169","hashOfConfig":"155"},{"size":488,"mtime":1670909812206,"results":"170","hashOfConfig":"155"},{"size":3971,"mtime":1662566432933,"results":"171","hashOfConfig":"155"},{"size":291,"mtime":1662566432930,"results":"172","hashOfConfig":"155"},{"size":710,"mtime":1662566432914,"results":"173","hashOfConfig":"155"},{"size":1395,"mtime":1662566432952,"results":"174","hashOfConfig":"155"},{"size":710,"mtime":1662566432914,"results":"175","hashOfConfig":"155"},{"size":9427,"mtime":1689582220030,"results":"176","hashOfConfig":"155"},{"size":9502,"mtime":1689582101385,"results":"177","hashOfConfig":"155"},{"size":8193,"mtime":1689582186885,"results":"178","hashOfConfig":"155"},{"size":12991,"mtime":1689582170401,"results":"179","hashOfConfig":"155"},{"size":13857,"mtime":1686284460693,"results":"180","hashOfConfig":"155"},{"size":12553,"mtime":1689582118569,"results":"181","hashOfConfig":"155"},{"size":1010,"mtime":1662566432963,"results":"182","hashOfConfig":"155"},{"size":13951,"mtime":1683093547616,"results":"183","hashOfConfig":"155"},{"size":4632,"mtime":1662566432971,"results":"184","hashOfConfig":"155"},{"size":5790,"mtime":1662566432939,"results":"185","hashOfConfig":"155"},{"size":7622,"mtime":1689852390520,"results":"186","hashOfConfig":"155"},{"size":17062,"mtime":1687841366921,"results":"187","hashOfConfig":"155"},{"size":17279,"mtime":1687862146252,"results":"188","hashOfConfig":"155"},{"size":16212,"mtime":1687862156306,"results":"189","hashOfConfig":"155"},{"size":23550,"mtime":1689582132596,"results":"190","hashOfConfig":"155"},{"size":10251,"mtime":1689138218043,"results":"191","hashOfConfig":"155"},{"size":13862,"mtime":1662566432965,"results":"192","hashOfConfig":"155"},{"size":25207,"mtime":1689582229958,"results":"193","hashOfConfig":"155"},{"size":36324,"mtime":1690197294543,"results":"194","hashOfConfig":"155"},{"size":178,"mtime":1662566432964,"results":"195","hashOfConfig":"155"},{"size":902,"mtime":1662566432923,"results":"196","hashOfConfig":"155"},{"size":2055,"mtime":1662615776998,"results":"197","hashOfConfig":"155"},{"size":5781,"mtime":1663219382402,"results":"198","hashOfConfig":"155"},{"size":4160,"mtime":1662566432946,"results":"199","hashOfConfig":"155"},{"size":931,"mtime":1683198599644,"results":"200","hashOfConfig":"155"},{"size":578,"mtime":1682943823653,"results":"201","hashOfConfig":"155"},{"size":1068,"mtime":1687864358989,"results":"202","hashOfConfig":"155"},{"size":493,"mtime":1681906371065,"results":"203","hashOfConfig":"155"},{"size":909,"mtime":1681808545898,"results":"204","hashOfConfig":"155"},{"size":3413,"mtime":1662566432915,"results":"205","hashOfConfig":"155"},{"size":703,"mtime":1683015171834,"results":"206","hashOfConfig":"155"},{"size":981,"mtime":1684146642538,"results":"207","hashOfConfig":"155"},{"size":1244,"mtime":1689942764804,"results":"208","hashOfConfig":"155"},{"size":1234,"mtime":1684127204260,"results":"209","hashOfConfig":"155"},{"size":1943,"mtime":1662566432968,"results":"210","hashOfConfig":"155"},{"size":939,"mtime":1684127239242,"results":"211","hashOfConfig":"155"},{"size":4043,"mtime":1662566432911,"results":"212","hashOfConfig":"155"},{"size":1015,"mtime":1662566432932,"results":"213","hashOfConfig":"155"},{"size":1050,"mtime":1686117492580,"results":"214","hashOfConfig":"155"},{"size":1363,"mtime":1662566432928,"results":"215","hashOfConfig":"155"},{"size":1075,"mtime":1662566432946,"results":"216","hashOfConfig":"155"},{"size":1909,"mtime":1662566432940,"results":"217","hashOfConfig":"155"},{"size":1396,"mtime":1662566432941,"results":"218","hashOfConfig":"155"},{"size":4589,"mtime":1662566432925,"results":"219","hashOfConfig":"155"},{"size":1216,"mtime":1689942250611,"results":"220","hashOfConfig":"155"},{"size":389,"mtime":1662566432973,"results":"221","hashOfConfig":"155"},{"size":3000,"mtime":1662566432949,"results":"222","hashOfConfig":"155"},{"size":1040,"mtime":1662566432916,"results":"223","hashOfConfig":"155"},{"size":553,"mtime":1682682874913,"results":"224","hashOfConfig":"155"},{"size":1474,"mtime":1662566432926,"results":"225","hashOfConfig":"155"},{"size":391433,"mtime":1662566432957,"results":"226","hashOfConfig":"155"},{"size":812,"mtime":1662566432959,"results":"227","hashOfConfig":"155"},{"size":20123,"mtime":1689852200231,"results":"228","hashOfConfig":"155"},{"size":814,"mtime":1685965116362,"results":"229","hashOfConfig":"155"},{"size":534,"mtime":1662566432977,"results":"230","hashOfConfig":"155"},{"size":3127,"mtime":1662566432976,"results":"231","hashOfConfig":"155"},{"size":13444,"mtime":1670752470768,"results":"232","hashOfConfig":"155"},{"size":878,"mtime":1670764796264,"results":"233","hashOfConfig":"155"},{"size":13442,"mtime":1689578098817,"results":"234","hashOfConfig":"155"},{"size":19030,"mtime":1690196734219,"results":"235","hashOfConfig":"155"},{"size":12588,"mtime":1689581993591,"results":"236","hashOfConfig":"155"},{"size":1120,"mtime":1688030697701,"results":"237","hashOfConfig":"155"},{"size":1025,"mtime":1695209637152,"results":"238","hashOfConfig":"239"},{"size":5083,"mtime":1662566432974,"results":"240","hashOfConfig":"239"},{"size":2658,"mtime":1698319575786,"results":"241","hashOfConfig":"239"},{"size":1444,"mtime":1662566432935,"results":"242","hashOfConfig":"239"},{"size":2510,"mtime":1697713603825,"results":"243","hashOfConfig":"239"},{"size":534,"mtime":1695209673595,"results":"244","hashOfConfig":"239"},{"size":1077,"mtime":1692698404499,"results":"245","hashOfConfig":"239"},{"size":5020,"mtime":1696842166804,"results":"246","hashOfConfig":"239"},{"size":1626,"mtime":1662566432950,"results":"247","hashOfConfig":"239"},{"size":5163,"mtime":1697713759333,"results":"248","hashOfConfig":"239"},{"size":5948,"mtime":1693287122781,"results":"249","hashOfConfig":"239"},{"size":3127,"mtime":1662566432976,"results":"250","hashOfConfig":"239"},{"size":1295,"mtime":1689577022550,"results":"251","hashOfConfig":"239"},{"size":5726,"mtime":1695125286878,"results":"252","hashOfConfig":"239"},{"size":3281,"mtime":1662566432962,"results":"253","hashOfConfig":"239"},{"size":5790,"mtime":1662566432939,"results":"254","hashOfConfig":"239"},{"size":620,"mtime":1662566432929,"results":"255","hashOfConfig":"239"},{"size":3971,"mtime":1662566432933,"results":"256","hashOfConfig":"239"},{"size":1909,"mtime":1662566432940,"results":"257","hashOfConfig":"239"},{"size":447,"mtime":1662566432918,"results":"258","hashOfConfig":"239"},{"size":1396,"mtime":1662566432941,"results":"259","hashOfConfig":"239"},{"size":2055,"mtime":1662615776998,"results":"260","hashOfConfig":"239"},{"size":291,"mtime":1662566432930,"results":"261","hashOfConfig":"239"},{"size":488,"mtime":1670909812206,"results":"262","hashOfConfig":"239"},{"size":1015,"mtime":1662566432932,"results":"263","hashOfConfig":"239"},{"size":710,"mtime":1662566432914,"results":"264","hashOfConfig":"239"},{"size":1395,"mtime":1662566432952,"results":"265","hashOfConfig":"239"},{"size":1010,"mtime":1662566432963,"results":"266","hashOfConfig":"239"},{"size":4632,"mtime":1662566432971,"results":"267","hashOfConfig":"239"},{"size":710,"mtime":1662566432914,"results":"268","hashOfConfig":"239"},{"size":4226,"mtime":1703081198719,"results":"269","hashOfConfig":"239"},{"size":13862,"mtime":1662566432965,"results":"270","hashOfConfig":"239"},{"size":9620,"mtime":1693286253711,"results":"271","hashOfConfig":"239"},{"size":178,"mtime":1662566432964,"results":"272","hashOfConfig":"239"},{"size":389,"mtime":1662566432973,"results":"273","hashOfConfig":"239"},{"size":1943,"mtime":1662566432968,"results":"274","hashOfConfig":"239"},{"size":4043,"mtime":1662566432911,"results":"275","hashOfConfig":"239"},{"size":3413,"mtime":1662566432915,"results":"276","hashOfConfig":"239"},{"size":391433,"mtime":1662566432957,"results":"277","hashOfConfig":"239"},{"size":812,"mtime":1662566432959,"results":"278","hashOfConfig":"239"},{"size":1040,"mtime":1662566432916,"results":"279","hashOfConfig":"239"},{"size":1363,"mtime":1662566432928,"results":"280","hashOfConfig":"239"},{"size":902,"mtime":1662566432923,"results":"281","hashOfConfig":"239"},{"size":4589,"mtime":1662566432925,"results":"282","hashOfConfig":"239"},{"size":968,"mtime":1696847897041,"results":"283","hashOfConfig":"239"},{"size":1474,"mtime":1662566432926,"results":"284","hashOfConfig":"239"},{"size":1216,"mtime":1689942250611,"results":"285","hashOfConfig":"239"},{"size":13444,"mtime":1670752470768,"results":"286","hashOfConfig":"239"},{"size":3000,"mtime":1662566432949,"results":"287","hashOfConfig":"239"},{"size":5781,"mtime":1663219382402,"results":"288","hashOfConfig":"239"},{"size":878,"mtime":1670764796264,"results":"289","hashOfConfig":"239"},{"size":4160,"mtime":1662566432946,"results":"290","hashOfConfig":"239"},{"size":1075,"mtime":1662566432946,"results":"291","hashOfConfig":"239"},{"size":38812,"mtime":1700564994805,"results":"292","hashOfConfig":"239"},{"size":15711,"mtime":1703871821772,"results":"293","hashOfConfig":"239"},{"size":1214,"mtime":1703841991194,"results":"294","hashOfConfig":"239"},{"size":9759,"mtime":1695387716175,"results":"295","hashOfConfig":"239"},{"size":11490,"mtime":1697708617492,"results":"296","hashOfConfig":"239"},{"size":427,"mtime":1692698236350,"results":"297","hashOfConfig":"239"},{"size":35560,"mtime":1703592373969,"results":"298","hashOfConfig":"239"},{"size":3281,"mtime":1662566432962,"results":"299","hashOfConfig":"239"},{"size":5918,"mtime":1695393291837,"results":"300","hashOfConfig":"239"},{"size":1904,"mtime":1692941988340,"results":"301","hashOfConfig":"239"},{"size":14565,"mtime":1703868529216,"results":"302","hashOfConfig":"239"},{"size":4374,"mtime":1696929131392,"results":"303","hashOfConfig":"239"},{"size":8232,"mtime":1703592809710,"results":"304","hashOfConfig":"239"},{"size":214,"mtime":1697437568708,"results":"305","hashOfConfig":"239"},{"size":18625,"mtime":1697805779626,"results":"306","hashOfConfig":"239"},{"size":1037,"mtime":1698319743201,"results":"307","hashOfConfig":"239"},{"size":20692,"mtime":1698409822416,"results":"308","hashOfConfig":"239"},{"filePath":"309","messages":"310","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"311"},"1530y3f",{"filePath":"312","messages":"313","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"311"},{"filePath":"314","messages":"315","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"311"},{"filePath":"316","messages":"317","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"311"},{"filePath":"318","messages":"319","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"311"},{"filePath":"320","messages":"321","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"311"},{"filePath":"322","messages":"323","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"311"},{"filePath":"325","messages":"326","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"311"},{"filePath":"327","messages":"328","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"311"},{"filePath":"330","messages":"331","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"311"},{"filePath":"332","messages":"333","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"311"},{"filePath":"334","messages":"335","errorCount":0,"fatalErrorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336","usedDeprecatedRules":"311"},{"filePath":"337","messages":"338","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"311"},{"filePath":"339","messages":"340","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"311"},{"filePath":"341","messages":"342","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"311"},{"filePath":"343","messages":"344","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"311"},{"filePath":"345","messages":"346","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"311"},{"filePath":"347","messages":"348","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"311"},{"filePath":"349","messages":"350","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"311"},{"filePath":"351","messages":"352","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"311"},{"filePath":"353","messages":"354","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"311"},{"filePath":"355","messages":"356","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357","usedDeprecatedRules":"311"},{"filePath":"358","messages":"359","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"360","usedDeprecatedRules":"311"},{"filePath":"361","messages":"362","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363","usedDeprecatedRules":"311"},{"filePath":"364","messages":"365","errorCount":0,"fatalErrorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366","usedDeprecatedRules":"311"},{"filePath":"367","messages":"368","errorCount":0,"fatalErrorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"369","usedDeprecatedRules":"311"},{"filePath":"370","messages":"371","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"372","usedDeprecatedRules":"311"},{"filePath":"373","messages":"374","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"311"},{"filePath":"375","messages":"376","errorCount":0,"fatalErrorCount":0,"warningCount":47,"fixableErrorCount":0,"fixableWarningCount":0,"source":"377","usedDeprecatedRules":"311"},{"filePath":"378","messages":"379","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"311"},{"filePath":"380","messages":"381","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"311"},{"filePath":"382","messages":"383","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":6,"source":"384","usedDeprecatedRules":"311"},{"filePath":"385","messages":"386","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"387","usedDeprecatedRules":"311"},{"filePath":"388","messages":"389","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390","usedDeprecatedRules":"311"},{"filePath":"391","messages":"392","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"393","usedDeprecatedRules":"311"},{"filePath":"394","messages":"395","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"396","usedDeprecatedRules":"311"},{"filePath":"397","messages":"398","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"399","usedDeprecatedRules":"311"},{"filePath":"400","messages":"401","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"311"},{"filePath":"402","messages":"403","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"404","usedDeprecatedRules":"311"},{"filePath":"405","messages":"406","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"407","messages":"408","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"311"},{"filePath":"409","messages":"410","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"311"},{"filePath":"411","messages":"412","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"413","usedDeprecatedRules":"311"},{"filePath":"414","messages":"415","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"311"},{"filePath":"416","messages":"417","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"311"},{"filePath":"418","messages":"419","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"311"},{"filePath":"420","messages":"421","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"311"},{"filePath":"422","messages":"423","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"311"},{"filePath":"424","messages":"425","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"311"},{"filePath":"426","messages":"427","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"311"},{"filePath":"428","messages":"429","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"311"},{"filePath":"430","messages":"431","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"311"},{"filePath":"432","messages":"433","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"434","usedDeprecatedRules":"311"},{"filePath":"435","messages":"436","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"437","messages":"438","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"439","usedDeprecatedRules":"311"},{"filePath":"440","messages":"441","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"311"},{"filePath":"442","messages":"443","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"311"},{"filePath":"444","messages":"445","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"311"},{"filePath":"446","messages":"447","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"311"},{"filePath":"448","messages":"449","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"311"},{"filePath":"450","messages":"451","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"311"},{"filePath":"452","messages":"453","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"311"},{"filePath":"454","messages":"455","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"311"},{"filePath":"456","messages":"457","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"311"},{"filePath":"458","messages":"459","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"311"},{"filePath":"460","messages":"461","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"462","messages":"463","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"311"},{"filePath":"464","messages":"465","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"311"},{"filePath":"466","messages":"467","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"311"},{"filePath":"468","messages":"469","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"311"},{"filePath":"470","messages":"471","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"311"},{"filePath":"472","messages":"473","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"311"},{"filePath":"474","messages":"475","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"311"},{"filePath":"476","messages":"477","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"478","usedDeprecatedRules":"311"},{"filePath":"479","messages":"480","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"311"},{"filePath":"481","messages":"482","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"311"},{"filePath":"483","messages":"484","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"311"},{"filePath":"485","messages":"486","errorCount":0,"fatalErrorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"487","usedDeprecatedRules":"488"},{"filePath":"489","messages":"490","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"488"},{"filePath":"491","messages":"492","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"493","usedDeprecatedRules":"311"},{"filePath":"494","messages":"495","errorCount":0,"fatalErrorCount":0,"warningCount":40,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"496","messages":"497","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"498","usedDeprecatedRules":"311"},{"filePath":"499","messages":"500","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"311"},{"filePath":"501","messages":"502","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"503"},"1f7pfqo",{"filePath":"504","messages":"505","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"503"},{"filePath":"506","messages":"507","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"508","usedDeprecatedRules":"503"},{"filePath":"509","messages":"510","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"503"},{"filePath":"511","messages":"512","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"503"},{"filePath":"513","messages":"514","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"503"},{"filePath":"515","messages":"516","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"503"},{"filePath":"517","messages":"518","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"519","usedDeprecatedRules":"503"},{"filePath":"520","messages":"521","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"503"},{"filePath":"522","messages":"523","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"524","usedDeprecatedRules":"503"},{"filePath":"525","messages":"526","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"527","usedDeprecatedRules":"503"},{"filePath":"528","messages":"529","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"503"},{"filePath":"530","messages":"531","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"503"},{"filePath":"532","messages":"533","errorCount":0,"fatalErrorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"534","usedDeprecatedRules":"503"},{"filePath":"535","messages":"536","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"503"},{"filePath":"537","messages":"538","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"503"},{"filePath":"539","messages":"540","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"503"},{"filePath":"541","messages":"542","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"503"},{"filePath":"543","messages":"544","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"503"},{"filePath":"545","messages":"546","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"503"},{"filePath":"547","messages":"548","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"503"},{"filePath":"549","messages":"550","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"413","usedDeprecatedRules":"503"},{"filePath":"551","messages":"552","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"503"},{"filePath":"553","messages":"554","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"503"},{"filePath":"555","messages":"556","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"503"},{"filePath":"557","messages":"558","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"503"},{"filePath":"559","messages":"560","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"503"},{"filePath":"561","messages":"562","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"503"},{"filePath":"563","messages":"564","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"503"},{"filePath":"565","messages":"566","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"503"},{"filePath":"567","messages":"568","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":6,"source":"569","usedDeprecatedRules":"503"},{"filePath":"570","messages":"571","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"503"},{"filePath":"572","messages":"573","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"574","usedDeprecatedRules":"503"},{"filePath":"575","messages":"576","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"503"},{"filePath":"577","messages":"578","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"503"},{"filePath":"579","messages":"580","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"503"},{"filePath":"581","messages":"582","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"503"},{"filePath":"583","messages":"584","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"503"},{"filePath":"585","messages":"586","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"503"},{"filePath":"587","messages":"588","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"503"},{"filePath":"589","messages":"590","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"503"},{"filePath":"591","messages":"592","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"503"},{"filePath":"593","messages":"594","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"503"},{"filePath":"595","messages":"596","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"503"},{"filePath":"597","messages":"598","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"503"},{"filePath":"599","messages":"600","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"503"},{"filePath":"601","messages":"602","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"503"},{"filePath":"603","messages":"604","errorCount":0,"fatalErrorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"487","usedDeprecatedRules":"605"},{"filePath":"606","messages":"607","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"503"},{"filePath":"608","messages":"609","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"503"},{"filePath":"610","messages":"611","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"605"},{"filePath":"612","messages":"613","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"503"},{"filePath":"614","messages":"615","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"503"},{"filePath":"616","messages":"617","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"618","usedDeprecatedRules":"503"},{"filePath":"619","messages":"620","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"621"},{"filePath":"622","messages":"623","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"503"},{"filePath":"624","messages":"625","errorCount":0,"fatalErrorCount":0,"warningCount":43,"fixableErrorCount":0,"fixableWarningCount":0,"source":"626","usedDeprecatedRules":"503"},{"filePath":"627","messages":"628","errorCount":0,"fatalErrorCount":0,"warningCount":56,"fixableErrorCount":0,"fixableWarningCount":0,"source":"629","usedDeprecatedRules":"503"},{"filePath":"630","messages":"631","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"503"},{"filePath":"632","messages":"633","errorCount":0,"fatalErrorCount":0,"warningCount":64,"fixableErrorCount":0,"fixableWarningCount":0,"source":"634","usedDeprecatedRules":"503"},{"filePath":"635","messages":"636","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"503"},{"filePath":"637","messages":"638","errorCount":0,"fatalErrorCount":0,"warningCount":39,"fixableErrorCount":0,"fixableWarningCount":0,"source":"639","usedDeprecatedRules":"503"},{"filePath":"640","messages":"641","errorCount":0,"fatalErrorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":"642","usedDeprecatedRules":"503"},{"filePath":"643","messages":"644","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"645","usedDeprecatedRules":"503"},{"filePath":"646","messages":"647","errorCount":0,"fatalErrorCount":0,"warningCount":38,"fixableErrorCount":0,"fixableWarningCount":0,"source":"648","usedDeprecatedRules":"503"},{"filePath":"649","messages":"650","errorCount":0,"fatalErrorCount":0,"warningCount":41,"fixableErrorCount":0,"fixableWarningCount":0,"source":"651","usedDeprecatedRules":"503"},{"filePath":"652","messages":"653","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"503"},{"filePath":"654","messages":"655","errorCount":0,"fatalErrorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"656","usedDeprecatedRules":"503"},{"filePath":"657","messages":"658","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"503"},{"filePath":"659","messages":"660","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"661","usedDeprecatedRules":"503"},"C:\\polls\\ui\\src\\index.js",[],["662","663"],"C:\\polls\\ui\\src\\context\\LayoutContext.js",[],"C:\\polls\\ui\\src\\serviceWorker.js",[],"C:\\polls\\ui\\src\\components\\App.js",[],"C:\\polls\\ui\\src\\context\\UserContext.js",[],"C:\\polls\\ui\\src\\services\\CategoryServices.js",[],"C:\\polls\\ui\\src\\components\\LoginLayout\\LoginLayout.js",["664","665","666","667","668","669","670","671","672","673","674","675","676","677","678"],"import React from \"react\";\r\nimport {\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n  withRouter,\r\n} from \"react-router-dom\";\r\nimport Layout from \"../Layout/Layout\"\r\nimport classnames from \"classnames\";\r\nimport {Box, IconButton, Link} from '@material-ui/core'\r\nimport Icon from '@mdi/react'\r\n// import Vendor from \"../../pages/vendor\";\r\n// import VendorRegistration from \"../../pages/vendor/VendorRegistration\";\r\n// import Locality from \"../../pages/dashboard/Locality/Locality\";\r\n// import Categories from \"../../pages/dashboard/components/Categories/Categories\";\r\n// import Menu from \"../../pages/dashboard/components/Menu/Menu\"\r\n// import VendorList from \"../../pages/dashboard/components/VendorList/VendorList\"\r\n// import OrderDetailes from \"../../pages/dashboard/components/OrderDetailes/OrderDetailes\"\r\n// import DicountCoupon from \"../../pages/dashboard/components/DiscountCoupon/DiscountCoupon\";\r\n//icons\r\nimport {\r\n  mdiFacebook as FacebookIcon,\r\n  mdiTwitter as TwitterIcon,\r\n  mdiGithub as GithubIcon,\r\n} from '@mdi/js'\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport Header from \"../Header\";\r\nimport Sidebar from \"../Sidebar\";\r\n\r\n// pages\r\nimport Dashboard from \"../../pages/dashboard/ProfileRegistration\";\r\nimport Typography from \"../../pages/typography\";\r\nimport Notifications from \"../../pages/notifications\";\r\nimport Maps from \"../../pages/maps\";\r\n// import Tables from \"../../pages/tables\";\r\n\r\nimport Icons from \"../../pages/icons\";\r\nimport Charts from \"../../pages/charts\";\r\n\r\n// context\r\nimport { useLayoutState } from \"../../context/LayoutContext\";\r\nimport { Category } from \"@material-ui/icons\";\r\nimport Login from \"../../pages/login/Login\";\r\nimport LoginHeader from \"../LoginHeader/LoginHeader\";\r\nimport SchoolRegistration from \"../../pages/dashboard/ProfileRegistration\";\r\n\r\nfunction LoginLayout(props) {\r\n  var classes = useStyles();\r\n\r\n  // global\r\n  var layoutState = useLayoutState();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        <>\r\n        <LoginHeader history={props.history} />\r\n          \r\n          <div\r\n            className={classnames(classes.content, {\r\n              [classes.contentShift]: layoutState.isSidebarOpened,\r\n            })}\r\n          >\r\n            <div className={classes.fakeToolbar} />\r\n            <Switch>\r\n             \r\n               <Route\r\n                exact\r\n                path=\"/\"\r\n                render={() => <Redirect to=\"/montessori/schoolregistration\" />}\r\n              />  \r\n              <Route path=\"/montessori/schoolregistration\" component={SchoolRegistration} />\r\n              <Route path=\"/montessori/login\" component={Login} />\r\n\r\n              <Route path=\"/montessori/dashboard\" component={Layout} />\r\n            </Switch>\r\n            <Box\r\n              mt={5}\r\n              width={\"100%\"}\r\n              display={\"flex\"}\r\n              alignItems={\"center\"}\r\n              justifyContent=\"space-between\"\r\n            >\r\n              {/* <div>\r\n                <Link\r\n                  color={'primary'}\r\n                  href={'https://flatlogic.com/'}\r\n                  target={'_blank'}\r\n                  className={classes.link}\r\n                >\r\n                  Flatlogic\r\n                </Link>\r\n                <Link\r\n                  color={'primary'}\r\n                  href={'https://flatlogic.com/about'}\r\n                  target={'_blank'}\r\n                  className={classes.link}\r\n                >\r\n                  About Us\r\n                </Link>\r\n                <Link\r\n                  color={'primary'}\r\n                  href={'https://flatlogic.com/blog'}\r\n                  target={'_blank'}\r\n                  className={classes.link}\r\n                >\r\n                  Blog\r\n                </Link>\r\n              </div> */}\r\n              {/* <div>\r\n                <Link\r\n                  href={'https://www.facebook.com/flatlogic'}\r\n                  target={'_blank'}\r\n                >\r\n                  <IconButton aria-label=\"facebook\">\r\n                    <Icon\r\n                      path={FacebookIcon}\r\n                      size={1}\r\n                      color=\"#6E6E6E99\"\r\n                    />\r\n                  </IconButton>\r\n                </Link>\r\n                <Link\r\n                  href={'https://twitter.com/flatlogic'}\r\n                  target={'_blank'}\r\n                >\r\n                  <IconButton aria-label=\"twitter\">\r\n                    <Icon\r\n                      path={TwitterIcon}\r\n                      size={1}\r\n                      color=\"#6E6E6E99\"\r\n                    />\r\n                  </IconButton>\r\n                </Link>\r\n                <Link\r\n                  href={'https://github.com/flatlogic'}\r\n                  target={'_blank'}\r\n                >\r\n                  <IconButton\r\n                    aria-label=\"github\"\r\n                    style={{marginRight: -12}}\r\n                  >\r\n                    <Icon\r\n                      path={GithubIcon}\r\n                      size={1}\r\n                      color=\"#6E6E6E99\"\r\n                    />\r\n                  </IconButton>\r\n                </Link>\r\n              </div> */}\r\n            </Box>\r\n          </div>\r\n        </>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(LoginLayout);\r\n","C:\\polls\\ui\\src\\pages\\error\\Error.js",[],"C:\\polls\\ui\\src\\components\\Layout\\Layout.js",["679","680","681","682","683","684","685","686"],"import React from \"react\";\r\nimport {\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n  withRouter,\r\n} from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\nimport District from \"../../pages/dashboard/District\"\r\nimport Constituency from \"../../pages/dashboard/Constituency\"\r\nimport Village from \"../../pages/dashboard/Village\"\r\nimport Booth from \"../../pages/dashboard/Booth\"\r\nimport Voter from \"../../pages/dashboard/Voter\"\r\nimport Track from \"../../pages/dashboard/Track\"\r\nimport Caste from \"../../pages/dashboard/Caste\"\r\nimport Party from \"../../pages/dashboard/Party\"\r\nimport Contact from \"../../pages/dashboard/Contact\"\r\nimport ProfileRegistration from \"../../pages/dashboard/ProfileRegistration\";\r\nimport RepresentiveContact from \"../../pages/dashboard/RepresentiveContact\"\r\nimport RepresentiveReports from \"../../pages/dashboard/RepresentiveReports\"\r\nimport VoterReport from \"../../pages/dashboard/voterreport\"\r\nimport ContactReports from \"../../pages/dashboard/ContactReports\"\r\nimport VoterData from \"../../pages/dashboard/VoterData\"\r\nimport OurVoter from \"../../pages/dashboard/OurVoter\"\r\nimport TrackVoters from \"../../pages/dashboard/TrackVoters\"\r\nimport {Box, IconButton, Link} from '@material-ui/core'\r\nimport Icon from '@mdi/react'\r\nimport {\r\n  mdiFacebook as FacebookIcon,\r\n  mdiTwitter as TwitterIcon,\r\n  mdiGithub as GithubIcon,\r\n} from '@mdi/js'\r\n\r\nimport useStyles from \"./styles\";\r\n\r\nimport Header from \"../Header\";\r\nimport Sidebar from \"../Sidebar\";\r\n\r\n// pages\r\n// import Dashboard from \"../../pages/dashboard/SchoolRegistration\";\r\nimport Typography from \"../../pages/typography\";\r\nimport Notifications from \"../../pages/notifications\";\r\nimport Maps from \"../../pages/maps\";\r\nimport Icons from \"../../pages/icons\";\r\nimport Charts from \"../../pages/charts\";\r\n// context\r\nimport { useLayoutState } from \"../../context/LayoutContext\";\r\nimport { Category } from \"@material-ui/icons\";\r\n\r\nfunction Layout(props) {\r\n  var classes = useStyles();\r\n\r\n  // global\r\n  var layoutState = useLayoutState();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        <>\r\n          <Header history={props.history} />\r\n          <Sidebar />\r\n          <div\r\n            className={classnames(classes.content, {\r\n              [classes.contentShift]: layoutState.isSidebarOpened,\r\n            })}\r\n          >\r\n            <div className={classes.fakeToolbar} />\r\n            <Switch>\r\n              <Route path=\"/app/district\" component={District} />\r\n              <Route path=\"/app/constituency\" component={Constituency} />\r\n              <Route path=\"/app/village\" component={Village} />\r\n              <Route path=\"/app/booth\" component={Booth} />\r\n              <Route path=\"/app/voter\" component={Voter} />\r\n              <Route path=\"/app/track\" component={Track} />\r\n              <Route path=\"/app/caste\" component={Caste} />\r\n              <Route path=\"/app/party\" component={Party} />\r\n              <Route path=\"/app/contact\" component={Contact} />\r\n              <Route path=\"/app/representivecontact\" component={RepresentiveContact} />\r\n              <Route path=\"/app/reportofvoter\" component={VoterReport} />\r\n              <Route path=\"/app/reportsofcontact\" component={ContactReports} />\r\n              <Route path=\"/app/representivereports\" component={RepresentiveReports} />\r\n              <Route path=\"/app/voterdata\" component={VoterData} />\r\n              <Route path=\"/app/ourvoter\" component={OurVoter} />\r\n              <Route path=\"/app/profileregistration\" component={ProfileRegistration} />\r\n              <Route path=\"/app/typography\" component={Typography} />\r\n              <Route path=\"/app/boothtrack\" component={TrackVoters} />\r\n              <Route path=\"/app/notifications\" component={Notifications} />\r\n              <Route\r\n                exact\r\n                path=\"/app/ui\"\r\n                render={() => <Redirect to=\"/app/ui/icons\" />}\r\n              />\r\n              <Route path=\"/app/ui/reportofactivities\" component={Icons} />\r\n              <Route path=\"/app/ui/charts\" component={Charts} />\r\n            </Switch>\r\n            <Box\r\n              mt={5}\r\n              width={\"100%\"}\r\n              display={\"flex\"}\r\n              alignItems={\"center\"}\r\n              justifyContent=\"space-between\"\r\n            >\r\n              {/* <div>\r\n                <Link\r\n                  color={'primary'}\r\n                  href={'https://flatlogic.com/'}\r\n                  target={'_blank'}\r\n                  className={classes.link}\r\n                >\r\n                  Flatlogic\r\n                </Link>\r\n                <Link\r\n                  color={'primary'}\r\n                  href={'https://flatlogic.com/about'}\r\n                  target={'_blank'}\r\n                  className={classes.link}\r\n                >\r\n                  About Us\r\n                </Link>\r\n                <Link\r\n                  color={'primary'}\r\n                  href={'https://flatlogic.com/blog'}\r\n                  target={'_blank'}\r\n                  className={classes.link}\r\n                >\r\n                  Blog\r\n                </Link>\r\n              </div> */}\r\n              {/* <div>\r\n                <Link\r\n                  href={'https://www.facebook.com/flatlogic'}\r\n                  target={'_blank'}\r\n                >\r\n                  <IconButton aria-label=\"facebook\">\r\n                    <Icon\r\n                      path={FacebookIcon}\r\n                      size={1}\r\n                      color=\"#6E6E6E99\"\r\n                    />\r\n                  </IconButton>\r\n                </Link>\r\n                <Link\r\n                  href={'https://twitter.com/flatlogic'}\r\n                  target={'_blank'}\r\n                >\r\n                  <IconButton aria-label=\"twitter\">\r\n                    <Icon\r\n                      path={TwitterIcon}\r\n                      size={1}\r\n                      color=\"#6E6E6E99\"\r\n                    />\r\n                  </IconButton>\r\n                </Link>\r\n                <Link\r\n                  href={'https://github.com/flatlogic'}\r\n                  target={'_blank'}\r\n                >\r\n                  <IconButton\r\n                    aria-label=\"github\"\r\n                    style={{marginRight: -12}}\r\n                  >\r\n                    <Icon\r\n                      path={GithubIcon}\r\n                      size={1}\r\n                      color=\"#6E6E6E99\"\r\n                    />\r\n                  </IconButton>\r\n                </Link>\r\n              </div> */}\r\n            </Box>\r\n          </div>\r\n        </>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Layout);\r\n","C:\\polls\\ui\\src\\pages\\login\\Login.js",[],"C:\\polls\\ui\\src\\services\\httpServices.js",[],"C:\\polls\\ui\\src\\components\\LoginHeader\\LoginHeader.js",["687","688","689","690","691","692","693","694","695","696","697","698","699","700","701","702","703","704","705","706","707","708","709","710","711"],"import React from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  InputBase,\r\n  Menu,\r\n  MenuItem,\r\n  Fab,\r\n  withStyles,\r\n  Button\r\n} from \"@material-ui/core\";\r\nimport { Grid, Card, Box, FormControl, Select, InputLabel, TextField } from \"@material-ui/core\";\r\nimport Login from \"../../pages/login/Login\";\r\nimport {\r\n\r\n  Link\r\n} from \"react-router-dom\";\r\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\r\n// import SchoolRegistration from \"../../pages/dashboard/SchoolRegistration\";\r\nimport {\r\n  Menu as MenuIcon,\r\n\r\n \r\n  Send as SendIcon,\r\n  ArrowBack as ArrowBackIcon\r\n} from \"@material-ui/icons\";\r\nimport { fade } from \"@material-ui/core/styles/colorManipulator\";\r\nimport classNames from \"classnames\";\r\n\r\nimport { Badge, Typography } from \"../Wrappers/Wrappers\";\r\n\r\nimport UserAvatar from \"../UserAvatar/UserAvatar\";\r\n\r\nconst messages = [\r\n  {\r\n    id: 0,\r\n    variant: \"warning\",\r\n    name: \"Jane Hew\",\r\n    message: \"Hey! How is it going?\",\r\n    time: \"9:32\"\r\n  },\r\n  {\r\n    id: 1,\r\n    variant: \"success\",\r\n    name: \"Lloyd Brown\",\r\n    message: \"Check out my new Dashboard\",\r\n    time: \"9:18\"\r\n  },\r\n  {\r\n    id: 2,\r\n    variant: \"primary\",\r\n    name: \"Mark Winstein\",\r\n    message: \"I want rearrange the appointment\",\r\n    time: \"9:15\"\r\n  },\r\n  {\r\n    id: 3,\r\n    variant: \"secondary\",\r\n    name: \"Liana Dutti\",\r\n    message: \"Good news from sale department\",\r\n    time: \"9:09\"\r\n  }\r\n];\r\n\r\n\r\n\r\n\r\nconst HeaderView = ({ classes, isSidebarOpened, toggleSidebar, ...props }) => (\r\n  <AppBar position=\"fixed\" className={classes.appBar} style={{backgroundColor : '#30875b'}}>\r\n    <Toolbar className={classes.toolbar} >\r\n      \r\n  \r\n      <Typography variant=\"h6\" weight=\"medium\" className={classes.logotype} style={{ fontSize:\"calc(2.142rem)\", fontWeight:\"600\"}}>Sure shot</Typography>\r\n      <div className={classes.grow} />\r\n    \r\n\r\n{/* \r\n  <Grid item xs>\r\n  <li  style={{ display:\"block\"}}>\r\n          <Link to=\"/montessori/schoolregistration\" style={{color:\"white\", textDecoration: \"none\"}}>Profile Registration</Link>\r\n          </li>\r\n  </Grid>\r\n  \r\n  <Grid item xs>\r\n  <li style={{ display:\"block\"}}>\r\n          <Link to=\"/montessori/login\" style={{color:\"white\", textDecoration: \"none\" }}>Login</Link>\r\n          </li>\r\n  </Grid> */}\r\n\r\n \r\n\r\n\r\n      \r\n\r\n\r\n   \r\n      \r\n\r\n     \r\n      <Menu\r\n        id=\"profile-menu\"\r\n        open={Boolean(props.profileMenu)}\r\n        anchorEl={props.profileMenu}\r\n        onClose={props.closeProfileMenu}\r\n        className={classes.headerMenu}\r\n        classes={{ paper: classes.profileMenu }}\r\n        disableAutoFocusItem\r\n      >\r\n        <div className={classes.profileMenuUser}>\r\n          <Typography variant=\"h4\" weight=\"medium\">\r\n            John Smith\r\n          </Typography>\r\n          <Typography\r\n            className={classes.profileMenuLink}\r\n            component=\"a\"\r\n            color=\"primary\"\r\n            href=\"https://flatlogic.com\"\r\n          >\r\n            Flalogic.com\r\n          </Typography>\r\n        </div>\r\n      \r\n       \r\n        <div className={classes.profileMenuUser}>\r\n          <Typography\r\n            className={classes.profileMenuLink}\r\n            color=\"primary\"\r\n            onClick={props.signOut}\r\n          >\r\n            Sign Out\r\n          </Typography>\r\n        </div>\r\n      </Menu>\r\n    </Toolbar>\r\n  </AppBar>\r\n);\r\n\r\nconst styles = theme => ({\r\n  logotype: {\r\n    color: \"white\",\r\n    marginLeft: theme.spacing.unit * 2.5,\r\n    marginRight: theme.spacing.unit * 2.5,\r\n    fontWeight: 500,\r\n    fontSize: 18,\r\n    whiteSpace: \"nowrap\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      display: \"none\"\r\n    }\r\n  },\r\n  appBar: {\r\n    width: \"100vw\",\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    })\r\n  },\r\n  toolbar: {\r\n    paddingLeft: theme.spacing.unit * 2,\r\n    paddingRight: theme.spacing.unit * 2\r\n  },\r\n  hide: {\r\n    display: \"none\"\r\n  },\r\n  grow: {\r\n    flexGrow: 1\r\n  },\r\n \r\n \r\n  \r\n  inputRoot: {\r\n    color: \"inherit\",\r\n    width: \"100%\"\r\n  },\r\n  inputInput: {\r\n    height: 36,\r\n    padding: 0,\r\n    paddingRight: 36 + theme.spacing.unit * 1.25,\r\n    width: \"100%\"\r\n  },\r\n  messageContent: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\"\r\n  },\r\n  headerMenu: {\r\n    marginTop: theme.spacing.unit * 7\r\n  },\r\n  headerMenuList: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\"\r\n  },\r\n  headerMenuItem: {\r\n    \"&:hover, &:focus\": {\r\n      backgroundColor: theme.palette.primary.main,\r\n      color: \"white\"\r\n    }\r\n  },\r\n  headerMenuButton: {\r\n    marginLeft: theme.spacing.unit * 2,\r\n    padding: theme.spacing.unit / 2\r\n  },\r\n  headerMenuButtonCollapse: {\r\n    marginRight: theme.spacing.unit * 2\r\n  },\r\n  headerIcon: {\r\n    fontSize: 28,\r\n    color: \"rgba(255, 255, 255, 0.35)\"\r\n  },\r\n  headerIconCollapse: {\r\n    color: \"white\"\r\n  },\r\n  profileMenu: {\r\n    minWidth: 265\r\n  },\r\n  profileMenuUser: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    padding: theme.spacing.unit * 2\r\n  },\r\n  profileMenuItem: {\r\n    color: theme.palette.text.hint\r\n  },\r\n  profileMenuIcon: {\r\n    marginRight: theme.spacing.unit * 2,\r\n    color: theme.palette.text.hint\r\n  },\r\n  profileMenuLink: {\r\n    fontSize: 16,\r\n    textDecoration: \"none\",\r\n    \"&:hover\": {\r\n      cursor: \"pointer\"\r\n    }\r\n  },\r\n \r\n \r\n  sendMessageButton: {\r\n    margin: theme.spacing.unit * 4,\r\n    marginTop: theme.spacing.unit * 2,\r\n    marginBottom: theme.spacing.unit * 2,\r\n    textTransform: \"none\"\r\n  },\r\n  sendButtonIcon: {\r\n    marginLeft: theme.spacing.unit * 2\r\n  }\r\n});\r\n\r\nexport default withStyles(styles)(HeaderView);\r\n","C:\\polls\\ui\\src\\pages\\login\\styles.js",[],"C:\\polls\\ui\\src\\components\\PageTitle\\PageTitle.js",[],"C:\\polls\\ui\\src\\components\\UserAvatar\\UserAvatar.js",[],"C:\\polls\\ui\\src\\components\\PageTitle\\styles.js",[],"C:\\polls\\ui\\src\\components\\Wrappers\\Wrappers.js",[],"C:\\polls\\ui\\src\\components\\UserAvatar\\styles.js",[],"C:\\polls\\ui\\src\\components\\Layout\\styles.js",[],"C:\\polls\\ui\\src\\pages\\error\\styles.js",[],"C:\\polls\\ui\\src\\components\\LoginLayout\\styles.js",[],"C:\\polls\\ui\\src\\pages\\dashboard\\Party.js",["712","713","714","715","716","717","718","719","720","721","722","723","724"],"import React, { useState } from \"react\";\r\nimport {\r\n    Button, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, InputLabel, MenuItem,\r\n    TableRow, Table,\r\n    TableHead,\r\n    TableBody,\r\n    TableCell\r\n} from \"@material-ui/core\";\r\nimport PartyService from \"./Locality/Service/partyService\";\r\nimport * as Yup from 'yup';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport { Grid, Select, TextField } from \"@material-ui/core\";\r\nimport { useFormik } from 'formik';\r\nimport {  useEffect } from 'react';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: \"#30875b\",\r\n        color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 200,\r\n    },\r\n}));\r\nexport default function Party() {\r\n    const tableHeaders = [ 'Party','Edit', 'Delete'];\r\n    const partyHeaders = [\r\n        {label: 'None',      value: 'None'},\r\n        {label: 'Congress',      value: 'Congress'},\r\n        {label: 'BRS', value: 'BRS'   },\r\n        {label: 'BJP', value: 'BJP'   },\r\n        {label: 'TDP', value: 'TDP'   },\r\n        {label: 'Neutral', value: 'Neutral'},\r\n    ];\r\n    const classes = useStyles();\r\n    const [partyList, setPartyList] = useState([]);\r\n    const [age, setAge] = React.useState('');\r\n    var [error, setError] = useState(null);\r\n    const [tabelIdList, setTabelIdList] = useState([]);\r\n    const [open, setOpen] = React.useState(false);\r\n    const [pg, setpg] = React.useState(0);\r\n    const [rpg, setrpg] = React.useState(5);\r\n    const [party, setParty] = useState({\r\n        party:'',\r\n    });\r\n    const validationSchema = Yup.object().shape({\r\n        party:Yup.string().required('Party is required'),\r\n    });\r\n    const handleChangePage=(event, newpage) =>{\r\n        setpg(newpage);\r\n    }\r\n    const handleChangeRowsPerPage=(event)=> {\r\n        setrpg(parseInt(event.target.value, 10));\r\n        setpg(0);\r\n    }\r\n    useEffect(() => {\r\n        getPartyList();\r\n        return () => {\r\n            setPartyList([]);\r\n        }\r\n    }, []);\r\n    const getPartyList = () => {\r\n        PartyService.getAllParty().then((res) => {\r\n            setPartyList(res);\r\n        }).catch((err) => {\r\n            // setError(err.message);\r\n        });\r\n    }\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const onclick = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const handleChange = (event) => {\r\n        setAge(event.target.value);\r\n    };\r\n    const onSubmit = data => {\r\n        console.log(JSON.stringify(data, null, 2));\r\n    };\r\n    const editParty = (party) => {\r\n        setParty(party);\r\n        handleOpen();\r\n    }\r\n    const deleteParty = (partydelete) => {\r\n        if (partydelete) {\r\n            PartyService.deleteParty(partydelete).then((res) => {\r\n                getPartyList();\r\n            }).catch((err) => {\r\n            });\r\n        }\r\n    };\r\n \r\n    const formik = useFormik({\r\n        initialValues: party,\r\n        enableReinitialize: true,\r\n        validationSchema: validationSchema,\r\n        onSubmit: (values, { resetForm }) => {\r\n            if (party._id) {\r\n                PartyService.upadeParty(values).then((res) => {\r\n                    handleClose();\r\n                    getPartyList();\r\n                    resetForm()\r\n                    alert(\"Party Updated Successfully.\");\r\n                }).catch((err) => {\r\n                });\r\n            }\r\n            else {\r\n                PartyService.creteParty(values).then((res) => {\r\n                    getPartyList();\r\n                    resetForm();\r\n                    handleClose();\r\n                    alert(\" Party Added Successfully.\");\r\n                    // props.history.push('/app/vendor');\r\n                })\r\n                    .catch((err) => {\r\n                        \r\n                        alert(err.response.data.message)\r\n                    })\r\n            }\r\n\r\n        },\r\n    });\r\n    return (\r\n        <>\r\n            <PageTitle title=\"Party\" button={<Button\r\n                variant=\"contained\" onClick={handleOpen}\r\n                size=\"medium\"\r\n                color=\"secondary\" style={{ backgroundColor: '#30875b' }}> Add Party\r\n            </Button>} />\r\n            <Grid container spacing={4}>\r\n                <Grid item xs={12}>\r\n                    <Widget title=\"\" upperTitle noBodyPadding bodyClass={classes.tableOverflow}>\r\n                        <Table className=\"mb-0\">\r\n                            <TableHead >\r\n                                <TableRow>\r\n                                    {tableHeaders.map(key => (\r\n                                        <StyledTableCell key={key}>{key}</StyledTableCell>\r\n                                    ))}\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {partyList.slice(pg * rpg, pg * rpg + rpg).map((party) => (\r\n                                    <TableRow key={party._id}>\r\n                                         <TableCell className=\"pl-3 fw-normal\" >{party.party }</TableCell>\r\n\r\n                                        <TableCell>\r\n                                            <EditIcon style={{ cursor: 'pointer' }} onClick={() => editParty(party)} >\r\n                                            </EditIcon >\r\n                                        </TableCell>\r\n                                        <TableCell>\r\n                                            <DeleteIcon style={{ cursor: 'pointer' }} onClick={() => deleteParty(party)} />\r\n                                        </TableCell>\r\n        \r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                        <TablePagination\r\n                            component=\"div\"\r\n                            rowsPerPageOptions={[5,  100,1000]}\r\n                            count={partyList.length}\r\n                            page={pg}\r\n                            onPageChange={handleChangePage}\r\n                            rowsPerPage={rpg}\r\n                            onRowsPerPageChange={handleChangeRowsPerPage}\r\n                        />\r\n                    </Widget>\r\n                </Grid>\r\n            </Grid>\r\n            <Dialog open={open} onClose={handleClose}>\r\n                <DialogTitle>Add Party</DialogTitle>\r\n                <form onSubmit={formik.handleSubmit} >\r\n                    <DialogContent style= {{ width: 308 }}>\r\n                    <TextField\r\n                                           \r\n                                           style={{ width: 258 }}\r\n                                           id=\"party\"\r\n                                           name=\"party\"\r\n                                           label=\"Party\"\r\n                                           type=\"text\"\r\n                                         \r\n                                           onChange={formik.handleChange}\r\n                                           value={formik.values.party}\r\n                                           error={formik.touched.party && Boolean(formik.errors.party)}\r\n                                           helperText={formik.touched.party && formik.errors.party}\r\n                                       />\r\n                    {/* <FormControl className={classes.formControl}\r\n                      fullWidth=\"true\" >\r\n                      <InputLabel id=\"demo-simple-select-label\">Select Party</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"party\"\r\n                        name=\"party\"\r\n                        label=\"Party\"\r\n                        onChange={formik.handleChange}\r\n                        value={formik.values.party}\r\n                        error={formik.touched.caste && Boolean(formik.errors.party)}\r\n                        helperText={formik.touched.party && formik.errors.party}\r\n                      >\r\n                       \r\n                        {partyHeaders?.map(partyHeaders => {\r\n              return (\r\n                <MenuItem key={partyHeaders.value} value={partyHeaders.value}>\r\n                  {partyHeaders.label ?? partyHeaders.value}\r\n                </MenuItem>\r\n              );\r\n          })}\r\n                       \r\n                      </Select>\r\n                    </FormControl> */}\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={handleClose}>Cancel</Button>\r\n                        <Button type=\"submit\">Add</Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n","C:\\polls\\ui\\src\\pages\\dashboard\\Caste.js",["725","726","727","728","729","730","731","732","733","734","735","736","737"],"import React, { useState } from \"react\";\r\nimport {\r\n    Button, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, InputLabel, MenuItem,\r\n    TableRow, Table,\r\n    TableHead,\r\n    TableBody,\r\n    TableCell\r\n} from \"@material-ui/core\";\r\nimport CasteService from \"./Locality/Service/casteService\";\r\nimport * as Yup from 'yup';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport { Grid, Select, TextField } from \"@material-ui/core\";\r\nimport { useFormik } from 'formik';\r\nimport {  useEffect } from 'react';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: \"#30875b\",\r\n        color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 200,\r\n    },\r\n}));\r\nexport default function Caste() {\r\n    const tableHeaders = [ 'Caste','Edit', 'Delete'];\r\n    const casteHeaders = [\r\n        {label: 'None',      value: 'None'},\r\n        {label: 'Goldsmith',      value: 'Goldsmith'},\r\n        {label: 'Carpentry', value: 'Carpentry'   },\r\n        {label: 'Dhobhi', value: 'Dhobhi'   },\r\n        {label: 'SC-mala', value: 'SC-mala'   },\r\n        {label: 'SC–madiga', value: 'SC–madiga'},\r\n        {label: 'Reddy', value: 'Reddy'},\r\n    ];\r\n    const classes = useStyles();\r\n    const [casteList, setCasteList] = useState([]);\r\n    const [age, setAge] = React.useState('');\r\n    var [error, setError] = useState(null);\r\n    const [tabelIdList, setTabelIdList] = useState([]);\r\n    const [open, setOpen] = React.useState(false);\r\n    const [pg, setpg] = React.useState(0);\r\n    const [rpg, setrpg] = React.useState(5);\r\n    const [caste, setCaste] = useState({\r\n        caste:'',\r\n     \r\n    });\r\n    const validationSchema = Yup.object().shape({\r\n        caste:Yup.string().required('Caste is required'),\r\n  \r\n    });\r\n    const handleChangePage=(event, newpage) =>{\r\n        setpg(newpage);\r\n    }\r\n    const handleChangeRowsPerPage=(event)=> {\r\n        setrpg(parseInt(event.target.value, 10));\r\n        setpg(0);\r\n    }\r\n    useEffect(() => {\r\n        getCasteList();\r\n        return () => {\r\n            setCasteList([]);\r\n        }\r\n    }, []);\r\n    const getCasteList = () => {\r\n        CasteService.getAllCaste().then((res) => {\r\n            setCasteList(res);\r\n        }).catch((err) => {\r\n            // setError(err.message);\r\n        });\r\n    }\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const onclick = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const handleChange = (event) => {\r\n        setAge(event.target.value);\r\n    };\r\n    const onSubmit = data => {\r\n        console.log(JSON.stringify(data, null, 2));\r\n    };\r\n    const editCaste = (caste) => {\r\n        setCaste(caste);\r\n        handleOpen();\r\n    }\r\n    const deleteCaste = (castedelete) => {\r\n        if (castedelete) {\r\n            CasteService.deleteCaste(castedelete).then((res) => {\r\n                getCasteList();\r\n            }).catch((err) => {\r\n            });\r\n        }\r\n    };\r\n \r\n    const formik = useFormik({\r\n        initialValues: caste,\r\n        enableReinitialize: true,\r\n        validationSchema: validationSchema,\r\n        onSubmit: (values, { resetForm }) => {\r\n            if (caste._id) {\r\n                CasteService.upadeCaste(values).then((res) => {\r\n                    handleClose();\r\n                    getCasteList();\r\n                    resetForm()\r\n                    alert(\"Caste Updated Successfully.\");\r\n                }).catch((err) => {\r\n                });\r\n            }\r\n            else {\r\n                CasteService.creteCaste(values).then((res) => {\r\n                    getCasteList();\r\n                    resetForm();\r\n                    handleClose();\r\n                    alert(\" Caste Added Successfully.\");\r\n                    // props.history.push('/app/vendor');\r\n                })\r\n                    .catch((err) => {\r\n                        \r\n                        alert(err.response.data.message)\r\n                    })\r\n            }\r\n\r\n        },\r\n    });\r\n    return (\r\n        <>\r\n            <PageTitle title=\"Caste\" button={<Button\r\n                variant=\"contained\" onClick={handleOpen}\r\n                size=\"medium\"\r\n                color=\"secondary\" style={{ backgroundColor: '#30875b' }}> Add Caste\r\n            </Button>} />\r\n            <Grid container spacing={4}>\r\n                <Grid item xs={12}>\r\n                    <Widget title=\"\" upperTitle noBodyPadding bodyClass={classes.tableOverflow}>\r\n                        <Table className=\"mb-0\">\r\n                            <TableHead >\r\n                                <TableRow>\r\n                                    {tableHeaders.map(key => (\r\n                                        <StyledTableCell key={key}>{key}</StyledTableCell>\r\n                                    ))}\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {casteList.slice(pg * rpg, pg * rpg + rpg).map((caste) => (\r\n                                    <TableRow key={caste._id}>\r\n                                         <TableCell className=\"pl-3 fw-normal\" >{caste.caste }</TableCell>\r\n\r\n                                        <TableCell>\r\n                                            <EditIcon style={{ cursor: 'pointer' }} onClick={() => editCaste(caste)} >\r\n                                            </EditIcon >\r\n                                        </TableCell>\r\n                                        <TableCell>\r\n                                            <DeleteIcon style={{ cursor: 'pointer' }} onClick={() => deleteCaste(caste)} />\r\n                                        </TableCell>\r\n        \r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                        <TablePagination\r\n                            component=\"div\"\r\n                            rowsPerPageOptions={[5,  50, 100, 1000 ]}\r\n                            count={casteList.length}\r\n                            page={pg}\r\n                            onPageChange={handleChangePage}\r\n                            rowsPerPage={rpg}\r\n                            onRowsPerPageChange={handleChangeRowsPerPage}\r\n                        />\r\n                    </Widget>\r\n                </Grid>\r\n            </Grid>\r\n            <Dialog open={open} onClose={handleClose}>\r\n                <DialogTitle>Add Caste</DialogTitle>\r\n                <form onSubmit={formik.handleSubmit} >\r\n                    <DialogContent style= {{ width: 308 }}>\r\n                    <TextField\r\n                                           \r\n                                            style={{ width: 258 }}\r\n                                            id=\"caste\"\r\n                                            name=\"caste\"\r\n                                            label=\"Caste \"\r\n                                            type=\"text\"\r\n                                            min=\"2016-11-10\"\r\n                                            onChange={formik.handleChange}\r\n                                            value={formik.values.caste}\r\n                                            error={formik.touched.caste && Boolean(formik.errors.caste)}\r\n                                            helperText={formik.touched.caste && formik.errors.caste}\r\n                                        />\r\n                    {/* <FormControl className={classes.formControl}\r\n                      fullWidth=\"true\" >\r\n                      <InputLabel id=\"demo-simple-select-label\">Select Caste</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"caste\"\r\n                        name=\"caste\"\r\n                        label=\"Caste\"\r\n                        onChange={formik.handleChange}\r\n                        value={formik.values.caste}\r\n                        error={formik.touched.caste && Boolean(formik.errors.caste)}\r\n                        helperText={formik.touched.caste && formik.errors.caste}\r\n                      >\r\n                       {casteHeaders?.map(casteHeaders => {\r\n              return (\r\n                <MenuItem key={casteHeaders.value} value={casteHeaders.value}>\r\n                  {casteHeaders.label ?? casteHeaders.value}\r\n                </MenuItem>\r\n              );\r\n          })}\r\n                      </Select>\r\n                    </FormControl> */}\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={handleClose}>Cancel</Button>\r\n                        <Button type=\"submit\">Add</Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n","C:\\polls\\ui\\src\\pages\\dashboard\\District.js",["738","739","740","741","742","743","744","745","746","747","748","749"],"import React, { useState } from \"react\";\r\nimport {\r\n    Button, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, InputLabel, MenuItem,\r\n    TableRow, Table,\r\n    TableHead,\r\n    TableBody,\r\n    TableCell\r\n} from \"@material-ui/core\";\r\nimport DistrictService from \"./Locality/Service/districtService\";\r\nimport * as Yup from 'yup';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport { Grid, Select, TextField } from \"@material-ui/core\";\r\nimport { useFormik } from 'formik';\r\nimport {  useEffect } from 'react';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: \"#30875b\",\r\n        color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 200,\r\n    },\r\n}));\r\nexport default function District() {\r\n    const tableHeaders = [ 'District','Edit', 'Delete'];\r\n    const classes = useStyles();\r\n    const [districtList, setDistrictList] = useState([]);\r\n    const [age, setAge] = React.useState('');\r\n    var [error, setError] = useState(null);\r\n    const [tabelIdList, setTabelIdList] = useState([]);\r\n    const [open, setOpen] = React.useState(false);\r\n    const [pg, setpg] = React.useState(0);\r\n    const [rpg, setrpg] = React.useState(5);\r\n    const [district, setDistrict] = useState({\r\n        district:'',\r\n     \r\n    });\r\n    const validationSchema = Yup.object().shape({\r\n        district:Yup.string().required('district is required'),\r\n  \r\n    });\r\n    const handleChangePage=(event, newpage) =>{\r\n        setpg(newpage);\r\n    }\r\n    const handleChangeRowsPerPage=(event)=> {\r\n        setrpg(parseInt(event.target.value, 10));\r\n        setpg(0);\r\n    }\r\n    useEffect(() => {\r\n        getDistrictList();\r\n        return () => {\r\n            setDistrictList([]);\r\n        }\r\n    }, []);\r\n    const getDistrictList = () => {\r\n        DistrictService.getAllDistrict().then((res) => {\r\n            setDistrictList(res);\r\n        }).catch((err) => {\r\n            // setError(err.message);\r\n        });\r\n    }\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const onclick = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const handleChange = (event) => {\r\n        setAge(event.target.value);\r\n    };\r\n    const onSubmit = data => {\r\n        console.log(JSON.stringify(data, null, 2));\r\n    };\r\n    const editDistrict = (district) => {\r\n        setDistrict(district);\r\n        handleOpen();\r\n    }\r\n \r\n    const deleteDistrict = (districtdelete) => {\r\n        if (districtdelete) {\r\n            DistrictService.deleteDistrict(districtdelete).then((res) => {\r\n                getDistrictList();\r\n            }).catch((err) => {\r\n            });\r\n        }\r\n    };\r\n \r\n    const formik = useFormik({\r\n        initialValues: district,\r\n        enableReinitialize: true,\r\n        validationSchema: validationSchema,\r\n        onSubmit: (values, { resetForm }) => {\r\n            if (district._id) {\r\n                DistrictService.upadeDistrict(values).then((res) => {\r\n                    \r\n                    handleClose();\r\n                    getDistrictList();\r\n                    resetForm()\r\n                    alert(\"District Updated Successfully.\");\r\n                }).catch((err) => {\r\n                });\r\n            }\r\n            else {\r\n                DistrictService.creteDistrict(values).then((res) => {\r\n                    \r\n                    getDistrictList();\r\n                    resetForm();\r\n                    handleClose();\r\n                    alert(\" District Added Successfully.\");\r\n                    // props.history.push('/app/vendor');\r\n                })\r\n                    .catch((err) => {\r\n                        \r\n                        alert(err.response.data.message)\r\n                    })\r\n            }\r\n\r\n        },\r\n    });\r\n    return (\r\n        <>\r\n            <PageTitle title=\"District\" button={<Button\r\n                variant=\"contained\" onClick={handleOpen}\r\n                size=\"medium\"\r\n                color=\"secondary\" style={{ backgroundColor: '#30875b' }}> Add District\r\n            </Button>} />\r\n            <Grid container spacing={4}>\r\n                <Grid item xs={12}>\r\n                    <Widget title=\"\" upperTitle noBodyPadding bodyClass={classes.tableOverflow}>\r\n                        <Table className=\"mb-0\">\r\n                            <TableHead >\r\n                                <TableRow>\r\n                                    {tableHeaders.map(key => (\r\n                                        <StyledTableCell key={key}>{key}</StyledTableCell>\r\n                                    ))}\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {districtList.slice(pg * rpg, pg * rpg + rpg).map((district) => (\r\n                                    <TableRow key={district._id}>\r\n                                         <TableCell className=\"pl-3 fw-normal\" >{district.district }</TableCell>\r\n\r\n                                        <TableCell>\r\n                                            <EditIcon style={{ cursor: 'pointer' }} onClick={() => editDistrict(district)} >\r\n                                            </EditIcon >\r\n                                        </TableCell>\r\n                                        <TableCell>\r\n                                            <DeleteIcon style={{ cursor: 'pointer' }} onClick={() => deleteDistrict(district)} />\r\n                                        </TableCell>\r\n        \r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                        <TablePagination\r\n                            component=\"div\"\r\n                            rowsPerPageOptions={[5,  100,1000]}\r\n                            count={districtList.length}\r\n                            page={pg}\r\n                            onPageChange={handleChangePage}\r\n                            rowsPerPage={rpg}\r\n                            onRowsPerPageChange={handleChangeRowsPerPage}\r\n                        />\r\n                    </Widget>\r\n                </Grid>\r\n            </Grid>\r\n            <Dialog open={open} onClose={handleClose}>\r\n                <DialogTitle>Add District</DialogTitle>\r\n                <form onSubmit={formik.handleSubmit} >\r\n                    <DialogContent style= {{ width: 308 }}>\r\n                    \r\n                        <TextField\r\n                            InputProps={{ style: { width: 258 } }}\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"district\"\r\n                            name=\"district\"\r\n                            label=\"District\"\r\n                            type=\"text\"\r\n                            variant=\"standard\"\r\n                            value={formik.values.district}\r\n                            onChange={formik.handleChange}\r\n                            error={formik.touched.district && Boolean(formik.errors.district)}\r\n                            helperText={formik.touched.district && formik.errors.district}\r\n                        />  \r\n                       \r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={handleClose}>Cancel</Button>\r\n                        <Button type=\"submit\">Add</Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n","C:\\polls\\ui\\src\\pages\\dashboard\\ContactReports.js",["750","751","752","753","754","755","756","757","758","759","760","761","762","763","764","765","766","767","768","769","770","771","772","773","774","775"],"import React, { useState } from \"react\";\r\nimport {\r\n    Button, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, InputLabel, MenuItem,\r\n    TableRow, Table,\r\n    TableHead,\r\n    TableBody,\r\n    Card,\r\n    TableCell,\r\n} from \"@material-ui/core\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport ContactService from \"./Locality/Service/contactService\";\r\nimport DistrictService from \"./Locality/Service/districtService\";\r\nimport ConstituencyService from \"./Locality/Service/constituencyService\";\r\nimport VillageService from \"./Locality/Service/villageService\";\r\nimport BoothService from \"./Locality/Service/boothService\";\r\nimport VoterService from \"./Locality/Service/voterService\";\r\nimport * as Yup from 'yup';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport { Grid, Select, TextField } from \"@material-ui/core\";\r\nimport { useFormik } from 'formik';\r\nimport { useEffect } from 'react';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: \"#30875b\",\r\n        color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 200,\r\n    },\r\n}));\r\nexport default function ContactReports() {\r\n    const tableHeaders = [ 'Village','Name','Mobile Number','Caste','Party','Ward',];\r\n    const classes = useStyles();\r\n    const [contactList, setContactList] = useState([]);\r\n    const [districtList, setDistrictList] = useState([]);\r\n    const [constituencyList, setConstituencyList] = useState([]);\r\n    const [villageList, setVillageList] = useState([]);\r\n    const [voterList, setVoterList] = useState([]);\r\n    const [boothList, setBoothList] = useState([]);\r\n    const [age, setAge] = React.useState('');\r\n    var [villageId, setVillageId] = useState(\"\");\r\n    var [casteId, setCasteId] = useState(\"\");\r\n    var [partyId, setPartyId] = useState(\"\");\r\n    var [error, setError] = useState(null);\r\n    var [constituencyId, setConstituencyId] = useState(\"\");\r\n    const [tabelIdList, setTabelIdList] = useState([]);\r\n    const [open, setOpen] = React.useState(false);\r\n    const [pg, setpg] = React.useState(0);\r\n    const [rpg, setrpg] = React.useState(5);\r\n    const [activityIdList, setActivityIdList] = useState([]);\r\n    const [contact, setContact] = useState({\r\n        districtId: '',\r\n        constituencyId: '',\r\n        villageId:'',\r\n        countId:'',\r\n        voter:'',\r\n    });\r\n    const validationSchema = Yup.object().shape({\r\n        districtId: Yup.string().required('district is required'),\r\n        constituencyId: Yup.string().required('constituency is required'),\r\n        villageId: Yup.string().required('village is required'),\r\n        countId:Yup.string().required('count is required'),\r\n        voter:Yup.string().required('count is required'),\r\n    });\r\n    const handleChangePage = (event, newpage) => {\r\n        setpg(newpage);\r\n    }\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setrpg(parseInt(event.target.value, 10));\r\n        setpg(0);\r\n    }\r\n    useEffect(() => {\r\n        getVillageList();\r\n        getVoterList();\r\n        getContactList();\r\n        getDistrictList();\r\n        return () => {\r\n            setContactList([]);\r\n            setVillageList([]);\r\n            setVoterList([]);\r\n            setDistrictList([]);\r\n            setConstituencyList([]);\r\n        }\r\n    }, []);\r\n    const getContactList = () => {\r\n        ContactService.getAllContact().then((res) => {\r\n            setContactList(res);\r\n            \r\n        }).catch((err) => {\r\n            setError(err.message);\r\n        });\r\n    }\r\n    const getVillageList = (event,obj) => {\r\n        VillageService.getAllVillage().then((res) => {\r\n            setVillageList(res);\r\n        }).catch((err) => {\r\n            setError(err.message);\r\n        });\r\n    }\r\n\r\n    const getVoterList = () => {\r\n        VoterService.getAllVoter().then((res) => {\r\n            setVoterList(res);\r\n        }).catch((err) => {\r\n            setError(err.message);\r\n        });\r\n    }\r\n \r\n   \r\n    const getConstituencyList = (destId) => {\r\n        const disListI = { districtId: destId };\r\n          ConstituencyService.getConstituencyByDistrictId(disListI).then((res) => {\r\n             \r\n              setConstituencyList(res);\r\n             \r\n          }).catch((err) => {\r\n              setError(err.message);\r\n          });\r\n      }\r\n      const getDistrictList = () => {\r\n        DistrictService.getAllDistrict().then((res) => {\r\n            setDistrictList(res);\r\n        }).catch((err) => {\r\n            // setError(err.message);\r\n        });\r\n    }\r\n    const onSubmit = data => {\r\n        const keys = {   \"villageId\": villageId, \"casteId\":casteId, \"partyId\":partyId}\r\n        ContactService.findContactList(keys).then((res) => {\r\n            // excelExport(res);\r\n            debugger\r\n            setContactList(res);\r\n            \r\n        }).catch((err) => {\r\n            console.error(err)\r\n            // setError(err.message);\r\n        });\r\n\r\n    };\r\n    return (\r\n        <>\r\n                <PageTitle title=\"Contact Reports\"  />\r\n            <Card sx={{ maxWidth: 345 }}>\r\n                <Box   >\r\n                    <div >\r\n                        <form >\r\n                            <Grid container spacing={2} columns={12} style={{ margin: 10 }}  >\r\n                            <Grid item xs={12} sm={3} md={3} >\r\n                                <FormControl variant=\"standard\" fullWidth=\"true\" >\r\n                            <InputLabel id=\"demo-simple-select-standard-label\">District</InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-standard-label\"\r\n                                id=\"demo-simple-select-standard\"\r\n                                InputProps={{ style: { width: 258 } }}\r\n                                autoFocus\r\n                                margin=\"dense\"\r\n                                name=\"districtId\"\r\n                                label=\"District\"\r\n                                type=\"text\"\r\n                                variant=\"standard\"\r\n                                onChange={e => {getConstituencyList(e.target.value)}}\r\n                                \r\n                            >\r\n                                <MenuItem value=\"\">\r\n                                    <em>None</em>\r\n                                </MenuItem>\r\n                                {districtList.map(({ _id, district }) => (\r\n                                    <MenuItem key={_id} value={_id}>{district}</MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={3} md={3} >\r\n                                <FormControl variant=\"standard\" fullWidth=\"true\" >\r\n                            <InputLabel id=\"demo-simple-select-standard-label\">Constituency </InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-standard-label\"\r\n                                id=\"demo-simple-select-standard\"\r\n                                InputProps={{ style: { width: 258 } }}\r\n                                margin=\"dense\"\r\n                                name=\"constituencyId\"\r\n                                label=\"Constituency\"\r\n                                type=\"text\"\r\n                                variant=\"standard\"\r\n                                value={constituencyId}\r\n                                onChange={e => { setConstituencyId(e.target.value) }}\r\n                             \r\n                             \r\n                            >\r\n                                <MenuItem value=\"\">\r\n                                    <em>None</em>\r\n                                </MenuItem>\r\n                                {constituencyList.map(({ _id, constituency }) => (\r\n                                    <MenuItem key={_id} value={_id}>{constituency}</MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={3} md={3}>\r\n                                <FormControl variant=\"standard\" fullWidth=\"true\">\r\n                            <InputLabel id=\"demo-simple-select-standard-label\">Village </InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-standard-label\"\r\n                                id=\"demo-simple-select-standard\"\r\n                                InputProps={{ style: { width: 258 } }}\r\n                                margin=\"dense\"\r\n                                name=\"villageId\"\r\n                                label=\"Village\"\r\n                                type=\"text\"\r\n                                variant=\"standard\"\r\n                                value={villageId}\r\n                                onChange={e => { setVillageId(e.target.value) }}\r\n                            >\r\n                                <MenuItem value=\"\">\r\n                                    <em>None</em>\r\n                                </MenuItem>\r\n                                {villageList.map(({ _id, village }) => (\r\n                                    <MenuItem key={_id} value={_id}>{village}</MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                                </Grid>\r\n                               \r\n                                <Grid item xs={12} sm={3} md={3} >\r\n                                    <Button style={{ backgroundColor: 'rgb(48 135 91)', color: 'white' }}\r\n                                        type=\"button\"\r\n                                        onClick={() => onSubmit()} variant=\"contained\"\r\n                                    >\r\n                                        Search</Button>\r\n                                </Grid>\r\n                               \r\n                            </Grid>\r\n                        </form>\r\n                    </div>\r\n                </Box>\r\n            </Card>\r\n            <Grid container spacing={4}>\r\n                <Grid item xs={12}>\r\n                    <Widget title=\"\" upperTitle noBodyPadding bodyClass={classes.tableOverflow}>\r\n                        <Table className=\"mb-0\">\r\n                            <TableHead >\r\n                                <TableRow>\r\n                                    {tableHeaders.map(key => (\r\n                                        <StyledTableCell key={key}>{key}</StyledTableCell>\r\n                                    ))}\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {contactList.slice(pg * rpg, pg * rpg + rpg).map((contact) => (\r\n                                    <TableRow key={contact._id}>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{contact.villageId?.village}</TableCell>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{contact.name}</TableCell>\r\n                              <TableCell className=\"pl-3 fw-normal\" >{contact.mobile}</TableCell>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{contact.casteId?.caste}</TableCell>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{contact.partyId?.party}</TableCell>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{contact.significance}</TableCell>              \r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                        <TablePagination\r\n                            component=\"div\"\r\n                            rowsPerPageOptions={[5,  100,1000 ]}\r\n                            count={contactList.length}\r\n                            page={pg}\r\n                            onPageChange={handleChangePage}\r\n                            rowsPerPage={rpg}\r\n                            onRowsPerPageChange={handleChangeRowsPerPage}\r\n                        />\r\n                    </Widget>\r\n                </Grid>\r\n            </Grid>\r\n          \r\n        </>\r\n    );\r\n}\r\n\r\n\r\n","C:\\polls\\ui\\src\\pages\\dashboard\\RepresentiveReports.js",["776","777","778","779","780","781","782","783","784","785","786","787","788","789","790","791","792","793","794","795","796","797","798","799","800","801","802","803"],"import React, { useState } from \"react\";\r\nimport {\r\n    Button, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, InputLabel, MenuItem,\r\n    TableRow, Table,\r\n    TableHead,\r\n    TableBody,\r\n    Card,\r\n    TableCell,\r\n} from \"@material-ui/core\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport RepresentiveContactService from \"./Locality/Service/representiveContact\";\r\nimport DistrictService from \"./Locality/Service/districtService\";\r\nimport ConstituencyService from \"./Locality/Service/constituencyService\";\r\nimport VillageService from \"./Locality/Service/villageService\";\r\nimport BoothService from \"./Locality/Service/boothService\";\r\nimport VoterService from \"./Locality/Service/voterService\";\r\nimport * as Yup from 'yup';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport { Grid, Select, TextField } from \"@material-ui/core\";\r\nimport { useFormik } from 'formik';\r\nimport { useEffect } from 'react';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: \"#30875b\",\r\n        color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 200,\r\n    },\r\n}));\r\nexport default function RepresentiveReports() {\r\n    const tableHeaders = [ 'Village','Booth','Name','Caste','Party','Ward','Designation'];\r\n    const classes = useStyles();\r\n    const [districtList, setDistrictList] = useState([]);\r\n    var [constituencyId, setConstituencyId] = useState(\"\");\r\n    const [representiveContactList, setRepresentiveContactList] = useState([]);\r\n    const [constituencyList, setConstituencyList] = useState([]);\r\n    const [villageList, setVillageList] = useState([]);\r\n    const [voterList, setVoterList] = useState([]);\r\n    const [boothList, setBoothList] = useState([]);\r\n    const [age, setAge] = React.useState('');\r\n    var [villageId, setVillageId] = useState(\"\");\r\n    var [casteId, setCasteId] = useState(\"\");\r\n    var [partyId, setPartyId] = useState(\"\");\r\n    var [error, setError] = useState(null);\r\n    \r\n    const [tabelIdList, setTabelIdList] = useState([]);\r\n    const [open, setOpen] = React.useState(false);\r\n    const [pg, setpg] = React.useState(0);\r\n    const [rpg, setrpg] = React.useState(5);\r\n    const [activityIdList, setActivityIdList] = useState([]);\r\n    const [representiveContact, setRepresentiveContact] = useState({\r\n        districtId: '',\r\n        constituencyId: '',\r\n        villageId:'',\r\n        countId:'',\r\n        voter:'',\r\n    });\r\n    const validationSchema = Yup.object().shape({\r\n        districtId: Yup.string().required('district is required'),\r\n        constituencyId: Yup.string().required('constituency is required'),\r\n        villageId: Yup.string().required('village is required'),\r\n        countId:Yup.string().required('count is required'),\r\n        voter:Yup.string().required('count is required'),\r\n    });\r\n    const handleChangePage = (event, newpage) => {\r\n        setpg(newpage);\r\n    }\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setrpg(parseInt(event.target.value, 10));\r\n        setpg(0);\r\n    }\r\n    useEffect(() => {\r\n        getVillageList();\r\n        getVoterList();\r\n       \r\n        getDistrictList();\r\n        getRepresentiveContactList();\r\n        return () => {\r\n            setRepresentiveContactList([]);\r\n            setVillageList([]);\r\n            setVoterList([]);\r\n            setDistrictList([]);\r\n            setConstituencyList([]);\r\n        }\r\n    }, []);\r\n    const getRepresentiveContactList = () => {\r\n        RepresentiveContactService.getAllRepresentiveContact().then((res) => {\r\n            setRepresentiveContactList(res);\r\n        }).catch((err) => {\r\n            setError(err.message);\r\n        });\r\n    }\r\n    const getVillageList = (event,obj) => {\r\n        VillageService.getAllVillage().then((res) => {\r\n            setVillageList(res);\r\n           \r\n        }).catch((err) => {\r\n            setError(err.message);\r\n        });\r\n    }\r\n\r\n    const getVoterList = () => {\r\n        VoterService.getAllVoter().then((res) => {\r\n            setVoterList(res);\r\n        }).catch((err) => {\r\n            setError(err.message);\r\n        });\r\n    }\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const onclick = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const handleChange = (event) => {\r\n        setAge(event.target.value);\r\n    };\r\n    const getConstituencyList = (destId) => {\r\n        const disListI = { districtId: destId };\r\n          ConstituencyService.getConstituencyByDistrictId(disListI).then((res) => {\r\n             \r\n              setConstituencyList(res);\r\n             \r\n          }).catch((err) => {\r\n              setError(err.message);\r\n          });\r\n      }\r\n      const getDistrictList = () => {\r\n        DistrictService.getAllDistrict().then((res) => {\r\n            setDistrictList(res);\r\n        }).catch((err) => {\r\n            // setError(err.message);\r\n        });\r\n    }\r\n    const onSubmit = data => {\r\n        const keys = {   \"villageId\": villageId, \"casteId\":casteId, \"partyId\":partyId}\r\n        RepresentiveContactService.findRepresentiveContactList(keys).then((res) => {\r\n            // excelExport(res);\r\n            setRepresentiveContactList(res);\r\n        }).catch((err) => {\r\n            console.error(err)\r\n            // setError(err.message);\r\n        });\r\n\r\n    };\r\n    return (\r\n        <>\r\n                <PageTitle title=\"Representive Reports\"  />\r\n            <Card sx={{ maxWidth: 345 }}>\r\n                <Box   >\r\n                    <div >\r\n                        <form >\r\n                            <Grid container spacing={2} columns={12} style={{ margin: 10 }}  >\r\n                            <Grid item xs={12} sm={3} md={3} >\r\n                                <FormControl variant=\"standard\" fullWidth=\"true\" >\r\n                            <InputLabel id=\"demo-simple-select-standard-label\">District</InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-standard-label\"\r\n                                id=\"demo-simple-select-standard\"\r\n                                InputProps={{ style: { width: 258 } }}\r\n                                autoFocus\r\n                                margin=\"dense\"\r\n                                name=\"districtId\"\r\n                                label=\"District\"\r\n                                type=\"text\"\r\n                                variant=\"standard\"\r\n                                onChange={e => {getConstituencyList(e.target.value)}}\r\n                                \r\n                            >\r\n                                <MenuItem value=\"\">\r\n                                    <em>None</em>\r\n                                </MenuItem>\r\n                                {districtList.map(({ _id, district }) => (\r\n                                    <MenuItem key={_id} value={_id}>{district}</MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={3} md={3} >\r\n                                <FormControl variant=\"standard\" fullWidth=\"true\" >\r\n                            <InputLabel id=\"demo-simple-select-standard-label\">Constituency </InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-standard-label\"\r\n                                id=\"demo-simple-select-standard\"\r\n                                InputProps={{ style: { width: 258 } }}\r\n                                margin=\"dense\"\r\n                                name=\"constituencyId\"\r\n                                label=\"Constituency\"\r\n                                type=\"text\"\r\n                                variant=\"standard\"\r\n                                value={constituencyId}\r\n                                onChange={e => { setConstituencyId(e.target.value) }}\r\n                               \r\n                             \r\n                            >\r\n                                <MenuItem value=\"\">\r\n                                    <em>None</em>\r\n                                </MenuItem>\r\n                                {constituencyList.map(({ _id, constituency }) => (\r\n                                    <MenuItem key={_id} value={_id}>{constituency}</MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={3} md={3} >\r\n                                <FormControl variant=\"standard\" fullWidth=\"true\" >\r\n                            <InputLabel id=\"demo-simple-select-standard-label\">Village </InputLabel>\r\n                            <Select\r\n                            InputProps={{ style: { width: 258 } }}\r\n                                labelId=\"demo-simple-select-standard-label\"\r\n                                id=\"demo-simple-select-standard\"\r\n                                margin=\"dense\"\r\n                                name=\"villageId\"\r\n                                label=\"Village\"\r\n                                type=\"text\"\r\n                                variant=\"standard\"\r\n                                value={villageId}\r\n                                onChange={e => { setVillageId(e.target.value) }}\r\n                            >\r\n                                <MenuItem value=\"\">\r\n                                    <em>None</em>\r\n                                </MenuItem>\r\n                                {villageList.map(({ _id, village }) => (\r\n                                    <MenuItem key={_id} value={_id}>{village}</MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                                </Grid>\r\n                          \r\n                                <Grid item xs={12}  sm={3} md={63}>\r\n                                    <Button style={{ backgroundColor: 'rgb(48 135 91)', color: 'white' }}\r\n                                        type=\"button\"\r\n                                        onClick={() => onSubmit()} variant=\"contained\"\r\n                                    >\r\n                                        Search</Button>\r\n                                </Grid>\r\n                               \r\n                            </Grid>\r\n                        </form>\r\n                    </div>\r\n                </Box>\r\n            </Card>\r\n            <Grid container spacing={4}>\r\n                <Grid item xs={12}>\r\n                    <Widget title=\"\" upperTitle noBodyPadding bodyClass={classes.tableOverflow}>\r\n                        <Table className=\"mb-0\">\r\n                            <TableHead >\r\n                                <TableRow>\r\n                                    {tableHeaders.map(key => (\r\n                                        <StyledTableCell key={key}>{key}</StyledTableCell>\r\n                                    ))}\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {representiveContactList.slice(pg * rpg, pg * rpg + rpg).map((representivecontact) => (\r\n                                    <TableRow key={representivecontact._id}>\r\n                                        {/* <TableCell className=\"pl-3 fw-normal\" >{representivecontact.districtId.district}</TableCell> */}\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{representivecontact.villageId?.village}</TableCell>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{representivecontact.significance}</TableCell>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{representivecontact.name}</TableCell>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{representivecontact.casteId?.caste}</TableCell>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{representivecontact.partyId?.party}</TableCell>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{representivecontact.significance}</TableCell>                                         \r\n                                        <TableCell className=\"pl-3 fw-normal\" >{representivecontact.age}</TableCell>\r\n\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                        <TablePagination\r\n                            component=\"div\"\r\n                            rowsPerPageOptions={[5, 50,  75, 100, 500, 1000]}\r\n                            count={representiveContactList.length}\r\n                            page={pg}\r\n                            onPageChange={handleChangePage}\r\n                            rowsPerPage={rpg}\r\n                            onRowsPerPageChange={handleChangeRowsPerPage}\r\n                        />\r\n                    </Widget>\r\n                </Grid>\r\n            </Grid>\r\n          \r\n        </>\r\n    );\r\n}\r\n\r\n\r\n","C:\\polls\\ui\\src\\pages\\dashboard\\Constituency.js",["804","805","806","807","808","809","810","811","812","813","814"],"import React, { useState } from \"react\";\r\nimport {\r\n    Button, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, InputLabel, MenuItem,\r\n    TableRow, Table,\r\n    TableHead,\r\n    TableBody,\r\n    TableCell\r\n} from \"@material-ui/core\";\r\nimport DistrictService from \"./Locality/Service/districtService\";\r\nimport ConstituencyService from \"./Locality/Service/constituencyService\";\r\nimport * as Yup from 'yup';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport { Grid, Select, TextField } from \"@material-ui/core\";\r\nimport { useFormik } from 'formik';\r\nimport { useEffect } from 'react';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: \"#30875b\",\r\n        color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 200,\r\n    },\r\n}));\r\nexport default function Constituency() {\r\n    const tableHeaders = ['District', 'Constituency', 'Edit', 'Delete'];\r\n    const classes = useStyles();\r\n    const [districtList, setDistrictList] = useState([]);\r\n    const [constituencyList, setConstituencyList] = useState([]);\r\n    const [age, setAge] = React.useState('');\r\n    var [error, setError] = useState(null);\r\n    const [tabelIdList, setTabelIdList] = useState([]);\r\n    const [open, setOpen] = React.useState(false);\r\n    const [pg, setpg] = React.useState(0);\r\n    const [rpg, setrpg] = React.useState(5);\r\n    const [constituency, setConstituency] = useState({\r\n        districtId: '',\r\n        constituency: '',\r\n    });\r\n    const validationSchema = Yup.object().shape({\r\n        districtId: Yup.string().required('district is required'),\r\n        constituency: Yup.string().required('constituency is required'),\r\n        \r\n    });\r\n    const handleChangePage = (event, newpage) => {\r\n        setpg(newpage);\r\n    }\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setrpg(parseInt(event.target.value, 10));\r\n        setpg(0);\r\n    }\r\n    useEffect(() => {\r\n        getDistrictList();\r\n        getConstituencyList();\r\n        return () => {\r\n            setDistrictList([]);\r\n            setConstituencyList([]);\r\n        }\r\n    }, []);\r\n    const getDistrictList = () => {\r\n        DistrictService.getAllDistrict().then((res) => {\r\n            setDistrictList(res);\r\n        }).catch((err) => {\r\n            // setError(err.message);\r\n        });\r\n    }\r\n    const getConstituencyList = () => {\r\n        ConstituencyService.getAllConstituency().then((res) => {\r\n            setConstituencyList(res);\r\n        }).catch((err) => {\r\n            setError(err.message);\r\n        });\r\n    }\r\n     // const getSubActivityList = (event, obj) => {\r\n    //     const userDetails = JSON.parse(localStorage.getItem(\"userDetail\"));\r\n    //     const getsubActList = { schooleId: userDetails.schoolId, activityId: event.target.value };\r\n    //     SubActivityService.getAllSubActivityByActivityId(getsubActList).then((res) => {\r\n    //         setSubActivityList(res);\r\n    //         if (obj) {\r\n    //             setActivity(obj);\r\n    //         }\r\n    //     }).catch((err) => {\r\n    //         // setError(err.message);\r\n    //     });\r\n    // }\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const onclick = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const handleChange = (event) => {\r\n        setAge(event.target.value);\r\n    };\r\n    const onSubmit = data => {\r\n        console.log(JSON.stringify(data, null, 2));\r\n        const createObjectConstituency = {\r\n            districtId: data.district,\r\n            constituency: data.constituency,\r\n        }\r\n    };\r\n\r\n    const editConstituency = (constituency) => {\r\n        const obj = JSON.parse(JSON.stringify(constituency));\r\n        \r\n        obj.districtId = constituency.districtId ? constituency.districtId._id : '';\r\n        //getDistrictList(obj.districtId);\r\n        setConstituency(obj);\r\n        handleOpen();\r\n    }\r\n    const deleteConstituency = (constituencydelete) => {\r\n        if (constituencydelete) {\r\n            ConstituencyService.deleteConstituency(constituencydelete).then((res) => {\r\n                getConstituencyList();\r\n            }).catch((err) => {\r\n            });\r\n        }\r\n    };\r\n    const handleClickOpen = (constituency) => {\r\n        if (constituency && constituency.districtId) {\r\n            setConstituency({\r\n                district: constituency.districtId._id,\r\n                constituency: constituency.constituency,\r\n                id: constituency._id,\r\n\r\n            })\r\n        } else {\r\n            formReset();\r\n        }\r\n        setOpen(true);\r\n    };\r\n    const selectDistrict = (event) => {\r\n        const constituencySelectData = {\r\n            district: event,\r\n            constituency: constituency.constituency,\r\n            id: constituency.id,\r\n\r\n        }\r\n        setConstituency(constituencySelectData)\r\n    }\r\n    const selectConstituency = (event) => {\r\n        const constituencySelectData = {\r\n            district: constituency.district,\r\n            constituency: event.target.value,\r\n            id: constituency.id,\r\n\r\n        }\r\n        setConstituency(constituencySelectData)\r\n\r\n    }\r\n    const formReset = () => {\r\n        const constituencySelectData = {\r\n            district: '',\r\n            constituency: '',\r\n            id: '',\r\n        }\r\n        setConstituency(constituencySelectData)\r\n    }\r\n    const formik = useFormik({\r\n        initialValues: constituency,\r\n        enableReinitialize: true,\r\n        validationSchema: validationSchema,\r\n        onSubmit: (values, { resetForm }) => {\r\n            if (constituency._id) {\r\n                ConstituencyService.upadeConstituencyt(values).then((res) => {\r\n                    handleClose();\r\n                    getConstituencyList();\r\n                    resetForm()\r\n                    alert(\"Constituency Updated Successfully.\");\r\n                }).catch((err) => {\r\n                });\r\n            }\r\n            else {\r\n                ConstituencyService.creteConstituency(values).then((res) => {\r\n                    getConstituencyList();\r\n                    resetForm();\r\n                    handleClose();\r\n                    alert(\" Constituency Added Successfully.\");\r\n                    // props.history.push('/app/vendor');\r\n                })\r\n                    .catch((err) => {\r\n\r\n                        alert(err.response.data.message)\r\n                    })\r\n            }\r\n\r\n        },\r\n    });\r\n    return (\r\n        <>\r\n            <PageTitle title=\"Constituency\" button={<Button\r\n                variant=\"contained\" onClick={handleOpen}\r\n                size=\"medium\"\r\n                color=\"secondary\" style={{ backgroundColor: '#30875b' }}> Add Constituency\r\n            </Button>} />\r\n            <Grid container spacing={4}>\r\n                <Grid item xs={12}>\r\n                    <Widget title=\"\" upperTitle noBodyPadding bodyClass={classes.tableOverflow}>\r\n                        <Table className=\"mb-0\">\r\n                            <TableHead >\r\n                                <TableRow>\r\n                                    {tableHeaders.map(key => (\r\n                                        <StyledTableCell key={key}>{key}</StyledTableCell>\r\n                                    ))}\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {constituencyList.slice(pg * rpg, pg * rpg + rpg).map((constituency) => (\r\n                                    <TableRow key={constituency._id}>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >\r\n                                            {constituency.districtId.district}</TableCell>\r\n\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{constituency.constituency}</TableCell>\r\n                                        <TableCell>\r\n                                            <EditIcon style={{ cursor: 'pointer' }} onClick={() => editConstituency(constituency)} >\r\n                                            </EditIcon >\r\n                                        </TableCell>\r\n                                        <TableCell>\r\n                                            <DeleteIcon style={{ cursor: 'pointer' }} onClick={() => deleteConstituency(constituency)} />\r\n                                        </TableCell>\r\n\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                        <TablePagination\r\n                            component=\"div\"\r\n                            rowsPerPageOptions={[5,  100,1000]}\r\n                            count={districtList.length}\r\n                            page={pg}\r\n                            onPageChange={handleChangePage}\r\n                            rowsPerPage={rpg}\r\n                            onRowsPerPageChange={handleChangeRowsPerPage}\r\n                        />\r\n                    </Widget>\r\n                </Grid>\r\n            </Grid>\r\n            <Dialog open={open} onClose={handleClose}>\r\n                <DialogTitle>Add Constituency</DialogTitle>\r\n                <form onSubmit={formik.handleSubmit} >\r\n                    <DialogContent style={{ width: 308 }}>\r\n                        <FormControl variant=\"standard\" fullWidth=\"true\" >\r\n                            <InputLabel id=\"demo-simple-select-standard-label\">District</InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-standard-label\"\r\n                                id=\"demo-simple-select-standard\"\r\n                                InputProps={{ style: { width: 258 } }}\r\n                                autoFocus\r\n                                margin=\"dense\"\r\n                                name=\"districtId\"\r\n                                label=\"District\"\r\n                                type=\"text\"\r\n                                variant=\"standard\"\r\n                                value={formik.values.districtId}\r\n                                onChange={formik.handleChange}\r\n                                error={formik.touched.districtId && Boolean(formik.errors.districtId)}\r\n                                helperText={formik.touched.districtId && formik.errors.districtId}\r\n                            >\r\n                                <MenuItem value=\"\">\r\n                                    <em>None</em>\r\n                                </MenuItem>\r\n                                {districtList.map(({ _id, district }) => (\r\n                                    <MenuItem key={_id} value={_id}>{district}</MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                        <TextField\r\n                            InputProps={{ style: { width: 258 } }}\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"constituency\"\r\n                            name=\"constituency\"\r\n                            label=\"Constituency\"\r\n                            type=\"text\"\r\n                            variant=\"standard\"\r\n                            value={formik.values.constituency}\r\n                            onChange={formik.handleChange}\r\n                            error={formik.touched.constituency && Boolean(formik.errors.constituency)}\r\n                            helperText={formik.touched.constituency && formik.errors.constituency}\r\n                        />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={handleClose}>Cancel</Button>\r\n                        <Button type=\"submit\">Add</Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n","C:\\polls\\ui\\src\\pages\\maps\\Maps.js",[],"C:\\polls\\ui\\src\\pages\\dashboard\\ProfileRegistration.js",["815","816","817","818","819","820","821","822","823","824","825","826","827","828","829","830","831","832","833","834","835","836","837","838","839","840","841","842","843","844","845","846","847","848","849","850","851","852","853","854","855","856","857","858","859","860","861"],"import React, { useState } from \"react\";\r\nimport {\r\n  LinearProgress,\r\n  OutlinedInput,\r\n} from \"@material-ui/core\";\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport {\r\n  Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, FormControl, InputLabel, MenuItem,\r\n  TableRow, Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableCell\r\n} from \"@material-ui/core\";\r\nimport PartyService from \"./Locality/Service/partyService\";\r\nimport DistrictService from \"./Locality/Service/districtService\";\r\nimport ConstituencyService from \"./Locality/Service/constituencyService\";\r\nimport ProfileRegistration from \"./Locality/Service/profileRegistration\"\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport { Grid, Card, Box, Select, TextField } from \"@material-ui/core\";\r\nimport { useFormik } from 'formik';\r\nimport { useContext, useEffect } from 'react';\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport {\r\n  ResponsiveContainer,\r\n  ComposedChart,\r\n  AreaChart,\r\n  LineChart,\r\n  Line,\r\n  Area,\r\n  PieChart,\r\n  Pie,\r\n  Cell,\r\n  YAxis,\r\n  XAxis,\r\n} from \"recharts\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as Yup from 'yup';\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport mock from \"./mock\";\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { Typography } from \"../../components/Wrappers/Wrappers\";\r\nimport Dot from \"../../components/Sidebar/components/Dot\";\r\nimport BigStat from \"./components/BigStat/BigStat\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\nexport default function ProfileSRegistration(props) {\r\n  const classes = useStyles();\r\n  const [age, setAge] = React.useState('');\r\n  var [error, setError] = useState(null);\r\n  const [constituencyList, setConstituencyList] = useState([]);\r\n  const [partyList, setPartyList] = useState([]);\r\n  const [profileRegistrationList, setProfileRegistrationList] = useState([]);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [districtList, setDistrictList] = useState([]);\r\n  const [profileRegistration, setProfileRegistration] = useState({\r\n    districtId: '',\r\n    constituencyId: '',\r\n    name: '',\r\n    email: '',\r\n    mobileNumber: '',\r\n    partyId: '',\r\n    password: '',\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    setAge(event.target.value);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const validationSchema = Yup.object().shape({\r\n    districtId: Yup.string().required('district  is required'),\r\n    constituencyId: Yup.string().required('constituency is required'),\r\n    name: Yup.string().required('name is required'),\r\n    email: Yup.string().required('email is required'),\r\n    mobileNumber: Yup.string().required()\r\n      .matches(/^[0-9]+$/, \"Must be only digits\")\r\n      .min(10, 'Must be exactly 10 digits')\r\n      .max(10, 'Must be exactly 10 digits'),\r\n    partyId: Yup.string().required('party is required'),\r\n    password: Yup.string().required('password is required'),\r\n  });\r\n \r\n  const getProfileRegistrationList = () => {\r\n    ProfileRegistration.getAllProfileRegistration().then((res) => {\r\n      setProfileRegistrationList(res);\r\n    }).catch((err) => {\r\n      setError(err.message);\r\n    });\r\n  }\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  useEffect(() => {\r\n    getDistrictList();\r\n     getPartyList();\r\n    return () => {\r\n        setDistrictList([]);\r\n        setConstituencyList([]);\r\n\r\n    }\r\n}, []);\r\nconst getDistrictList = () => {\r\n  DistrictService.getAllDistrict().then((res) => {\r\n      setDistrictList(res);\r\n  }).catch((err) => {\r\n      // setError(err.message);\r\n  });\r\n}\r\nconst getConstituencyList = (destId) => {\r\nconst disListI = { districtId: destId };\r\n  ConstituencyService.getConstituencyByDistrictId(disListI).then((res) => {\r\n      setConstituencyList(res);\r\n  }).catch((err) => {\r\n      setError(err.message);\r\n  });\r\n}\r\nconst getPartyList = () => {\r\n  PartyService.getAllParty().then((res) => {\r\n      setPartyList(res);\r\n  }).catch((err) => {\r\n      setError(err.message);\r\n  });\r\n}\r\n  const formik = useFormik({\r\n    initialValues: profileRegistration,\r\n    enableReinitialize: true,\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values, { resetForm }) => {\r\n      ProfileRegistration.creteProfileRegistration(values).then((res) => {\r\n\r\n        alert(\" Registration Successfully.\");\r\n         props.history.push('/montessori/login');\r\n      })\r\n        .catch((err) => {\r\n          alert(err.response.data.message)\r\n        })\r\n    },\r\n  });\r\n\r\n\r\n  return (\r\n\r\n    <>\r\n        <Grid item xs={12}>\r\n          <Card sx={{ maxWidth: 345 }}>\r\n            <Box   >\r\n              <div style={{ marginLeft: \"7%\" }}>\r\n                <form onSubmit={formik.handleSubmit} >\r\n                  <Grid container spacing={2} columns={12} >\r\n                    <Grid item xs={12}>\r\n                      <PageTitle InputProps={{ style: { color: '#10b680' } }} title=\"Profile Registration\" ></PageTitle>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={6}>\r\n                      <TextField\r\n                        InputProps={{ style: { width: 370 } }}\r\n                        margin=\"dense\"\r\n                        id=\"name\"\r\n                        name=\"name\"\r\n                        label=\"Full Name\"\r\n                        type=\"Full Name\"\r\n                        variant=\"standard\"\r\n                        value={formik.values.name}\r\n                        onChange={formik.handleChange}\r\n                        error={formik.touched.name && Boolean(formik.errors.name)}\r\n                        helperText={formik.touched.name && formik.errors.name}\r\n                      />\r\n                    </Grid>\r\n                    <Grid xs={12} sm={12} md={6} style={{ width: 370 }}>\r\n                    <div style={{ width: 370 }}>\r\n                    <FormControl variant=\"standard\" fullWidth=\"true\">\r\n                            <InputLabel id=\"demo-simple-select-standard-label\">District</InputLabel>\r\n                            <Select  \r\n                                labelId=\"demo-simple-select-standard-label\"\r\n                                id=\"demo-simple-select-standard\"\r\n                                autoFocus\r\n                                margin=\"dense\"\r\n                                name=\"districtId\"\r\n                                label=\"District\"\r\n                                type=\"text\"\r\n                                variant=\"standard\"\r\n                                value={formik.values.districtId}\r\n                                // getConstituencyList();\r\n                                onChange={e => {\r\n                                    formik.handleChange(e);\r\n                                    getConstituencyList(e.target.value)\r\n                                }}\r\n                                error={formik.touched.districtId && Boolean(formik.errors.districtId)}\r\n                                helperText={formik.touched.districtId && formik.errors.districtId}\r\n                            >\r\n                                <MenuItem value=\"\">\r\n                                    <em>None</em>\r\n                                </MenuItem>\r\n                                {districtList.map(({ _id, district }) => (\r\n                                    <MenuItem key={_id} value={_id}>{district}</MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={6}>\r\n                    <div style={{ width: 370 }}>\r\n                    <FormControl variant=\"standard\" fullWidth=\"true\" >\r\n                            <InputLabel id=\"demo-simple-select-standard-label\">Constituency </InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-standard-label\"\r\n                                id=\"demo-simple-select-standard\"\r\n                                InputProps={{ style: { width: 370 } }}\r\n                                \r\n                                margin=\"dense\"\r\n                                name=\"constituencyId\"\r\n                                label=\"Constituency\"\r\n                                type=\"text\"\r\n                                variant=\"standard\"\r\n                                value={formik.values.constituencyId}\r\n                                onChange={formik.handleChange}\r\n                                error={formik.touched.constituencyId && Boolean(formik.errors.constituencyId)}\r\n                                helperText={formik.touched.constituencyId && formik.errors.constituencyId}\r\n                            >\r\n                                <MenuItem value=\"\">\r\n                                    <em>None</em>\r\n                                </MenuItem>\r\n                                {constituencyList.map(({ _id, constituency }) => (\r\n                                    <MenuItem key={_id} value={_id}>{constituency}</MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                        </div>\r\n                    </Grid>\r\n                  \r\n                    <Grid item xs={12} sm={12} md={6}>\r\n                    <div style={{ width: 370 }}>\r\n                    <FormControl variant=\"standard\" fullWidth=\"true\" >\r\n                            <InputLabel id=\"demo-simple-select-standard-label\">Party</InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-standard-label\"\r\n                                id=\"demo-simple-select-standard\"\r\n                                InputProps={{ style: { width: 370 } }}\r\n                                autoFocus\r\n                                margin=\"dense\"\r\n                                name=\"partyId\"\r\n                                label=\"Party\"\r\n                                type=\"text\"\r\n                                variant=\"standard\"\r\n                                value={formik.values.partyId}\r\n                                // getConstituencyList();\r\n                                onChange={formik.handleChange}\r\n                                error={formik.touched.partyId && Boolean(formik.errors.partyId)}\r\n                                helperText={formik.touched.partyId && formik.errors.partyId}\r\n                            >\r\n                                <MenuItem value=\"\">\r\n                                    <em>None</em>\r\n                                </MenuItem>\r\n                                {partyList.map(({ _id, party }) => (\r\n                                    <MenuItem key={_id} value={_id}>{party}</MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                        </div>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={12} md={6}>\r\n                      <TextField\r\n                        InputProps={{ style: { width: 370 } }}\r\n\r\n                        margin=\"dense\"\r\n                        id=\"mobileNumber\"\r\n                        name=\"mobileNumber\"\r\n                        label=\"Mobile Number\"\r\n                        type=\"Mobile Number\"\r\n                        variant=\"standard\"\r\n                        value={formik.values.mobileNumber}\r\n                        onChange={formik.handleChange}\r\n                        error={formik.touched.mobileNumber && Boolean(formik.errors.mobileNumber)}\r\n                        helperText={formik.touched.mobileNumber && formik.errors.mobileNumber}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={6}>\r\n                      <TextField\r\n                        InputProps={{ style: { width: 370 } }}\r\n                        margin=\"dense\"\r\n                        id=\"email\"\r\n                        name=\"email\"\r\n                        label=\"Email ID / Username\"\r\n                        type=\"Email ID\"\r\n                        variant=\"standard\"\r\n                        value={formik.values.email}\r\n                        onChange={formik.handleChange}\r\n                        error={formik.touched.email && Boolean(formik.errors.email)}\r\n                        helperText={formik.touched.email && formik.errors.email}\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={12} md={6}>\r\n                      <TextField\r\n                        id=\"password\"\r\n                        InputProps={{ style: { width: 370 } }}\r\n                        margin=\"normal\"\r\n                        label=\" Set Password  \"\r\n                        // placeholder=\"Password\"\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        value={formik.values.password}\r\n                        onChange={formik.handleChange}\r\n                        error={formik.touched.password && Boolean(formik.errors.password)}\r\n                        helperText={formik.touched.password && formik.errors.password}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid item xs={6} style={{ textAlign: 'right', margin: '29px' }}>\r\n                    <Button style={{ backgroundColor: 'rgb(48 135 91)', color: 'white' }} type=\"submit\" variant=\"contained\" >Submit</Button>\r\n                    </Grid>\r\n\r\n                </form>\r\n              </div>\r\n            </Box>\r\n\r\n          </Card>\r\n       \r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n","C:\\polls\\ui\\src\\pages\\typography\\Typography.js",[],"C:\\polls\\ui\\src\\pages\\charts\\Charts.js",[],"C:\\polls\\ui\\src\\components\\Sidebar\\Sidebar.js",["862","863","864","865","866","867","868","869","870","871","872","873","874","875","876","877","878","879","880"],"import React, { useState, useEffect } from \"react\";\r\nimport { Drawer, IconButton, List } from \"@material-ui/core\";\r\nimport CategoryServices from \"../../services/CategoryServices\";\r\n\r\nimport {\r\n  NotificationsNone as NotificationsIcon,\r\n  FormatSize as TypographyIcon,\r\n  HotTub as HotTub,\r\n  ArtTrack as ArtTrack,\r\n  FilterNone as UIElementsIcon,\r\n  BorderAll as TableIcon,\r\n  QuestionAnswer as SupportIcon,\r\n  LibraryBooks as LibraryIcon,\r\n  HelpOutline as FAQIcon,\r\n  ArrowBack as ArrowBackIcon,\r\n  SvgIconComponent as SvgIconComponent,\r\n  CalendarToday as CalendarToday,\r\n  AccessAlarmSharp as AccessAlarmSharp,\r\n  Create as Create,\r\n  SupervisedUserCircle,\r\n  HowToVoteSharp ,\r\n  HistorySharp,\r\n  OpenInNew,\r\n  EvStation\r\n} from \"@material-ui/icons\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport classNames from \"classnames\";\r\n// styles\r\nimport useStyles from \"./styles\";\r\n// components\r\nimport SidebarLink from \"./components/SidebarLink/SidebarLink\";\r\nimport Dot from \"./components/Dot\";\r\n// context\r\nimport {\r\n  useLayoutState,\r\n  useLayoutDispatch,\r\n  toggleSidebar,\r\n} from \"../../context/LayoutContext\";\r\n\r\nlet structure = [\r\n  {\r\n    id: 1,\r\n    label: \" Masters\",\r\n    icon: <UIElementsIcon />,\r\n    children: [\r\n       { label: \"District\", link: \"/app/district\" },\r\n       { label: \"Constituency\", link: \"/app/constituency\" },\r\n      { label: \"Village\", link: \"/app/village\" },\r\n      { label: \"Booth\", link: \"/app/booth\" },\r\n      {\r\n        label: \"Caste\",\r\n        link: \"/app/caste\"\r\n      },\r\n      {\r\n        id: 5,\r\n        label: \"Party\",\r\n        link: \"/app/party\"\r\n      },\r\n     \r\n    ],\r\n  },\r\n  {\r\n    id: 2,\r\n    label: \"Booth Wise Voters\",\r\n    link: \"/app/voter\",\r\n    icon: <HotTub />,\r\n  },\r\n  \r\n  {\r\n    id: 3,\r\n    label: \"I-Contacts\",\r\n    link: \"/app/contact\",\r\n    icon: <AccessAlarmSharp />,\r\n  },\r\n  {\r\n    id: 4,\r\n    label: \"Representive Contact \",\r\n    link: \"/app/representivecontact\",\r\n    icon: <LibraryIcon />,\r\n  },\r\n  {\r\n    id: 5,\r\n    label: \"Family Wise Voters Data\",\r\n    link: \"/app/VoterData\",\r\n    icon: <ArrowBackIcon />,\r\n  },\r\n  {\r\n    id: 6, \r\n    label: \"Profile Registration\",\r\n    link: \"/app/profileregistration\",\r\n    icon: <HistorySharp />,\r\n  }, \r\n  {\r\n    id: 7,\r\n    label: \"Track voters Booth wise\",\r\n    link: \"/app/boothtrack\",\r\n    icon: <HowToVoteSharp />,\r\n  },\r\n  {\r\n    id: 7,\r\n    label: \"Our Voters\",\r\n    link: \"/app/OurVoter\",\r\n    icon: <HowToVoteSharp />,\r\n  },\r\n  //  {\r\n  //   id: 8, \r\n  //   label: \"Poll Tracking\",\r\n  //   link: \"/app/track\",\r\n  //   icon: <ArtTrack />,\r\n  // },\r\n  {\r\n    id: 9, \r\n    label: \"Voters Statistics\",\r\n    link: \"/app/reportofvoter\",\r\n    icon: <  EvStation\r\n    />,\r\n  },\r\n  {\r\n    id: 10,\r\n    label: \" Reports\",\r\n    icon:  <FAQIcon />,\r\n    children: [\r\n       { label: \"Representive Reports\", link: \"/app/representivereports\" },\r\n       { label: \"Contact Reports\", link: \"/app/reportsofcontact\" },\r\n      //  { label: \"Voters Statistics\", link: \"/app/reportofvoter\" },\r\n  \r\n    ],\r\n  },\r\n  // {\r\n  //   id: 9,\r\n  //   label: \"Create Events\",\r\n  //   link: \"/app/createevents\",\r\n  //   icon: <Create />,\r\n  // },\r\n  // { label: \"Special Observation\", link: \"/app/specialobservation\",\r\n  // icon:<OpenInNew />},\r\n  //   {\r\n  //   id: 9,\r\n  //   label: \"Reports\",\r\n  //   link: \"/app/reports\",\r\n  //   icon: <TableIcon />,\r\n  // },\r\n\r\n  // { id: 5, type: \"divider\" },\r\n  // { id: 6, type: \"title\", label: \"HELP\" },\r\n  // { id: 7, label: \"Library\", link: \"https://flatlogic.com/templates\", icon: <LibraryIcon /> },\r\n  // { id: 8, label: \"Support\", link: \"https://flatlogic.com/forum\", icon: <SupportIcon /> },\r\n  // { id: 9, label: \"FAQ\", link: \"https://flatlogic.com/forum\", icon: <FAQIcon /> },\r\n  // { id: 10, type: \"divider\" },\r\n  // { id: 11, type: \"title\", label: \"PROJECTS\" },\r\n  // {\r\n  //   id: 12,\r\n  //   label: \"My recent\",\r\n  //   link: \"\",\r\n  //   icon: <Dot size=\"small\" color=\"warning\" />,\r\n  // },\r\n  // {\r\n  //   id: 13,\r\n  //   label: \"Starred\",\r\n  //   link: \"\",\r\n  //   icon: <Dot size=\"small\" color=\"primary\" />,\r\n  // },\r\n  // {\r\n  //   id: 14,\r\n  //   label: \"Background\",\r\n  //   link: \"\",\r\n  //   icon: <Dot size=\"small\" color=\"secondary\" />,\r\n  // },\r\n];\r\nconst booth=[\r\n  {\r\n    id: 2,\r\n    label: \"Booth Wise Voters\",\r\n    link: \"/app/voter\",\r\n    icon: <HotTub />,\r\n  },\r\n  {\r\n    id: 7, \r\n    label: \"Poll Tracking\",\r\n    link: \"/app/track\",\r\n    icon: <ArtTrack />,\r\n  },\r\n\r\n  {\r\n    id: 3,\r\n    label: \"I-Contacts\",\r\n    link: \"/app/contact\",\r\n    icon: <AccessAlarmSharp />,\r\n  },\r\n  {\r\n    id: 4,\r\n    label: \"Representive Contact \",\r\n    link: \"/app/representivecontact\",\r\n    icon: <LibraryIcon />,\r\n  },\r\n  \r\n  {\r\n    id: 5,\r\n    label: \"Family Wise Voters Data\",\r\n    link: \"/app/VoterData\",\r\n    icon: <ArrowBackIcon />,\r\n  },\r\n  {\r\n    id: 7,\r\n    label: \"Our Voters\",\r\n    link: \"/app/OurVoter\",\r\n    icon: <HowToVoteSharp />,\r\n  },\r\n  {\r\n    id: 7,\r\n    label: \"Track voters Booth wise\",\r\n    link: \"/app/boothtrack\",\r\n    icon: <HowToVoteSharp />,\r\n  },\r\n\r\n]; \r\nconst student=[\r\n    \r\n  // { id: 1, label: \"Add Class\", link: \"/app/addclass\", icon: <TableIcon /> },\r\n  // {\r\n  //   id: 3,\r\n  //   label: \"Teacher\",\r\n  //   link: \"/app/teacher\",\r\n  //   icon: <UIElementsIcon />,\r\n  // },\r\n];\r\n\r\n\r\nconst userDetails = JSON.parse(localStorage.getItem(\"userDetail\"));\r\nif(userDetails && userDetails.role === 'ADMIN'){\r\n  structure = structure;\r\n}else if(userDetails && userDetails.role === 'BOOTH'){\r\n  structure = booth;\r\n}\r\nfunction Sidebar({ location }) {\r\n  var classes = useStyles();\r\n  var theme = useTheme();\r\n\r\n  // global\r\n  var { isSidebarOpened } = useLayoutState();\r\n  var layoutDispatch = useLayoutDispatch();\r\n\r\n  // local\r\n  var [isPermanent, setPermanent] = useState(true);\r\n\r\n  useEffect(function() {\r\n    window.addEventListener(\"resize\", handleWindowWidthChange);\r\n    handleWindowWidthChange();\r\n    return function cleanup() {\r\n      window.removeEventListener(\"resize\", handleWindowWidthChange);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <Drawer\r\n      variant={isPermanent ? \"permanent\" : \"temporary\"}\r\n      className={classNames(classes.drawer, {\r\n        [classes.drawerOpen]: isSidebarOpened,\r\n        [classes.drawerClose]: !isSidebarOpened,\r\n      })}\r\n      classes={{\r\n        paper: classNames({\r\n          [classes.drawerOpen]: isSidebarOpened,\r\n          [classes.drawerClose]: !isSidebarOpened,\r\n        }),\r\n      }}\r\n      open={isSidebarOpened}\r\n    >\r\n      <div className={classes.toolbar} />\r\n      <div className={classes.mobileBackButton}>\r\n        <IconButton onClick={() => toggleSidebar(layoutDispatch)}>\r\n          <ArrowBackIcon\r\n            classes={{\r\n              root: classNames(classes.headerIcon, classes.headerIconCollapse),\r\n            }}\r\n          />\r\n        </IconButton>\r\n      </div>\r\n      <List className={classes.sidebarList}>\r\n        {structure.map(link => (\r\n          <SidebarLink\r\n            key={link.id}\r\n            location={location}\r\n            isSidebarOpened={isSidebarOpened}\r\n            {...link}\r\n          />\r\n        ))}\r\n      </List>\r\n    </Drawer>\r\n  );\r\n  // ##################################################################\r\n  function handleWindowWidthChange() {\r\n    var windowWidth = window.innerWidth;\r\n    var breakpointWidth = theme.breakpoints.values.md;\r\n    var isSmallScreen = windowWidth < breakpointWidth;\r\n    if (isSmallScreen && isPermanent) {\r\n      setPermanent(false);\r\n    } else if (!isSmallScreen && !isPermanent) {\r\n      setPermanent(true);\r\n    }\r\n  }\r\n}\r\n\r\nexport default withRouter(Sidebar);\r\n","C:\\polls\\ui\\src\\pages\\dashboard\\Booth.js",["881","882","883","884","885","886","887","888","889"],"import React, { useState } from \"react\";\r\nimport {\r\n    Button, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, InputLabel, MenuItem,\r\n    TableRow, Table,\r\n    TableHead,\r\n    TableBody,\r\n    TableCell\r\n} from \"@material-ui/core\";\r\nimport DistrictService from \"./Locality/Service/districtService\";\r\nimport ConstituencyService from \"./Locality/Service/constituencyService\";\r\nimport VillageService from \"./Locality/Service/villageService\";\r\nimport BoothService from \"./Locality/Service/boothService\";\r\nimport * as Yup from 'yup';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport { Grid, Select, TextField } from \"@material-ui/core\";\r\nimport { useFormik } from 'formik';\r\nimport { useEffect } from 'react';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: \"#30875b\",\r\n        color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 200,\r\n    },\r\n}));\r\nexport default function Booth() {\r\n    const tableHeaders = ['District', 'Constituency', 'Village', 'Booth','Status', 'Edit', 'Delete'];\r\n    const classes = useStyles();\r\n    const [districtList, setDistrictList] = useState([]);\r\n    const [constituencyList, setConstituencyList] = useState([]);\r\n    const [villageList, setVillageList] = useState([]);\r\n    const [boothList, setBoothList] = useState([]);\r\n    const [age, setAge] = React.useState('');\r\n    var [error, setError] = useState(null);\r\n    const [tabelIdList, setTabelIdList] = useState([]);\r\n    const [open, setOpen] = React.useState(false);\r\n    const [pg, setpg] = React.useState(0);\r\n    const [rpg, setrpg] = React.useState(5);\r\n    const [booth, setBooth] = useState({\r\n        districtId: '',\r\n        constituencyId: '',\r\n        villageId: '',\r\n        count: '',\r\n        status: true,\r\n    });\r\n    const validationSchema = Yup.object().shape({\r\n        districtId: Yup.string().required('district is required'),\r\n        constituencyId: Yup.string().required('constituency is required'),\r\n        villageId: Yup.string().required('village is required'),\r\n        count: Yup.string().required('count is required'),\r\n        count: Yup.string(),\r\n    });\r\n    const handleChangePage = (event, newpage) => {\r\n        setpg(newpage);\r\n    }\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setrpg(parseInt(event.target.value, 10));\r\n        setpg(0);\r\n    }\r\n    useEffect(() => {\r\n        getDistrictList();\r\n        //getConstituencyList();\r\n        getBoothList();\r\n        return () => {\r\n            setDistrictList([]);\r\n            setConstituencyList([]);\r\n            setVillageList([]);\r\n        }\r\n    }, []);\r\n    const getDistrictList = () => {\r\n        DistrictService.getAllDistrict().then((res) => {\r\n            setDistrictList(res);\r\n        }).catch((err) => {\r\n            // setError(err.message);\r\n        });\r\n    }\r\n    const getConstituencyList = (destId) => {\r\n        const disListI = { districtId: destId };\r\n        ConstituencyService.getConstituencyByDistrictId(disListI).then((res) => {\r\n\r\n            setConstituencyList(res);\r\n\r\n        }).catch((err) => {\r\n            setError(err.message);\r\n        });\r\n    }\r\n    const getVillageList = (constituencyId) => {\r\n        const villListId = { constituencyId: constituencyId };\r\n        VillageService.getVillageByConstituencyId(villListId).then((res) => {\r\n            setVillageList(res);\r\n\r\n        }).catch((err) => {\r\n            setError(err.message);\r\n        });\r\n    }\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const onclick = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const handleChange = (event) => {\r\n        setAge(event.target.value);\r\n    };\r\n    const onSubmit = data => {\r\n        console.log(JSON.stringify(data, null, 2));\r\n        const createObjectConstituency = {\r\n            districtId: data.district,\r\n            constituency: data.constituency,\r\n        }\r\n    };\r\n    const getBoothList = () => {\r\n        BoothService.getAllBooth().then((res) => {\r\n            setBoothList(res);\r\n        }).catch((err) => {\r\n            setError(err.message);\r\n        });\r\n    }\r\n\r\n\r\n\r\n    const editBooth = (booth) => {\r\n        const obj = JSON.parse(JSON.stringify(booth));\r\n        obj.constituencyId = booth.constituencyId ? booth.constituencyId._id : '';\r\n        obj.districtId = booth.districtId ? booth.districtId._id : '';\r\n        obj.villageId = booth.villageId ? booth.villageId._id : '';\r\n\r\n        getConstituencyList(obj.districtId);\r\n        getVillageList(obj.constituencyId);\r\n\r\n        setBooth(obj);\r\n\r\n        handleOpen();\r\n    }\r\n    const deleteBooth = (boothdelete) => {\r\n        if (boothdelete) {\r\n            BoothService.deleteBooth(boothdelete).then((res) => {\r\n                getBoothList();\r\n            }).catch((err) => {\r\n            });\r\n        }\r\n    };\r\n\r\n    // const formReset = () => {\r\n    //     const villageSelectData = {\r\n    //         district: '',\r\n    //         constituency: '',\r\n    //         village:'',\r\n    //         id: '',\r\n    //     }\r\n    //     setVillage(villageSelectData)\r\n    // }\r\n    const formik = useFormik({\r\n        initialValues: booth,\r\n        enableReinitialize: true,\r\n        validationSchema: validationSchema,\r\n        onSubmit: (values, { resetForm }) => {\r\n            if (booth._id) {\r\n                BoothService.upadeBooth(values).then((res) => {\r\n                    handleClose();\r\n                    getBoothList();\r\n                    resetForm()\r\n                    alert(\" Booth Updated Successfully.\");\r\n                }).catch((err) => {\r\n                });\r\n            }\r\n            else {\r\n                BoothService.creteBooth(values).then((res) => {\r\n                    getBoothList();\r\n                    resetForm();\r\n                    handleClose();\r\n                    alert(\" Booth Added Successfully.\");\r\n                    // props.history.push('/app/vendor');\r\n                })\r\n                    .catch((err) => {\r\n\r\n                        alert(err.response.data.message)\r\n                    })\r\n            }\r\n\r\n        },\r\n    });\r\n    return (\r\n        <>\r\n            <PageTitle title=\"Booth\" button={<Button\r\n                variant=\"contained\" onClick={handleOpen}\r\n                size=\"medium\"\r\n                color=\"secondary\" style={{ backgroundColor: '#30875b' }}> Add Booth\r\n            </Button>} />\r\n            <Grid container spacing={4}>\r\n                <Grid item xs={12}>\r\n                    <Widget title=\"\" upperTitle noBodyPadding bodyClass={classes.tableOverflow}>\r\n                        <Table className=\"mb-0\">\r\n                            <TableHead >\r\n                                <TableRow>\r\n                                    {tableHeaders.map(key => (\r\n                                        <StyledTableCell key={key}>{key}</StyledTableCell>\r\n                                    ))}\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {boothList.slice(pg * rpg, pg * rpg + rpg).map((booth) => (\r\n                                    <TableRow key={booth._id}>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{booth.districtId?.district}</TableCell>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{booth.constituencyId?.constituency}</TableCell>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{booth.villageId?.village}</TableCell>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{booth.count}</TableCell>\r\n                                        <TableCell> {booth.status ? 'Active' : 'In Active'} </TableCell>\r\n                                        <TableCell>\r\n                                            <EditIcon style={{ cursor: 'pointer' }} onClick={() => editBooth(booth)} >\r\n                                            </EditIcon >\r\n                                        </TableCell>\r\n                                        <TableCell>\r\n                                            <DeleteIcon style={{ cursor: 'pointer' }} onClick={() => deleteBooth(booth)} />\r\n                                        </TableCell>\r\n\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                        <TablePagination\r\n                            component=\"div\"\r\n                            rowsPerPageOptions={[5,  50, 500, 1000, 5000]}\r\n                            count={boothList.length}\r\n                            page={pg}\r\n                            onPageChange={handleChangePage}\r\n                            rowsPerPage={rpg}\r\n                            onRowsPerPageChange={handleChangeRowsPerPage}\r\n                        />\r\n                    </Widget>\r\n                </Grid>\r\n            </Grid>\r\n            <Dialog open={open} onClose={handleClose}>\r\n                <DialogTitle>Add Booth</DialogTitle>\r\n                <form onSubmit={formik.handleSubmit} >\r\n                    <DialogContent style={{ width: 308 }}>\r\n                        <FormControl variant=\"standard\" fullWidth=\"true\" >\r\n                            <InputLabel id=\"demo-simple-select-standard-label\">District</InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-standard-label\"\r\n                                id=\"demo-simple-select-standard\"\r\n                                InputProps={{ style: { width: 258 } }}\r\n                                autoFocus\r\n                                margin=\"dense\"\r\n                                name=\"districtId\"\r\n                                label=\"District\"\r\n                                type=\"text\"\r\n                                variant=\"standard\"\r\n                                value={formik.values.districtId}\r\n                                // getConstituencyList();\r\n                                onChange={e => {\r\n                                    formik.handleChange(e);\r\n                                    getConstituencyList(e.target.value)\r\n                                }}\r\n                                error={formik.touched.districtId && Boolean(formik.errors.districtId)}\r\n                                helperText={formik.touched.districtId && formik.errors.districtId}\r\n                            >\r\n                                <MenuItem value=\"\">\r\n                                    <em>None</em>\r\n                                </MenuItem>\r\n                                {districtList.map(({ _id, district }) => (\r\n                                    <MenuItem key={_id} value={_id}>{district}</MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                        <FormControl variant=\"standard\" fullWidth=\"true\" >\r\n                            <InputLabel id=\"demo-simple-select-standard-label\">Constituency </InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-standard-label\"\r\n                                id=\"demo-simple-select-standard\"\r\n                                InputProps={{ style: { width: 258 } }}\r\n\r\n                                margin=\"dense\"\r\n                                name=\"constituencyId\"\r\n                                label=\"Constituency\"\r\n                                type=\"text\"\r\n                                variant=\"standard\"\r\n                                value={formik.values.constituencyId}\r\n                                onChange={e => {\r\n                                    formik.handleChange(e);\r\n                                    getVillageList(e.target.value)\r\n                                }}\r\n                                error={formik.touched.constituencyId && Boolean(formik.errors.constituencyId)}\r\n                                helperText={formik.touched.constituencyId && formik.errors.constituencyId}\r\n                            >\r\n                                <MenuItem value=\"\">\r\n                                    <em>None</em>\r\n                                </MenuItem>\r\n                                {constituencyList.map(({ _id, constituency }) => (\r\n                                    <MenuItem key={_id} value={_id}>{constituency}</MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                        <FormControl variant=\"standard\" fullWidth=\"true\" >\r\n                            <InputLabel id=\"demo-simple-select-standard-label\">Village </InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-standard-label\"\r\n                                id=\"demo-simple-select-standard\"\r\n                                InputProps={{ style: { width: 258 } }}\r\n\r\n                                margin=\"dense\"\r\n                                name=\"villageId\"\r\n                                label=\"Village\"\r\n                                type=\"text\"\r\n                                variant=\"standard\"\r\n                                value={formik.values.villageId}\r\n                                onChange={formik.handleChange}\r\n                                error={formik.touched.villageId && Boolean(formik.errors.villageId)}\r\n                                helperText={formik.touched.villageId && formik.errors.constituencyId}\r\n                            >\r\n                                <MenuItem value=\"\">\r\n                                    <em>None</em>\r\n                                </MenuItem>\r\n                                {villageList.map(({ _id, village }) => (\r\n                                    <MenuItem key={_id} value={_id}>{village}</MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                        <TextField\r\n                            InputProps={{ style: { width: 258 } }}\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"count\"\r\n                            placeholder=\"If have more booths Ex:Booth 1-5\"\r\n                            name=\"count\"\r\n                            label=\"Booth (Ex: Booth 1-5)\"\r\n                            type=\"text\"\r\n                            variant=\"standard\"\r\n                            value={formik.values.count}\r\n                            onChange={formik.handleChange}\r\n                            error={formik.touched.count && Boolean(formik.errors.count)}\r\n                            helperText={formik.touched.count && formik.errors.count}\r\n                        />\r\n                        <FormControl variant=\"standard\" fullWidth>\r\n                            <InputLabel id=\"demo-simple-select-standard-label\">Status</InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-standard-label\"\r\n                                id=\"demo-simple-select-standard\"\r\n                                label=\"status\"\r\n                                \r\n                                name=\"status\"\r\n                                value={formik.values.status}\r\n                                onChange={formik.handleChange}\r\n                                error={formik.touched.status && Boolean(formik.errors.status)}\r\n                                helperText={formik.touched.status && formik.errors.status}\r\n                            >\r\n                                <MenuItem value=\"\">\r\n                                    <em>None</em>\r\n                                </MenuItem>\r\n                                <MenuItem value={true}>Active</MenuItem>\r\n                                <MenuItem value={false}>In Active</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={handleClose}>Cancel</Button>\r\n                        <Button type=\"submit\">Add</Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n","C:\\polls\\ui\\src\\pages\\dashboard\\Voter.js",["890"],"import React, { useState } from \"react\";\r\nimport {\r\n    Button, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, InputLabel, MenuItem,\r\n    TableRow, Table,\r\n    TableHead,\r\n    TableBody,\r\n    TableCell\r\n} from \"@material-ui/core\";\r\nimport DistrictService from \"./Locality/Service/districtService\";\r\nimport ConstituencyService from \"./Locality/Service/constituencyService\";\r\nimport VillageService from \"./Locality/Service/villageService\";\r\nimport BoothService from \"./Locality/Service/boothService\";\r\nimport VoterService from \"./Locality/Service/voterService\";\r\nimport * as Yup from 'yup';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport { Grid, Select, TextField } from \"@material-ui/core\";\r\nimport { useFormik } from 'formik';\r\nimport { useEffect } from 'react';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: \"#30875b\",\r\n        color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 200,\r\n    },\r\n}));\r\nexport default function Voter() {\r\n    const tableHeaders = ['District', 'Constituency', 'Village','Booth','Voters','Edit', 'Delete'];\r\n    const classes = useStyles();\r\n    const [districtList, setDistrictList] = useState([]);\r\n    const [constituencyList, setConstituencyList] = useState([]);\r\n    const [villageList, setVillageList] = useState([]);\r\n    const [voterList, setVoterList] = useState([]);\r\n    const [boothList, setBoothList] = useState([]);\r\n    var [error, setError] = useState(null);\r\n    const [open, setOpen] = React.useState(false);\r\n    const [pg, setpg] = React.useState(0);\r\n    const [rpg, setrpg] = React.useState(5);\r\n    const [voter, setVoter] = useState({\r\n        districtId: '',\r\n        constituencyId: '',\r\n        villageId:'',\r\n        countId:'',\r\n        voter:'',\r\n    });\r\n    const validationSchema = Yup.object().shape({\r\n        districtId: Yup.string().required('district is required'),\r\n        constituencyId: Yup.string().required('constituency is required'),\r\n        villageId: Yup.string().required('village is required'),\r\n        countId:Yup.string().required('count is required'),\r\n        voter:Yup.string().required('count is required'),\r\n    });\r\n    const handleChangePage = (event, newpage) => {\r\n        setpg(newpage);\r\n    }\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setrpg(parseInt(event.target.value, 10));\r\n        setpg(0);\r\n    }\r\n    useEffect(() => {\r\n        getDistrictList();\r\n        //getConstituencyList();\r\n        getVoterList();\r\n        return () => {\r\n            setDistrictList([]);\r\n            setConstituencyList([]);\r\n            setVillageList([]);\r\n            setVoterList([]);\r\n        }\r\n    }, []);\r\n    const getDistrictList = () => {\r\n        DistrictService.getAllDistrict().then((res) => {\r\n            setDistrictList(res);\r\n        }).catch((err) => {\r\n            // setError(err.message);\r\n        });\r\n    }\r\n    const getConstituencyList = (destId) => {\r\n      const disListI = { districtId: destId };\r\n        ConstituencyService.getConstituencyByDistrictId(disListI).then((res) => {\r\n            setConstituencyList(res);\r\n        }).catch((err) => {\r\n            setError(err.message);\r\n        });\r\n    }\r\n    const getVillageList = (constituencyId) => {\r\n        const villListId = { constituencyId: constituencyId };\r\n        VillageService.getVillageByConstituencyId(villListId).then((res) => {\r\n            setVillageList(res);\r\n        }).catch((err) => {\r\n            setError(err.message);\r\n        });\r\n    }\r\n    const getBoothList = (villageId) => {\r\n        const boothListId = { villageId: villageId };\r\n        BoothService.getBoothByVillageId(boothListId).then((res) => {\r\n            debugger\r\n            setBoothList(res);\r\n        }).catch((err) => {\r\n            setError(err.message);\r\n        });\r\n    }\r\n   \r\n    const getVoterList = () => {\r\n        VoterService.getAllVoter().then((res) => {\r\n            setVoterList(res);\r\n        }).catch((err) => {\r\n            setError(err.message);\r\n        });\r\n    }\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    \r\n    const editVoter = (voter) => {\r\n        const obj = JSON.parse(JSON.stringify(voter));\r\n        obj.constituencyId = voter.constituencyId ? voter.constituencyId._id : '';\r\n        obj.districtId = voter.districtId ? voter.districtId._id : '';\r\n        obj.villageId = voter.villageId ? voter.villageId._id : '';\r\n        obj.countId= voter.countId ? voter.countId._id : '';\r\n        getConstituencyList(obj.districtId);\r\n        getVillageList(obj.constituencyId);\r\n        getBoothList(obj.villageId);\r\n        setVoter(obj);\r\n        handleOpen();\r\n    }\r\n    const deleteVoter = (voterdelete) => {\r\n        if (voterdelete) {\r\n            VoterService.deleteVoter(voterdelete).then((res) => {\r\n                getVoterList();\r\n            }).catch((err) => {\r\n            });\r\n        }\r\n    };\r\n \r\n    const formik = useFormik({\r\n        initialValues: voter,\r\n        enableReinitialize: true,\r\n        validationSchema: validationSchema,\r\n        onSubmit: (values, { resetForm }) => {\r\n            if (voter._id) {\r\n               VoterService.upadeVoter(values).then((res) => {\r\n                    handleClose();\r\n                    getVoterList();\r\n                    resetForm()\r\n                    alert(\" Voter Updated Successfully.\");\r\n                }).catch((err) => {\r\n                });\r\n            }\r\n            else {\r\n                VoterService.creteVoter(values).then((res) => {\r\n                    getVoterList();\r\n                    resetForm();\r\n                    handleClose();\r\n                    alert(\" Voter Added Successfully.\");\r\n                    // props.history.push('/app/vendor');\r\n                })\r\n                    .catch((err) => {\r\n\r\n                        alert(err.response.data.message)\r\n                    })\r\n            }\r\n\r\n        },\r\n    });\r\n    return (\r\n        <>\r\n            <PageTitle title=\"Voter\" button={<Button\r\n                variant=\"contained\" onClick={handleOpen}\r\n                size=\"medium\"\r\n                color=\"secondary\" style={{ backgroundColor: '#30875b' }}> Add Voter\r\n            </Button>} />\r\n            <Grid container spacing={4}>\r\n                <Grid item xs={12}>\r\n                    <Widget title=\"\" upperTitle noBodyPadding bodyClass={classes.tableOverflow}>\r\n                        <Table className=\"mb-0\">\r\n                            <TableHead >\r\n                                <TableRow>\r\n                                    {tableHeaders.map(key => (\r\n                                        <StyledTableCell key={key}>{key}</StyledTableCell>\r\n                                    ))}\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {voterList.slice(pg * rpg, pg * rpg + rpg).map((voter) => (\r\n                                    <TableRow key={voter._id}>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{voter.districtId?.district}</TableCell>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{voter.constituencyId?.constituency}</TableCell>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{voter.villageId?.village}</TableCell>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{voter.countId?.count}</TableCell>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{voter.voter}</TableCell>\r\n                                        <TableCell>\r\n                                            <EditIcon style={{ cursor: 'pointer' }} onClick={() => editVoter(voter)} >\r\n                                            </EditIcon >\r\n                                        </TableCell>\r\n                                        <TableCell>\r\n                                            <DeleteIcon style={{ cursor: 'pointer' }} onClick={() => deleteVoter(voter)} />\r\n                                        </TableCell>\r\n\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                        <TablePagination\r\n                            component=\"div\"\r\n                            rowsPerPageOptions={[5, 10, 25, 50, 75, 1000]}\r\n                            count={voterList.length}\r\n                            page={pg}\r\n                            onPageChange={handleChangePage}\r\n                            rowsPerPage={rpg}\r\n                            onRowsPerPageChange={handleChangeRowsPerPage}\r\n                        />\r\n                    </Widget>\r\n                </Grid>\r\n            </Grid>\r\n            <Dialog open={open} onClose={handleClose}>\r\n                <DialogTitle>Add Voter</DialogTitle>\r\n                <form onSubmit={formik.handleSubmit} >\r\n                    <DialogContent style={{ width: 308 }}>\r\n                        <FormControl variant=\"standard\" fullWidth=\"true\" >\r\n                            <InputLabel id=\"demo-simple-select-standard-label\">District</InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-standard-label\"\r\n                                id=\"demo-simple-select-standard\"\r\n                                InputProps={{ style: { width: 258 } }}\r\n                                autoFocus\r\n                                margin=\"dense\"\r\n                                name=\"districtId\"\r\n                                label=\"District\"\r\n                                type=\"text\"\r\n                                variant=\"standard\"\r\n                                value={formik.values.districtId}\r\n                                // getConstituencyList();\r\n                                onChange={e => {\r\n                                    formik.handleChange(e);\r\n                                    getConstituencyList(e.target.value)\r\n                                }}\r\n                                error={formik.touched.districtId && Boolean(formik.errors.districtId)}\r\n                                helperText={formik.touched.districtId && formik.errors.districtId}\r\n                            >\r\n                                <MenuItem value=\"\">\r\n                                    <em>None</em>\r\n                                </MenuItem>\r\n                                {districtList.map(({ _id, district }) => (\r\n                                    <MenuItem key={_id} value={_id}>{district}</MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                        <FormControl variant=\"standard\" fullWidth=\"true\" >\r\n                            <InputLabel id=\"demo-simple-select-standard-label\">Constituency </InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-standard-label\"\r\n                                id=\"demo-simple-select-standard\"\r\n                                InputProps={{ style: { width: 258 } }}\r\n                                margin=\"dense\"\r\n                                name=\"constituencyId\"\r\n                                label=\"Constituency\"\r\n                                type=\"text\"\r\n                                variant=\"standard\"\r\n                                value={formik.values.constituencyId}\r\n                                onChange={e => {\r\n                                    formik.handleChange(e);\r\n                                    getVillageList(e.target.value)\r\n                                }}\r\n                                error={formik.touched.constituencyId && Boolean(formik.errors.constituencyId)}\r\n                                helperText={formik.touched.constituencyId && formik.errors.constituencyId}\r\n                            >\r\n                                <MenuItem value=\"\">\r\n                                    <em>None</em>\r\n                                </MenuItem>\r\n                                {constituencyList.map(({ _id, constituency }) => (\r\n                                    <MenuItem key={_id} value={_id}>{constituency}</MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                        <FormControl variant=\"standard\" fullWidth=\"true\" >\r\n                            <InputLabel id=\"demo-simple-select-standard-label\">Village </InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-standard-label\"\r\n                                id=\"demo-simple-select-standard\"\r\n                                InputProps={{ style: { width: 258 } }}\r\n                                \r\n                                margin=\"dense\"\r\n                                name=\"villageId\"\r\n                                label=\"Village\"\r\n                                type=\"text\"\r\n                                variant=\"standard\"\r\n                                value={formik.values.villageId}\r\n                                onChange={e => {\r\n                                    formik.handleChange(e);\r\n                                    getBoothList(e.target.value)\r\n                                }}\r\n                                error={formik.touched.villageId && Boolean(formik.errors.villageId)}\r\n                                helperText={formik.touched.villageId && formik.errors.constituencyId}\r\n                            >\r\n                                <MenuItem value=\"\">\r\n                                    <em>None</em>\r\n                                </MenuItem>\r\n                                {villageList.map(({ _id, village }) => (\r\n                                    <MenuItem key={_id} value={_id}>{village}</MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                        <FormControl variant=\"standard\" fullWidth=\"true\" >\r\n                            <InputLabel id=\"demo-simple-select-standard-label\">Booth </InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-standard-label\"\r\n                                id=\"demo-simple-select-standard\"\r\n                                InputProps={{ style: { width: 258 } }}\r\n                                \r\n                                margin=\"dense\"\r\n                                name=\"countId\"\r\n                                label=\"Booth\"\r\n                                type=\"text\"\r\n                                variant=\"standard\"\r\n                                value={formik.values.countId}\r\n                                onChange={formik.handleChange}\r\n                                error={formik.touched.countId && Boolean(formik.errors.countId)}\r\n                                helperText={formik.touched.countId && formik.errors.countId}\r\n                            >\r\n                                <MenuItem value=\"\">\r\n                                    <em>None</em>\r\n                                </MenuItem>\r\n                                {boothList.map(({ _id, count }) => (\r\n                                    <MenuItem key={_id} value={_id}>{count}</MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                        <TextField\r\n                            InputProps={{ style: { width: 258 } }}\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"voter\"\r\n                            name=\"voter\"\r\n                            label=\"Enter Number Of Voters\"\r\n                            type=\"text\"\r\n                            variant=\"standard\"\r\n                            value={formik.values.voter}\r\n                            onChange={formik.handleChange}\r\n                            error={formik.touched.voter && Boolean(formik.errors.voter)}\r\n                            helperText={formik.touched.voter && formik.errors.voter}\r\n                        /> \r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={handleClose}>Cancel</Button>\r\n                        <Button type=\"submit\">Add</Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n","C:\\polls\\ui\\src\\pages\\dashboard\\Village.js",["891","892","893"],"import React, { useState } from \"react\";\r\nimport {\r\n    Button, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, InputLabel, MenuItem,\r\n    TableRow, Table,\r\n    TableHead,\r\n    TableBody,\r\n    TableCell\r\n} from \"@material-ui/core\";\r\nimport DistrictService from \"./Locality/Service/districtService\";\r\nimport ConstituencyService from \"./Locality/Service/constituencyService\";\r\nimport VillageService from \"./Locality/Service/villageService\";\r\nimport * as Yup from 'yup';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport { Grid, Select, TextField } from \"@material-ui/core\";\r\nimport { useFormik } from 'formik';\r\nimport { useEffect } from 'react';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: \"#30875b\",\r\n        color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 200,\r\n    },\r\n}));\r\nexport default function Village() {\r\n    const tableHeaders = ['District', 'Constituency', 'Village','Edit', 'Delete'];\r\n    const classes = useStyles();\r\n    const [districtList, setDistrictList] = useState([]);\r\n    const [constituencyList, setConstituencyList] = useState([]);\r\n    const [villageList, setVillageList] = useState([]);\r\n    const [formData, setFormData] = useState(\"\");\r\n    const [age, setAge] = React.useState('');\r\n    var [error, setError] = useState(null);\r\n    var [uploadError, setUploadError] = useState({isShowError:false,successCount:0,error:[],message:\"\"});\r\n    const [open, setOpen] = React.useState(false);\r\n    const [open1, setOpen1] = React.useState(false);\r\n    const [pg, setpg] = React.useState(0);\r\n    const [rpg, setrpg] = React.useState(5);\r\n    const [village, setVillage] = useState({\r\n        districtId: '',\r\n        constituencyId: '',\r\n        village:'',\r\n    });\r\n    const validationSchema = Yup.object().shape({\r\n        districtId: Yup.string().required('district is required'),\r\n        constituencyId: Yup.string().required('constituency is required'),\r\n        village: Yup.string().required('village is required'),\r\n    });\r\n    const handleChangePage = (event, newpage) => {\r\n        setpg(newpage);\r\n    }\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setrpg(parseInt(event.target.value, 10));\r\n        setpg(0);\r\n    }\r\n    useEffect(() => {\r\n        getDistrictList();\r\n        //getConstituencyList();\r\n        getVillageList();\r\n        return () => {\r\n            setDistrictList([]);\r\n            setConstituencyList([]);\r\n            setVillageList([]);\r\n        }\r\n    }, []);\r\n    const getDistrictList = () => {\r\n        DistrictService.getAllDistrict().then((res) => {\r\n            setDistrictList(res);\r\n        }).catch((err) => {\r\n            // setError(err.message);\r\n        });\r\n    }\r\n    // const getSubActivityList = (event, obj) => {\r\n    //     const userDetails = JSON.parse(localStorage.getItem(\"userDetail\"));\r\n    //     const getsubActList = { schooleId: userDetails.schoolId, activityId: event.target.value };\r\n    //     SubActivityService.getAllSubActivityByActivityId(getsubActList).then((res) => {\r\n    //         setSubActivityList(res);\r\n    //         if (obj) {\r\n    //             setActivity(obj);\r\n    //         }\r\n    //     }).catch((err) => {\r\n    //         // setError(err.message);\r\n    //     });\r\n    // }\r\n    const getConstituencyList = (destId) => {\r\n      const disListI = { districtId: destId };\r\n        ConstituencyService.getConstituencyByDistrictId(disListI).then((res) => {\r\n            setConstituencyList(res);\r\n        }).catch((err) => {\r\n            setError(err.message);\r\n        });\r\n    }\r\n    const getVillageList = () => {\r\n        VillageService.getAllVillage().then((res) => {\r\n            setVillageList(res);\r\n        }).catch((err) => {\r\n            setError(err.message);\r\n        });\r\n    }\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleOpen1 = () => {\r\n        setOpen1(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const handleClose1 = () => {\r\n        setOpen1(false);\r\n    };\r\n    const uploadFile = () => {\r\n       // console.log(JSON.stringify(data, null, 2));\r\n        VillageService.uploadImage(formData).then((res) => {\r\n        \r\n        alert(res.message);\r\n        res.isShowError = true;\r\n            setUploadError(res)\r\n            getVillageList();\r\n            })\r\n    };\r\n\r\n\r\n    const handleChangeImage = (evt) => {\r\n        console.log(\"Uploading\");\r\n        var file = evt.target.files[0];\r\n        let data = new FormData();\r\n        data.append('image', file);\r\n        setFormData(data)\r\n        // reader.onload = function (upload) {\r\n        //   console.log(upload.target.result)\r\n        //   setImage(upload.target.result)\r\n        // };\r\n        // reader.readAsDataURL(file);\r\n    \r\n        console.log(\"Uploaded\");\r\n    \r\n      }\r\n  \r\n    const editVillage = (village) => {\r\n        const obj = JSON.parse(JSON.stringify(village));\r\n        obj.constituencyId = village.constituencyId ? village.constituencyId._id : '';\r\n        obj.districtId = village.districtId ? village.districtId._id : '';\r\n        getConstituencyList(obj.districtId);\r\n        setVillage(obj);\r\n        handleOpen();\r\n    }\r\n    const deleteVillage = (villagedelete) => {\r\n        if (villagedelete) {\r\n            VillageService.deleteVillage(villagedelete).then((res) => {\r\n                getVillageList();\r\n            }).catch((err) => {\r\n            });\r\n        }\r\n    };\r\n\r\n \r\n    const formik = useFormik({\r\n        initialValues: village,\r\n        enableReinitialize: true,\r\n        validationSchema: validationSchema,\r\n        onSubmit: (values, { resetForm }) => {\r\n            if (village._id) {\r\n                VillageService.upadeVillaget(values).then((res) => {\r\n                    handleClose();\r\n                    getVillageList();\r\n                    resetForm()\r\n                    alert(\" Village Updated Successfully.\");\r\n                }).catch((err) => {\r\n                });\r\n            }\r\n            else {\r\n                VillageService.creteVillage(values).then((res) => {\r\n                    getVillageList();\r\n                    resetForm();\r\n                    handleClose();\r\n                    alert(\" Village Added Successfully.\");\r\n                    // props.history.push('/app/vendor');\r\n                })\r\n                    .catch((err) => {\r\n\r\n                        alert(err.response.data.message)\r\n                    })\r\n            }\r\n\r\n        },\r\n    });\r\n    return (\r\n        <>\r\n         <Grid container spacing={2}>\r\n                <Grid item xs={10}>\r\n            <PageTitle title=\"Village\"   button={<Button\r\n                variant=\"contained\" onClick={handleOpen}\r\n                size=\"medium\"\r\n                color=\"secondary\" style={{ backgroundColor: '#30875b' }}> Add Village\r\n            </Button> }\r\n             />\r\n             \r\n             </Grid>\r\n             <Grid item xs={2}>\r\n             <PageTitle   button={<Button\r\n                variant=\"contained\" onClick={handleOpen1}\r\n                size=\"medium\"\r\n                color=\"secondary\" style={{ backgroundColor: '#30875b', padding:'10px' }}> Data Upload\r\n            </Button> }\r\n             />\r\n              <Dialog open={open1} onClose={handleClose1}>\r\n              <DialogTitle>Data Upload </DialogTitle>\r\n              <form onSubmit={formik.handleSubmit} >\r\n                  <DialogContent style={{ width: 308 }}>\r\n                  <div style={{ marginTop: 16 }} >\r\n                   {uploadError.isShowError ? <div>\r\n                        <div><span style={{color:\"green\"}}>Total Uploaded: </span> {uploadError?.successCount}</div>\r\n                        <div> <span style={{color:\"red\"}}>Failed: </span> {uploadError?.error.map((res)=><span>{res.villages}</span>)}</div>\r\n                    </div> :\"\"}\r\n\r\n              <lable>File Upload</lable>\r\n              <div>\r\n                <input style={{ marginTop: 7 }}\r\n                  accept=\"xlsx/*\"\r\n                  className={classes.input}\r\n                  id=\"raised-button-file\"\r\n                  multiple\r\n                  type=\"file\"\r\n                  onChange={handleChangeImage}\r\n                />\r\n              </div>\r\n            </div>    \r\n                  </DialogContent>\r\n                  </form>\r\n                  <DialogActions>\r\n                      <Button onClick={handleClose1}>Cancel</Button>\r\n                      <Button onClick={uploadFile} type=\"submit\">Upload</Button>\r\n                  </DialogActions>\r\n             \r\n          </Dialog>\r\n            \r\n            </Grid>\r\n            </Grid>\r\n            <Grid container spacing={4}>\r\n                <Grid item xs={12}>\r\n                    <Widget title=\"\" upperTitle noBodyPadding bodyClass={classes.tableOverflow}>\r\n                        <Table className=\"mb-0\">\r\n                            <TableHead >\r\n                                <TableRow>\r\n                                    {tableHeaders.map(key => (\r\n                                        <StyledTableCell key={key}>{key}</StyledTableCell>\r\n                                    ))}\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {villageList.slice(pg * rpg, pg * rpg + rpg).map((village) => (\r\n                                    <TableRow key={village._id}>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{village.districtId.district}</TableCell>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{village.constituencyId?.constituency}</TableCell>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{village.village}</TableCell>\r\n                                        <TableCell>\r\n                                            <EditIcon style={{ cursor: 'pointer' }} onClick={() => editVillage(village)} >\r\n                                            </EditIcon >\r\n                                        </TableCell>\r\n                                        <TableCell>\r\n                                            <DeleteIcon style={{ cursor: 'pointer' }} onClick={() => deleteVillage(village)} />\r\n                                        </TableCell>\r\n\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                        <TablePagination\r\n                            component=\"div\"\r\n                            rowsPerPageOptions={[ 10,  50, 100, 200, 1000]}\r\n                            count={villageList.length}\r\n                            page={pg}\r\n                            onPageChange={handleChangePage}\r\n                            rowsPerPage={rpg}\r\n                            onRowsPerPageChange={handleChangeRowsPerPage}\r\n                        />\r\n                    </Widget>\r\n                </Grid>\r\n            </Grid>\r\n            <Dialog open={open} onClose={handleClose}>\r\n                <DialogTitle>Add Village</DialogTitle>\r\n                <form onSubmit={formik.handleSubmit} >\r\n                    <DialogContent style={{ width: 308 }}>\r\n                        <FormControl variant=\"standard\" fullWidth=\"true\" >\r\n                            <InputLabel id=\"demo-simple-select-standard-label\">District</InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-standard-label\"\r\n                                id=\"demo-simple-select-standard\"\r\n                                InputProps={{ style: { width: 258 } }}\r\n                                autoFocus\r\n                                margin=\"dense\"\r\n                                name=\"districtId\"\r\n                                label=\"District\"\r\n                                type=\"text\"\r\n                                variant=\"standard\"\r\n                                value={formik.values.districtId}\r\n                                // getConstituencyList();\r\n                                onChange={e => {\r\n                                    formik.handleChange(e);\r\n                                    getConstituencyList(e.target.value)\r\n                                }}\r\n                                error={formik.touched.districtId && Boolean(formik.errors.districtId)}\r\n                                helperText={formik.touched.districtId && formik.errors.districtId}\r\n                            >\r\n                                <MenuItem value=\"\">\r\n                                    <em>None</em>\r\n                                </MenuItem>\r\n                                {districtList.map(({ _id, district }) => (\r\n                                    <MenuItem key={_id} value={_id}>{district}</MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                        <FormControl variant=\"standard\" fullWidth=\"true\" >\r\n                            <InputLabel id=\"demo-simple-select-standard-label\">Constituency </InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-standard-label\"\r\n                                id=\"demo-simple-select-standard\"\r\n                                InputProps={{ style: { width: 258 } }}\r\n                                autoFocus\r\n                                margin=\"dense\"\r\n                                name=\"constituencyId\"\r\n                                label=\"Constituency\"\r\n                                type=\"text\"\r\n                                variant=\"standard\"\r\n                                value={formik.values.constituencyId}\r\n                                onChange={formik.handleChange}\r\n                                error={formik.touched.constituencyId && Boolean(formik.errors.constituencyId)}\r\n                                helperText={formik.touched.constituencyId && formik.errors.constituencyId}\r\n                            >\r\n                                <MenuItem value=\"\">\r\n                                    <em>None</em>\r\n                                </MenuItem>\r\n                                {constituencyList.map(({ _id, constituency }) => (\r\n                                    <MenuItem key={_id} value={_id}>{constituency}</MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                        <TextField\r\n                            InputProps={{ style: { width: 258 } }}\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"village\"\r\n                            name=\"village\"\r\n                            label=\"Village\"\r\n                            type=\"text\"\r\n                            variant=\"standard\"\r\n                            value={formik.values.village}\r\n                            onChange={formik.handleChange}\r\n                            error={formik.touched.village && Boolean(formik.errors.village)}\r\n                            helperText={formik.touched.village && formik.errors.village}\r\n                        /> \r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={handleClose}>Cancel</Button>\r\n                        <Button type=\"submit\">Add</Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n","C:\\polls\\ui\\src\\pages\\dashboard\\Contact.js",["894","895","896","897","898","899","900","901"],"import React, { useState } from \"react\";\r\nimport {\r\n    Button, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, InputLabel, MenuItem,\r\n    TableRow, Table,\r\n    TableHead,\r\n    TableBody,\r\n    TableCell\r\n} from \"@material-ui/core\";\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport DistrictService from \"./Locality/Service/districtService\";\r\nimport ConstituencyService from \"./Locality/Service/constituencyService\";\r\nimport VillageService from \"./Locality/Service/villageService\";\r\nimport BoothService from \"./Locality/Service/boothService\";\r\nimport ContactService from \"./Locality/Service/contactService\";\r\nimport CasteService from \"./Locality/Service/casteService\";\r\nimport PartyService from \"./Locality/Service/partyService\";\r\nimport * as Yup from 'yup';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport { Grid, Select, TextField } from \"@material-ui/core\";\r\nimport { useFormik } from 'formik';\r\nimport { useEffect } from 'react';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: \"#30875b\",\r\n        color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 200,\r\n    },\r\n}));\r\nexport default function Contact() {\r\n    const tableHeaders = ['District', 'Constituency', 'Village','name','Mobile','Caste','Party','Significance','Edit', 'Delete'];\r\n    const classes = useStyles();\r\n    const [districtList, setDistrictList] = useState([]);\r\n    const [casteList, setCasteList] = useState([]);\r\n    const [partyList, setPartyList] = useState([]);\r\n    const [constituencyList, setConstituencyList] = useState([]);\r\n    const [villageList, setVillageList] = useState([]);\r\n    const [contactList, setContactList] = useState([]);\r\n    const [age, setAge] = React.useState('');\r\n    var [error, setError] = useState(null);\r\n    const [tabelIdList, setTabelIdList] = useState([]);\r\n    const [open, setOpen] = React.useState(false);\r\n    const [pg, setpg] = React.useState(0);\r\n    const [rpg, setrpg] = React.useState(5);\r\n    const [contact, setContact] = useState({\r\n        districtId: '',\r\n        constituencyId: '',\r\n        villageId:'',\r\n        name :'',\r\n        gender:'',\r\n        age :'',\r\n        mobile:'',\r\n        casteId:'',\r\n        partyId:'',\r\n        significance:'',\r\n    });\r\n    const validationSchema = Yup.object().shape({\r\n        districtId: Yup.string().required('district is required'),\r\n        constituencyId: Yup.string().required('constituency is required'),\r\n        villageId: Yup.string().required('village is required'),\r\n        name:Yup.string().required('name is required'),\r\n        gender: Yup.string().required('gender is required'),\r\n        age: Yup.string().required().matches(/^[0-9]+$/, \"Must be only digits\"),\r\n        mobile: Yup.string().required()\r\n        .matches(/^[0-9]+$/, \"Must be only digits\")\r\n        .min(10, 'Must be exactly 10 digits')\r\n        .max(10, 'Must be exactly 10 digits'),\r\n        casteId:Yup.string().required('caste is required'),\r\n        partyId:Yup.string().required('party is required'),\r\n        significance:Yup.string().required('significance is required'),\r\n    });\r\n    const handleChangePage = (event, newpage) => {\r\n        setpg(newpage);\r\n    }\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setrpg(parseInt(event.target.value, 10));\r\n        setpg(0);\r\n    }\r\n    useEffect(() => {\r\n        getDistrictList();\r\n        //getConstituencyList();\r\n         getContactList();\r\n         getCasteList();\r\n         getPartyList();\r\n        return () => {\r\n            setDistrictList([]);\r\n            setConstituencyList([]);\r\n            setVillageList([]);\r\n        }\r\n    }, []);\r\n    const getDistrictList = () => {\r\n        DistrictService.getAllDistrict().then((res) => {\r\n            setDistrictList(res);\r\n        }).catch((err) => {\r\n            // setError(err.message);\r\n        });\r\n    }\r\n    const getConstituencyList = (destId) => {\r\n      const disListI = { districtId: destId };\r\n        ConstituencyService.getConstituencyByDistrictId(disListI).then((res) => {\r\n           \r\n            setConstituencyList(res);\r\n           \r\n        }).catch((err) => {\r\n            setError(err.message);\r\n        });\r\n    }\r\n    const getVillageList = (constituencyId) => {\r\n        const villListId = { constituencyId: constituencyId };\r\n        VillageService.getVillageByConstituencyId(villListId).then((res) => {\r\n            setVillageList(res);\r\n           \r\n        }).catch((err) => {\r\n            setError(err.message);\r\n        });\r\n    }\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const onclick = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const handleChange = (event) => {\r\n        setAge(event.target.value);\r\n    };\r\n    const onSubmit = data => {\r\n        console.log(JSON.stringify(data, null, 2));\r\n    };\r\n    const getContactList = () => {\r\n        ContactService.getAllContact().then((res) => {\r\n            setContactList(res);\r\n        }).catch((err) => {\r\n            setError(err.message);\r\n        });\r\n    }\r\n    const getCasteList = () => {\r\n        CasteService.getAllCaste().then((res) => {\r\n            setCasteList(res);\r\n        }).catch((err) => {\r\n            setError(err.message);\r\n        });\r\n    }\r\n    const getPartyList = () => {\r\n        PartyService.getAllParty().then((res) => {\r\n            setPartyList(res);\r\n        }).catch((err) => {\r\n            setError(err.message);\r\n        });\r\n    }\r\n    const editContact = (contact) => {\r\n        const obj = JSON.parse(JSON.stringify(contact));\r\n        obj.constituencyId = contact.constituencyId ? contact.constituencyId._id : '';\r\n        obj.districtId = contact.districtId ? contact.districtId._id : '';\r\n        obj.villageId = contact.villageId ? contact.villageId._id : '';\r\n        obj.casteId = contact.casteId ? contact.casteId._id : '';\r\n        obj.partyId = contact.partyId ? contact.partyId._id : '';\r\n        getConstituencyList(obj.districtId);\r\n        getVillageList(obj.constituencyId);\r\n        \r\n        setContact(obj);\r\n        \r\n        handleOpen();\r\n    }\r\n    const deleteContact = (contactdelete) => {\r\n        if (contactdelete) {\r\n            ContactService.deleteContact(contactdelete).then((res) => {\r\n                getContactList();\r\n            }).catch((err) => {\r\n            });\r\n        }\r\n    };\r\n    const formik = useFormik({\r\n        initialValues: contact,\r\n        enableReinitialize: true,\r\n        validationSchema: validationSchema,\r\n        onSubmit: (values, { resetForm }) => {\r\n            if (contact._id) {\r\n                ContactService.upadecontact(values).then((res) => {\r\n                    handleClose();\r\n                    getContactList();\r\n                    resetForm()\r\n                    alert(\" Contact Updated Successfully.\");\r\n                }).catch((err) => {\r\n                });\r\n            }\r\n            else {\r\n                ContactService.creteContact(values).then((res) => {\r\n                    getContactList();\r\n                    resetForm();\r\n                    handleClose();\r\n                    alert(\" Contact Added Successfully.\");\r\n                    // props.history.push('/app/vendor');\r\n                })\r\n                    .catch((err) => {\r\n\r\n                        alert(err.response.data.message)\r\n                    })\r\n            }\r\n\r\n        },\r\n    });\r\n    return (\r\n        <>\r\n            <PageTitle title=\"Contact\" button={<Button\r\n                variant=\"contained\" onClick={handleOpen}\r\n                size=\"medium\"\r\n                color=\"secondary\" style={{ backgroundColor: '#30875b' }}> Add Contact\r\n            </Button>} />\r\n            <Grid container spacing={4}>\r\n                <Grid item xs={12}>\r\n                    <Widget title=\"\" upperTitle noBodyPadding bodyClass={classes.tableOverflow}>\r\n                        <Table className=\"mb-0\">\r\n                            <TableHead >\r\n                                <TableRow>\r\n                                    {tableHeaders.map(key => (\r\n                                        <StyledTableCell key={key}>{key}</StyledTableCell>\r\n                                    ))}\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {contactList.slice(pg * rpg, pg * rpg + rpg).map((contact) => (\r\n                                    <TableRow key={contact._id}>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{contact.districtId?.district}</TableCell>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{contact.constituencyId?.constituency}</TableCell>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{contact.villageId?.village}</TableCell>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{contact.name}</TableCell>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{contact.mobile}</TableCell>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{contact.casteId?.caste}</TableCell>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{contact.partyId?.party}</TableCell>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{contact.significance}</TableCell>\r\n                                        <TableCell>\r\n                                            <EditIcon style={{ cursor: 'pointer' }} onClick={() => editContact(contact)} >\r\n                                            </EditIcon >\r\n                                        </TableCell>\r\n                                        <TableCell>\r\n                                            <DeleteIcon style={{ cursor: 'pointer' }} onClick={() => deleteContact(contact)} />\r\n                                        </TableCell>\r\n\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                        <TablePagination\r\n                            component=\"div\"\r\n                            rowsPerPageOptions={[5,  100,1000 ]}\r\n                            count={contactList.length}\r\n                            page={pg}\r\n                            onPageChange={handleChangePage}\r\n                            rowsPerPage={rpg}\r\n                            onRowsPerPageChange={handleChangeRowsPerPage}\r\n                        />\r\n                    </Widget>\r\n                </Grid>\r\n            </Grid>\r\n            <Dialog open={open} onClose={handleClose}>\r\n                <DialogTitle>Add Contact</DialogTitle>\r\n                <form onSubmit={formik.handleSubmit} >\r\n                    <DialogContent style={{ width: 308 }}>\r\n                        <FormControl variant=\"standard\" fullWidth=\"true\" >\r\n                            <InputLabel id=\"demo-simple-select-standard-label\">District</InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-standard-label\"\r\n                                id=\"demo-simple-select-standard\"\r\n                                InputProps={{ style: { width: 258 } }}\r\n                                autoFocus\r\n                                margin=\"dense\"\r\n                                name=\"districtId\"\r\n                                label=\"District\"\r\n                                type=\"text\"\r\n                                variant=\"standard\"\r\n                                value={formik.values.districtId}\r\n                                // getConstituencyList();\r\n                                onChange={e => {\r\n                                    formik.handleChange(e);\r\n                                    getConstituencyList(e.target.value)\r\n                                }}\r\n                                error={formik.touched.districtId && Boolean(formik.errors.districtId)}\r\n                                helperText={formik.touched.districtId && formik.errors.districtId}\r\n                            >\r\n                                <MenuItem value=\"\">\r\n                                    <em>None</em>\r\n                                </MenuItem>\r\n                                {districtList.map(({ _id, district }) => (\r\n                                    <MenuItem key={_id} value={_id}>{district}</MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                        <FormControl variant=\"standard\" fullWidth=\"true\" >\r\n                            <InputLabel id=\"demo-simple-select-standard-label\">Constituency </InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-standard-label\"\r\n                                id=\"demo-simple-select-standard\"\r\n                                InputProps={{ style: { width: 258 } }}\r\n                                \r\n                                margin=\"dense\"\r\n                                name=\"constituencyId\"\r\n                                label=\"Constituency\"\r\n                                type=\"text\"\r\n                                variant=\"standard\"\r\n                                value={formik.values.constituencyId}\r\n                                onChange={e => {\r\n                                    formik.handleChange(e);\r\n                                    getVillageList(e.target.value)\r\n                                }}\r\n                                error={formik.touched.constituencyId && Boolean(formik.errors.constituencyId)}\r\n                                helperText={formik.touched.constituencyId && formik.errors.constituencyId}\r\n                            >\r\n                                <MenuItem value=\"\">\r\n                                    <em>None</em>\r\n                                </MenuItem>\r\n                                {constituencyList.map(({ _id, constituency }) => (\r\n                                    <MenuItem key={_id} value={_id}>{constituency}</MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                        <FormControl variant=\"standard\" fullWidth=\"true\" >\r\n                            <InputLabel id=\"demo-simple-select-standard-label\">Village </InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-standard-label\"\r\n                                id=\"demo-simple-select-standard\"\r\n                                InputProps={{ style: { width: 258 } }}\r\n                                \r\n                                margin=\"dense\"\r\n                                name=\"villageId\"\r\n                                label=\"Village\"\r\n                                type=\"text\"\r\n                                variant=\"standard\"\r\n                                value={formik.values.villageId}\r\n                                onChange={formik.handleChange}\r\n                                error={formik.touched.villageId && Boolean(formik.errors.villageId)}\r\n                                helperText={formik.touched.villageId && formik.errors.constituencyId}\r\n                            >\r\n                                <MenuItem value=\"\">\r\n                                    <em>None</em>\r\n                                </MenuItem>\r\n                                {villageList.map(({ _id, village }) => (\r\n                                    <MenuItem key={_id} value={_id}>{village}</MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                              <TextField\r\n                            InputProps={{ style: { width: 258 } }}\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"name\"\r\n                            name=\"name\"\r\n                            label=\"Name\"\r\n                            type=\"text\"\r\n                            variant=\"standard\"\r\n                            value={formik.values.name}\r\n                            onChange={formik.handleChange}\r\n                            error={formik.touched.name && Boolean(formik.errors.name)}\r\n                            helperText={formik.touched.name && formik.errors.name}\r\n                        /> \r\n                         <FormControl component=\"fieldset\">\r\n                    <FormLabel component=\"legend\" >Gender</FormLabel>\r\n                    <RadioGroup aria-label=\"gender\" name=\"gender\"  margin=\"dense\"\r\n                    id=\"gender  \"  type=\"radio \"\r\n                    variant=\"standard\"\r\n                    value={formik.values.gender}\r\n                    onChange={formik.handleChange}\r\n                    error={formik.touched.gender && Boolean(formik.errors.gender)}\r\n                    helperText={formik.touched.gender && formik.errors.gender}\r\n                    >\r\n                      <FormControlLabel value=\"Male\" control={<Radio />} label=\"Male\" />\r\n                      <FormControlLabel value=\"Female\" control={<Radio />} label=\"Female\" />\r\n\r\n                    </RadioGroup>\r\n                  </FormControl>\r\n                  <TextField\r\n                            InputProps={{ style: { width: 258 } }}\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"age\"\r\n                            name=\"age\"\r\n                            label=\"Age\"\r\n                            type=\"text\"\r\n                            variant=\"standard\"\r\n                            value={formik.values.age}\r\n                            onChange={formik.handleChange}\r\n                            error={formik.touched.age && Boolean(formik.errors.age)}\r\n                            helperText={formik.touched.age && formik.errors.age}\r\n                        /> \r\n                         <TextField\r\n                    InputProps={{ style: { width: 258 } }}\r\n                    \r\n                    margin=\"dense\"\r\n                    id=\"mobile\"\r\n                    name=\"mobile\"\r\n                    label=\"Mobile Number\"\r\n                    type=\"text\"\r\n                    variant=\"standard\"\r\n                    value={formik.values.mobile}\r\n                    onChange={formik.handleChange}\r\n                    error={formik.touched.mobile && Boolean(formik.errors.mobile)}\r\n                    helperText={formik.touched.mobile && formik.errors.mobile}\r\n                  />\r\n                  <FormControl variant=\"standard\" fullWidth=\"true\" >\r\n                            <InputLabel id=\"demo-simple-select-standard-label\">Caste</InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-standard-label\"\r\n                                id=\"demo-simple-select-standard\"\r\n                                InputProps={{ style: { width: 258 } }}\r\n                                autoFocus\r\n                                margin=\"dense\"\r\n                                name=\"casteId\"\r\n                                label=\"Caste\"\r\n                                type=\"text\"\r\n                                variant=\"standard\"\r\n                                value={formik.values.casteId}\r\n                                // getConstituencyList();\r\n                                onChange={formik.handleChange}\r\n                                error={formik.touched.casteId && Boolean(formik.errors.casteId)}\r\n                                helperText={formik.touched.casteId && formik.errors.casteId}\r\n                            >\r\n                                <MenuItem value=\"\">\r\n                                    <em>None</em>\r\n                                </MenuItem>\r\n                                {casteList.map(({ _id, caste }) => (\r\n                                    <MenuItem key={_id} value={_id}>{caste}</MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                        <FormControl variant=\"standard\" fullWidth=\"true\" >\r\n                            <InputLabel id=\"demo-simple-select-standard-label\">Party</InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-standard-label\"\r\n                                id=\"demo-simple-select-standard\"\r\n                                InputProps={{ style: { width: 258 } }}\r\n                                autoFocus\r\n                                margin=\"dense\"\r\n                                name=\"partyId\"\r\n                                label=\"Party\"\r\n                                type=\"text\"\r\n                                variant=\"standard\"\r\n                                value={formik.values.partyId}\r\n                                // getConstituencyList();\r\n                                onChange={formik.handleChange}\r\n                                error={formik.touched.partyId && Boolean(formik.errors.partyId)}\r\n                                helperText={formik.touched.partyId && formik.errors.partyId}\r\n                            >\r\n                                <MenuItem value=\"\">\r\n                                    <em>None</em>\r\n                                </MenuItem>\r\n                                {partyList.map(({ _id, party }) => (\r\n                                    <MenuItem key={_id} value={_id}>{party}</MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                        <TextField\r\n                    InputProps={{ style: { width: 258 } }}\r\n                    margin=\"dense\"\r\n                    id=\"significance\"\r\n                    name=\"significance\"\r\n                    label=\"Significance\"\r\n                    type=\"text\"\r\n                    variant=\"standard\"\r\n                    value={formik.values.significance}\r\n                    onChange={formik.handleChange}\r\n                    error={formik.touched.significance && Boolean(formik.errors.significance)}\r\n                    helperText={formik.touched.significance && formik.errors.significance}\r\n                  />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={handleClose}>Cancel</Button>\r\n                        <Button type=\"submit\">Add</Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n","C:\\polls\\ui\\src\\components\\Header\\Header.js",["902","903","904","905","906"],"import React, { useState } from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  InputBase,\r\n  Menu,\r\n  MenuItem,\r\n  Fab,\r\n  Link\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Menu as MenuIcon,\r\n  Person as AccountIcon,\r\n  Search as SearchIcon,\r\n  Send as SendIcon,\r\n  ArrowBack as ArrowBackIcon,\r\n  BuildTwoTone,\r\n} from \"@material-ui/icons\";\r\nimport classNames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport {  Typography, Button } from \"../Wrappers\";\r\nimport Notification from \"../Notification/Notification\";\r\nimport UserAvatar from \"../UserAvatar/UserAvatar\";\r\n\r\n// context\r\nimport {\r\n  useLayoutState,\r\n  useLayoutDispatch,\r\n  toggleSidebar,\r\n} from \"../../context/LayoutContext\";\r\nimport { useUserDispatch, signOut } from \"../../context/UserContext\";\r\n\r\nconst messages = [\r\n  {\r\n    id: 0,\r\n    variant: \"warning\",\r\n    name: \"Jane Hew\",\r\n    message: \"Hey! How is it going?\",\r\n    time: \"9:32\",\r\n  },\r\n  {\r\n    id: 1,\r\n    variant: \"success\",\r\n    name: \"Lloyd Brown\",\r\n    message: \"Check out my new Dashboard\",\r\n    time: \"9:18\",\r\n  },\r\n  {\r\n    id: 2,\r\n    variant: \"primary\",\r\n    name: \"Mark Winstein\",\r\n    message: \"I want rearrange the appointment\",\r\n    time: \"9:15\",\r\n  },\r\n  {\r\n    id: 3,\r\n    variant: \"secondary\",\r\n    name: \"Liana Dutti\",\r\n    message: \"Good news from sale department\",\r\n    time: \"9:09\",\r\n  },\r\n];\r\n\r\nconst notifications = [\r\n  { id: 0, color: \"warning\", message: \"Check out this awesome ticket\" },\r\n  {\r\n    id: 1,\r\n    color: \"success\",\r\n    type: \"info\",\r\n    message: \"What is the best way to get ...\",\r\n  },\r\n  {\r\n    id: 2,\r\n    color: \"secondary\",\r\n    type: \"notification\",\r\n    message: \"This is just a simple notification\",\r\n  },\r\n  {\r\n    id: 3,\r\n    color: \"primary\",\r\n    type: \"e-commerce\",\r\n    message: \"12 new orders has arrived today\",\r\n  },\r\n];\r\n\r\nexport default function Header(props) {\r\n  var classes = useStyles();\r\n\r\n  // global\r\n  var layoutState = useLayoutState();\r\n  var layoutDispatch = useLayoutDispatch();\r\n  var userDispatch = useUserDispatch();\r\n\r\n  // local\r\n  var [mailMenu, setMailMenu] = useState(null);\r\n  var [isMailsUnread, setIsMailsUnread] = useState(true);\r\n  var [notificationsMenu, setNotificationsMenu] = useState(null);\r\n  var [isNotificationsUnread, setIsNotificationsUnread] = useState(true);\r\n  var [profileMenu, setProfileMenu] = useState(null);\r\n  var [isSearchOpen, setSearchOpen] = useState(false);\r\n  const userDetails = JSON.parse(localStorage.getItem(\"userDetail\"));\r\n  \r\n\r\n  // style={{ backgroundColor: 'rgb(255, 92, 147)', color: 'white' }}\r\n  return (\r\n    <AppBar position=\"fixed\" className={classes.appBar} style={{backgroundColor : '#30875b'}}>\r\n      <Toolbar className={classes.toolbar} >\r\n        <IconButton\r\n          color=\"inherit\"\r\n          onClick={() => toggleSidebar(layoutDispatch)}\r\n          className={classNames(\r\n            classes.headerMenuButtonSandwich,\r\n            classes.headerMenuButtonCollapse,\r\n          )}\r\n        >\r\n          {layoutState.isSidebarOpened ? (\r\n            <ArrowBackIcon\r\n              classes={{\r\n                root: classNames(\r\n                  classes.headerIcon,\r\n                  classes.headerIconCollapse,\r\n                ),\r\n              }}\r\n            />\r\n          ) : (\r\n            <MenuIcon\r\n              classes={{\r\n                root: classNames(\r\n                  classes.headerIcon,\r\n                  classes.headerIconCollapse,\r\n                ),\r\n              }}\r\n            />\r\n          )}\r\n        </IconButton>\r\n        <Typography variant=\"h6\" weight=\"medium\" className={classes.logotype} style={{ fontSize:\"calc(2.142rem)\", fontWeight:\"600\"}}>\r\n        Sure shot\r\n        </Typography>\r\n       \r\n        <div className={classes.grow} />\r\n        {/* <Button component={Link} href=\"https://flatlogic.com/templates/react-material-admin-full\" variant={\"outlined\"} color={\"secondary\"} className={classes.purchaseBtn}>Unlock full version</Button> */}\r\n        <div\r\n          className={classNames(classes.search, {\r\n            [classes.searchFocused]: isSearchOpen,\r\n          })}\r\n        >\r\n           \r\n          <div\r\n            className={classNames(classes.searchIcon, {\r\n              [classes.searchIconOpened]: isSearchOpen,\r\n            })}\r\n            onClick={() => setSearchOpen(!isSearchOpen)}\r\n          >\r\n            <SearchIcon classes={{ root: classes.headerIcon }} />\r\n          </div>\r\n\r\n          \r\n\r\n          <InputBase\r\n            placeholder=\"Search…\"\r\n            classes={{\r\n              root: classes.inputRoot,\r\n              input: classes.inputInput,\r\n            }}\r\n          />\r\n        </div>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"mail-menu\"\r\n          onClick={e => {\r\n            setNotificationsMenu(e.currentTarget);\r\n            setIsNotificationsUnread(false);\r\n          }}\r\n          className={classes.headerMenuButton}\r\n        >\r\n         \r\n        </IconButton>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"mail-menu\"\r\n          onClick={e => {\r\n            setMailMenu(e.currentTarget);\r\n            setIsMailsUnread(false);\r\n          }}\r\n          className={classes.headerMenuButton}\r\n        >\r\n         \r\n        </IconButton>\r\n        <IconButton\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n          className={classes.headerMenuButton}\r\n          aria-controls=\"profile-menu\"\r\n          onClick={e => setProfileMenu(e.currentTarget)}\r\n        >\r\n          <AccountIcon classes={{ root: classes.headerIcon }} />\r\n        </IconButton>\r\n        <Menu\r\n          id=\"mail-menu\"\r\n          open={Boolean(mailMenu)}\r\n          anchorEl={mailMenu}\r\n          onClose={() => setMailMenu(null)}\r\n          MenuListProps={{ className: classes.headerMenuList }}\r\n          className={classes.headerMenu}\r\n          classes={{ paper: classes.profileMenu }}\r\n          disableAutoFocusItem\r\n        >\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography variant=\"h4\" weight=\"medium\">\r\n              New Messages\r\n            </Typography>\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              component=\"a\"\r\n              color=\"secondary\"\r\n            >\r\n              {messages.length} New Messages\r\n            </Typography>\r\n          </div>\r\n          {messages.map(message => (\r\n            <MenuItem key={message.id} className={classes.messageNotification}>\r\n              <div className={classes.messageNotificationSide}>\r\n                <UserAvatar color={message.variant} name={message.name} />\r\n                <Typography size=\"sm\" color=\"text\" colorBrightness=\"secondary\">\r\n                  {message.time}\r\n                </Typography>\r\n              </div>\r\n              <div\r\n                className={classNames(\r\n                  classes.messageNotificationSide,\r\n                  classes.messageNotificationBodySide,\r\n                )}\r\n              >\r\n                <Typography weight=\"medium\" gutterBottom>\r\n                  {message.name}\r\n                </Typography>\r\n                <Typography color=\"text\" colorBrightness=\"secondary\">\r\n                  {message.message}\r\n                </Typography>\r\n              </div>\r\n            </MenuItem>\r\n          ))}\r\n          <Fab\r\n            variant=\"extended\"\r\n            color=\"primary\"\r\n            aria-label=\"Add\"\r\n            className={classes.sendMessageButton}\r\n          >\r\n            Send New Message\r\n            <SendIcon className={classes.sendButtonIcon} />\r\n          </Fab>\r\n        </Menu>\r\n        <Menu\r\n          id=\"notifications-menu\"\r\n          open={Boolean(notificationsMenu)}\r\n          anchorEl={notificationsMenu}\r\n          onClose={() => setNotificationsMenu(null)}\r\n          className={classes.headerMenu}\r\n          disableAutoFocusItem\r\n        >\r\n          {notifications.map(notification => (\r\n            <MenuItem\r\n              key={notification.id}\r\n              onClick={() => setNotificationsMenu(null)}\r\n              className={classes.headerMenuItem}\r\n            >\r\n              <Notification {...notification} typographyVariant=\"inherit\" />\r\n            </MenuItem>\r\n          ))}\r\n        </Menu>\r\n        <Menu\r\n          id=\"profile-menu\"\r\n          open={Boolean(profileMenu)}\r\n          anchorEl={profileMenu}\r\n          onClose={() => setProfileMenu(null)}\r\n          className={classes.headerMenu}\r\n          classes={{ paper: classes.profileMenu }}\r\n          disableAutoFocusItem\r\n        >\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography variant=\"h4\" weight=\"medium\">\r\n            {userDetails?.name}\r\n            </Typography>\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              component=\"a\"\r\n              color=\"primary\"\r\n              href=\"https://flatlogic.com\"\r\n            >\r\n                {userDetails?.email}\r\n            </Typography>\r\n          </div>\r\n          {/* <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <AccountIcon className={classes.profileMenuIcon} /> Profile\r\n          </MenuItem>\r\n          <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <AccountIcon className={classes.profileMenuIcon} /> Tasks\r\n          </MenuItem>\r\n          <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <AccountIcon className={classes.profileMenuIcon} /> Messages\r\n          </MenuItem> */}\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              color=\"primary\"\r\n              onClick={() => signOut(userDispatch, props.history)}\r\n            >\r\n              Sign Out\r\n            </Typography>\r\n          </div>\r\n        </Menu>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n","C:\\polls\\ui\\src\\pages\\notifications\\Notifications.js",[],"C:\\polls\\ui\\src\\pages\\dashboard\\RepresentiveContact.js",["907","908","909","910","911","912","913","914"],"import React, { useState } from \"react\";\r\nimport {\r\n    Button, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, InputLabel, MenuItem,\r\n    TableRow, Table,\r\n    TableHead,\r\n    TableBody,\r\n    TableCell\r\n} from \"@material-ui/core\";\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport DistrictService from \"./Locality/Service/districtService\";\r\nimport ConstituencyService from \"./Locality/Service/constituencyService\";\r\nimport VillageService from \"./Locality/Service/villageService\";\r\nimport BoothService from \"./Locality/Service/boothService\";\r\nimport RepresentiveContactService from \"./Locality/Service/representiveContact\";\r\nimport CasteService from \"./Locality/Service/casteService\";\r\nimport PartyService from \"./Locality/Service/partyService\";\r\nimport * as Yup from 'yup';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport { Grid, Select, TextField } from \"@material-ui/core\";\r\nimport { useFormik } from 'formik';\r\nimport { useEffect } from 'react';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: \"#30875b\",\r\n        color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 200,\r\n    },\r\n}));\r\nexport default function RepresentiveContact() {\r\n    const tableHeaders = ['District', 'Constituency', 'Village','Name','Mobile','Designation','Caste','Party','Ward','Edit', 'Delete'];\r\n    const representiveHeaders = [\r\n        {label: 'President',      value: 'President'},\r\n        {label: 'Vice President',      value: 'Vice President'},\r\n        {label: 'MPTC-1', value: 'MPTC-1'   },\r\n        {label: 'MPTC-2', value: 'MPTC-2'   },\r\n        {label: 'Ward Member', value: 'Ward Member'   },\r\n    ];\r\n    const classes = useStyles();\r\n    const [districtList, setDistrictList] = useState([]);\r\n    const [casteList, setCasteList] = useState([]);\r\n    const [partyList, setPartyList] = useState([]);\r\n    const [constituencyList, setConstituencyList] = useState([]);\r\n    const [villageList, setVillageList] = useState([]);\r\n    const [representiveContactList, setRepresentiveContactList] = useState([]);\r\n    const [age, setAge] = React.useState('');\r\n    var [error, setError] = useState(null);\r\n    const [tabelIdList, setTabelIdList] = useState([]);\r\n    const [open, setOpen] = React.useState(false);\r\n    const [pg, setpg] = React.useState(0);\r\n    const [rpg, setrpg] = React.useState(5);\r\n    const [representiveContact, setRepresentiveContact] = useState({\r\n        districtId: '',\r\n        constituencyId: '',\r\n        villageId:'',\r\n        name :'',\r\n        gender:'',\r\n        age :'',\r\n        mobile:'',\r\n        casteId:'',\r\n        partyId:'',\r\n        significance:'',\r\n    });\r\n    const validationSchema = Yup.object().shape({\r\n        districtId: Yup.string().required('district is required'),\r\n        constituencyId: Yup.string().required('constituency is required'),\r\n        villageId: Yup.string().required('village is required'),\r\n        name:Yup.string().required('name is required'),\r\n        gender: Yup.string().required('gender is required'),\r\n        age: Yup.string().required('designation is required'),\r\n        mobile: Yup.string().required()\r\n        .matches(/^[0-9]+$/, \"Must be only digits\")\r\n        .min(10, 'Must be exactly 10 digits')\r\n        .max(10, 'Must be exactly 10 digits'),\r\n        casteId:Yup.string().required('caste is required'),\r\n        partyId:Yup.string().required('party is required'),\r\n        significance:Yup.string().required('ward no. is required'),\r\n    });\r\n    const handleChangePage = (event, newpage) => {\r\n        setpg(newpage);\r\n    }\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setrpg(parseInt(event.target.value, 10));\r\n        setpg(0);\r\n    }\r\n    useEffect(() => {\r\n        getDistrictList();\r\n        //getConstituencyList();\r\n         getRepresentiveContactList();\r\n         getCasteList();\r\n         getPartyList();\r\n        return () => {\r\n            setDistrictList([]);\r\n            setConstituencyList([]);\r\n            setVillageList([]);\r\n        }\r\n    }, []);\r\n    const getDistrictList = () => {\r\n        DistrictService.getAllDistrict().then((res) => {\r\n            setDistrictList(res);\r\n        }).catch((err) => {\r\n            // setError(err.message);\r\n        });\r\n    }\r\n    const getConstituencyList = (destId) => {\r\n      const disListI = { districtId: destId };\r\n        ConstituencyService.getConstituencyByDistrictId(disListI).then((res) => {\r\n           \r\n            setConstituencyList(res);\r\n           \r\n        }).catch((err) => {\r\n            setError(err.message);\r\n        });\r\n    }\r\n    const getVillageList = (constituencyId) => {\r\n        const villListId = { constituencyId: constituencyId };\r\n        VillageService.getVillageByConstituencyId(villListId).then((res) => {\r\n            setVillageList(res);\r\n           \r\n        }).catch((err) => {\r\n            setError(err.message);\r\n        });\r\n    }\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const onclick = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const handleChange = (event) => {\r\n        setAge(event.target.value);\r\n    };\r\n    const onSubmit = data => {\r\n        console.log(JSON.stringify(data, null, 2));\r\n    };\r\n    const getRepresentiveContactList = () => {\r\n        RepresentiveContactService.getAllRepresentiveContact().then((res) => {\r\n            setRepresentiveContactList(res);\r\n        }).catch((err) => {\r\n            setError(err.message);\r\n        });\r\n    }\r\n    const getCasteList = () => {\r\n        CasteService.getAllCaste().then((res) => {\r\n            setCasteList(res);\r\n        }).catch((err) => {\r\n            setError(err.message);\r\n        });\r\n    }\r\n    const getPartyList = () => {\r\n        PartyService.getAllParty().then((res) => {\r\n            setPartyList(res);\r\n        }).catch((err) => {\r\n            setError(err.message);\r\n        });\r\n    }\r\n    const editRepresentiveContact = (representiveContact) => {\r\n        const obj = JSON.parse(JSON.stringify(representiveContact));\r\n        obj.constituencyId = representiveContact.constituencyId ? representiveContact.constituencyId._id : '';\r\n        obj.districtId = representiveContact.districtId ? representiveContact.districtId._id : '';\r\n        obj.villageId = representiveContact.villageId ? representiveContact.villageId._id : '';\r\n        obj.casteId = representiveContact.casteId ? representiveContact.casteId._id : '';\r\n        obj.partyId = representiveContact.partyId ? representiveContact.partyId._id : '';\r\n        getConstituencyList(obj.districtId);\r\n        getVillageList(obj.constituencyId);\r\n        setRepresentiveContact(obj);\r\n        handleOpen();\r\n    }\r\n    const deleteRepresentiveContact = (representivecontactdelete) => {\r\n        if (representivecontactdelete) {\r\n            RepresentiveContactService.deleteRepresentiveContact(representivecontactdelete).then((res) => {\r\n                getRepresentiveContactList();\r\n            }).catch((err) => {\r\n            });\r\n        }\r\n    };\r\n    const formik = useFormik({\r\n        initialValues: representiveContact,\r\n        enableReinitialize: true,\r\n        validationSchema: validationSchema,\r\n        onSubmit: (values, { resetForm }) => {\r\n            if (representiveContact._id) {\r\n                RepresentiveContactService.upadeRepresentiveContact(values).then((res) => {\r\n                    handleClose();\r\n                    getRepresentiveContactList();\r\n                    resetForm()\r\n                    alert(\" Representive Contact Updated Successfully.\");\r\n                }).catch((err) => {\r\n                });\r\n            }\r\n            else {\r\n                RepresentiveContactService.creteRepresentiveContact(values).then((res) => {\r\n                    getRepresentiveContactList();\r\n                    resetForm();\r\n                    handleClose();\r\n                    alert(\" Representive Contact Added Successfully.\");\r\n                    // props.history.push('/app/vendor');\r\n                })\r\n                    .catch((err) => {\r\n\r\n                        alert(err.response.data.message)\r\n                    })\r\n            }\r\n\r\n        },\r\n    });\r\n    return (\r\n        <>\r\n            <PageTitle title=\"Representive Contact\" button={<Button\r\n                variant=\"contained\" onClick={handleOpen}\r\n                size=\"medium\"\r\n                color=\"secondary\" style={{ backgroundColor: '#30875b' }}> Add Representive Contact\r\n            </Button>} />\r\n            <Grid container spacing={4}>\r\n                <Grid item xs={12}>\r\n                    <Widget title=\"\" upperTitle noBodyPadding bodyClass={classes.tableOverflow}>\r\n                        <Table className=\"mb-0\">\r\n                            <TableHead >\r\n                                <TableRow>\r\n                                    {tableHeaders.map(key => (\r\n                                        <StyledTableCell key={key}>{key}</StyledTableCell>\r\n                                    ))}\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {representiveContactList.slice(pg * rpg, pg * rpg + rpg).map((representiveContact) => (\r\n                                    <TableRow key={representiveContact._id}>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{representiveContact.districtId?.district}</TableCell>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{representiveContact.constituencyId?.constituency}</TableCell>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{representiveContact.villageId?.village}</TableCell>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{representiveContact.name}</TableCell>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{representiveContact.mobile}</TableCell>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{representiveContact.age}</TableCell>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{representiveContact.casteId?.caste}</TableCell>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{representiveContact.partyId?.party}</TableCell>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{representiveContact.significance}</TableCell>\r\n                                        <TableCell>\r\n                                            <EditIcon style={{ cursor: 'pointer' }} onClick={() => editRepresentiveContact(representiveContact)} >\r\n                                            </EditIcon >\r\n                                        </TableCell>\r\n                                        <TableCell>\r\n                                            <DeleteIcon style={{ cursor: 'pointer' }} onClick={() => deleteRepresentiveContact(representiveContact)} />\r\n                                        </TableCell>\r\n\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                        <TablePagination\r\n                            component=\"div\"\r\n                            rowsPerPageOptions={[5,  100,1000 ]}\r\n                            count={representiveContactList.length}\r\n                            page={pg}\r\n                            onPageChange={handleChangePage}\r\n                            rowsPerPage={rpg}\r\n                            onRowsPerPageChange={handleChangeRowsPerPage}\r\n                        />\r\n                    </Widget>\r\n                </Grid>\r\n            </Grid>\r\n            <Dialog open={open} onClose={handleClose}>\r\n                <DialogTitle>Add Representive Contact</DialogTitle>\r\n                <form onSubmit={formik.handleSubmit} >\r\n                    <DialogContent style={{ width: 308 }}>\r\n                        <FormControl variant=\"standard\" fullWidth=\"true\" >\r\n                            <InputLabel id=\"demo-simple-select-standard-label\">District</InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-standard-label\"\r\n                                id=\"demo-simple-select-standard\"\r\n                                InputProps={{ style: { width: 258 } }}\r\n                                autoFocus\r\n                                margin=\"dense\"\r\n                                name=\"districtId\"\r\n                                label=\"District\"\r\n                                type=\"text\"\r\n                                variant=\"standard\"\r\n                                value={formik.values.districtId}\r\n                                // getConstituencyList();\r\n                                onChange={e => {\r\n                                    formik.handleChange(e);\r\n                                    getConstituencyList(e.target.value)\r\n                                }}\r\n                                error={formik.touched.districtId && Boolean(formik.errors.districtId)}\r\n                                helperText={formik.touched.districtId && formik.errors.districtId}\r\n                            >\r\n                                <MenuItem value=\"\">\r\n                                    <em>None</em>\r\n                                </MenuItem>\r\n                                {districtList.map(({ _id, district }) => (\r\n                                    <MenuItem key={_id} value={_id}>{district}</MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                        <FormControl variant=\"standard\" fullWidth=\"true\" >\r\n                            <InputLabel id=\"demo-simple-select-standard-label\">Constituency </InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-standard-label\"\r\n                                id=\"demo-simple-select-standard\"\r\n                                InputProps={{ style: { width: 258 } }}\r\n                                \r\n                                margin=\"dense\"\r\n                                name=\"constituencyId\"\r\n                                label=\"Constituency\"\r\n                                type=\"text\"\r\n                                variant=\"standard\"\r\n                                value={formik.values.constituencyId}\r\n                                onChange={e => {\r\n                                    formik.handleChange(e);\r\n                                    getVillageList(e.target.value)\r\n                                }}\r\n                                error={formik.touched.constituencyId && Boolean(formik.errors.constituencyId)}\r\n                                helperText={formik.touched.constituencyId && formik.errors.constituencyId}\r\n                            >\r\n                                <MenuItem value=\"\">\r\n                                    <em>None</em>\r\n                                </MenuItem>\r\n                                {constituencyList.map(({ _id, constituency }) => (\r\n                                    <MenuItem key={_id} value={_id}>{constituency}</MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                        <FormControl variant=\"standard\" fullWidth=\"true\" >\r\n                            <InputLabel id=\"demo-simple-select-standard-label\">Village </InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-standard-label\"\r\n                                id=\"demo-simple-select-standard\"\r\n                                InputProps={{ style: { width: 258 } }}\r\n                                \r\n                                margin=\"dense\"\r\n                                name=\"villageId\"\r\n                                label=\"Village\"\r\n                                type=\"text\"\r\n                                variant=\"standard\"\r\n                                value={formik.values.villageId}\r\n                                onChange={formik.handleChange}\r\n                                error={formik.touched.villageId && Boolean(formik.errors.villageId)}\r\n                                helperText={formik.touched.villageId && formik.errors.constituencyId}\r\n                            >\r\n                                <MenuItem value=\"\">\r\n                                    <em>None</em>\r\n                                </MenuItem>\r\n                                {villageList.map(({ _id, village }) => (\r\n                                    <MenuItem key={_id} value={_id}>{village}</MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                              <TextField\r\n                            InputProps={{ style: { width: 258 } }}\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"name\"\r\n                            name=\"name\"\r\n                            label=\"Name\"\r\n                            type=\"text\"\r\n                            variant=\"standard\"\r\n                            value={formik.values.name}\r\n                            onChange={formik.handleChange}\r\n                            error={formik.touched.name && Boolean(formik.errors.name)}\r\n                            helperText={formik.touched.name && formik.errors.name}\r\n                        /> \r\n                         <FormControl component=\"fieldset\">\r\n                    <FormLabel component=\"legend\" >Gender:</FormLabel>\r\n                    <RadioGroup aria-label=\"gender\" name=\"gender\"  margin=\"dense\"\r\n                    id=\"gender  \"  type=\"radio \"\r\n                    variant=\"standard\"\r\n                    value={formik.values.gender}\r\n                    onChange={formik.handleChange}\r\n                    error={formik.touched.gender && Boolean(formik.errors.gender)}\r\n                    helperText={formik.touched.gender && formik.errors.gender}\r\n                    >\r\n                      <FormControlLabel value=\"Male\" control={<Radio />} label=\"Male\" />\r\n                      <FormControlLabel value=\"Female\" control={<Radio />} label=\"Female\" />\r\n\r\n                    </RadioGroup>\r\n                  </FormControl>\r\n                  <FormControl className={classes.formControl}\r\n                      fullWidth=\"true\" >\r\n                      <InputLabel id=\"demo-simple-select-label\">Designation</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"age\"\r\n                        name=\"age\"\r\n                        label=\"Designation\"\r\n                        onChange={formik.handleChange}\r\n                        value={formik.values.age}\r\n                        error={formik.touched.age && Boolean(formik.errors.age)}\r\n                        helperText={formik.touched.age && formik.errors.age}\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n\r\n                        {representiveHeaders?.map(representiveHeaders => {\r\n              return (\r\n                <MenuItem key={representiveHeaders.value} value={representiveHeaders.value}>\r\n                  {representiveHeaders.label ?? representiveHeaders.value}\r\n                </MenuItem>\r\n              );\r\n          })}\r\n                      </Select>\r\n                    </FormControl>\r\n                    <TextField\r\n                    InputProps={{ style: { width: 258 } }}\r\n                    \r\n                    margin=\"dense\"\r\n                    id=\"mobile\"\r\n                    name=\"mobile\"\r\n                    label=\"Mobile Number\"\r\n                    type=\"text\"\r\n                    variant=\"standard\"\r\n                    value={formik.values.mobile}\r\n                    onChange={formik.handleChange}\r\n                    error={formik.touched.mobile && Boolean(formik.errors.mobile)}\r\n                    helperText={formik.touched.mobile && formik.errors.mobile}\r\n                  />\r\n                  <FormControl variant=\"standard\" fullWidth=\"true\" >\r\n                            <InputLabel id=\"demo-simple-select-standard-label\">Caste</InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-standard-label\"\r\n                                id=\"demo-simple-select-standard\"\r\n                                InputProps={{ style: { width: 258 } }}\r\n                                autoFocus\r\n                                margin=\"dense\"\r\n                                name=\"casteId\"\r\n                                label=\"Caste\"\r\n                                type=\"text\"\r\n                                variant=\"standard\"\r\n                                value={formik.values.casteId}\r\n                                // getConstituencyList();\r\n                                onChange={formik.handleChange}\r\n                                error={formik.touched.casteId && Boolean(formik.errors.casteId)}\r\n                                helperText={formik.touched.casteId && formik.errors.casteId}\r\n                            >\r\n                                <MenuItem value=\"\">\r\n                                    <em>None</em>\r\n                                </MenuItem>\r\n                                {casteList.map(({ _id, caste }) => (\r\n                                    <MenuItem key={_id} value={_id}>{caste}</MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                        <FormControl variant=\"standard\" fullWidth=\"true\" >\r\n                            <InputLabel id=\"demo-simple-select-standard-label\">Party</InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-standard-label\"\r\n                                id=\"demo-simple-select-standard\"\r\n                                InputProps={{ style: { width: 258 } }}\r\n                                autoFocus\r\n                                margin=\"dense\"\r\n                                name=\"partyId\"\r\n                                label=\"Party\"\r\n                                type=\"text\"\r\n                                variant=\"standard\"\r\n                                value={formik.values.partyId}\r\n                                // getConstituencyList();\r\n                                onChange={formik.handleChange}\r\n                                error={formik.touched.partyId && Boolean(formik.errors.partyId)}\r\n                                helperText={formik.touched.partyId && formik.errors.partyId}\r\n                            >\r\n                                <MenuItem value=\"\">\r\n                                    <em>None</em>\r\n                                </MenuItem>\r\n                                {partyList.map(({ _id, party }) => (\r\n                                    <MenuItem key={_id} value={_id}>{party}</MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                        <TextField\r\n                    InputProps={{ style: { width: 258 } }}\r\n                    margin=\"dense\"\r\n                    id=\"significance\"\r\n                    name=\"significance\"\r\n                    label=\"Ward Number\"\r\n                    type=\"text\"\r\n                    variant=\"standard\"\r\n                    value={formik.values.significance}\r\n                    onChange={formik.handleChange}\r\n                    error={formik.touched.significance && Boolean(formik.errors.significance)}\r\n                    helperText={formik.touched.significance && formik.errors.significance}\r\n                  />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={handleClose}>Cancel</Button>\r\n                        <Button type=\"submit\">Add</Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n","C:\\polls\\ui\\src\\pages\\dashboard\\VoterData.js",["915","916","917","918"],"C:\\polls\\ui\\src\\pages\\maps\\styles.js",[],"C:\\polls\\ui\\src\\components\\Sidebar\\components\\Dot.js",[],"C:\\polls\\ui\\src\\components\\Widget\\Widget.js",["919","920","921","922","923"],"import React, { useState } from \"react\";\r\nimport {\r\n  Paper,\r\n  IconButton,\r\n  Menu,\r\n  MenuItem,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { MoreVert as MoreIcon } from \"@material-ui/icons\";\r\nimport classnames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\nexport default function Widget({\r\n  children,\r\n  title,\r\n  noBodyPadding,\r\n  bodyClass,\r\n  disableWidgetMenu,\r\n  header,\r\n  noHeaderPadding,\r\n  headerClass,\r\n  style,\r\n  noWidgetShadow,\r\n  ...props\r\n}) {\r\n  var classes = useStyles();\r\n\r\n  // local\r\n  var [moreButtonRef, setMoreButtonRef] = useState(null);\r\n  var [isMoreMenuOpen, setMoreMenuOpen] = useState(false);\r\n\r\n  return (\r\n    <div className={classes.widgetWrapper} style={style && {...style}}>\r\n      <Paper className={classes.paper} classes={{ root: classnames(classes.widgetRoot, {\r\n        [classes.noWidgetShadow]: noWidgetShadow\r\n        }) }}>\r\n        <div className={classnames(classes.widgetHeader, {\r\n          [classes.noPadding]: noHeaderPadding,\r\n          [headerClass]: headerClass\r\n        })}>\r\n          {header ? (\r\n            header\r\n          ) : (\r\n            <React.Fragment>\r\n              <Typography variant=\"h5\" color=\"textSecondary\" noWrap>\r\n                {title}\r\n              </Typography>\r\n              {!disableWidgetMenu && (\r\n                <IconButton\r\n                  color=\"primary\"\r\n                  classes={{ root: classes.moreButton }}\r\n                  aria-owns=\"widget-menu\"\r\n                  aria-haspopup=\"true\"\r\n                  onClick={() => setMoreMenuOpen(true)}\r\n                  buttonRef={setMoreButtonRef}\r\n                >\r\n                 \r\n                </IconButton>\r\n              )}\r\n            </React.Fragment>\r\n          )}\r\n        </div>\r\n        <div\r\n          className={classnames(classes.widgetBody, {\r\n            [classes.noPadding]: noBodyPadding,\r\n            [bodyClass]: bodyClass,\r\n          })}\r\n        >\r\n          {children}\r\n        </div>\r\n      </Paper>\r\n      \r\n      \r\n      \r\n    </div>\r\n  );\r\n}\r\n","C:\\polls\\ui\\src\\pages\\dashboard\\mock.js",[],"C:\\polls\\ui\\src\\pages\\dashboard\\components\\BigStat\\BigStat.js",[],"C:\\polls\\ui\\src\\pages\\dashboard\\Locality\\Service\\villageService.js",[],"C:\\polls\\ui\\src\\pages\\dashboard\\Locality\\Service\\partyService.js",[],"C:\\polls\\ui\\src\\pages\\dashboard\\Locality\\Service\\voterDataService.js",[],"C:\\polls\\ui\\src\\pages\\dashboard\\Locality\\Service\\casteService.js",[],"C:\\polls\\ui\\src\\pages\\dashboard\\Locality\\Service\\boothService.js",[],"C:\\polls\\ui\\src\\components\\Notification\\Notification.js",[],"C:\\polls\\ui\\src\\pages\\dashboard\\Locality\\Service\\constituencyService.js",[],"C:\\polls\\ui\\src\\pages\\dashboard\\Locality\\Service\\districtService.js",["924"],"import requests from './httpService';\r\nconst DistrictService = {\r\n\r\n\r\n  getAllDistrict() {\r\n    return requests.get(`/district/list`);\r\n  },\r\n\r\n  creteDistrict(body){\r\n    return requests.post('/district/add',body); \r\n  },\r\n\r\n  deleteDistrict(body){\r\n    return requests.delete(`/district/${body._id}`); \r\n    \r\n  },\r\n  findDistrictList(body){\r\n    return requests.post(`/district/find`,body); \r\n  },\r\n\r\n  upadeDistrict(body) {\r\n    return requests.put(`/district/${body._id}`,body); \r\n  },\r\n\r\nuserPermitions(){\r\n  const userDetails = JSON.parse(localStorage.getItem(\"userDetail\"));\r\nswitch(userDetails.role){\r\ncase 'BOOTH':\r\nreturn {studentDetailsEdit:true, studentDetailsDelete:true,\r\n  //  studentActivityEdit:true, studentActivityDelete:true\r\n  }\r\ncase 'TEACHER':\r\nreturn {studentDetailsEdit:false, studentDetailsDelete:false,\r\n  studentActivityEdit:false, studentActivityDelete:false}\r\ncase 'BOOth':\r\nreturn {ageEdit:false}\r\n}\r\n}\r\n};\r\n\r\n\r\n\r\n\r\nexport default DistrictService;\r\n","C:\\polls\\ui\\src\\Excelexport.js",["925","926","927","928"],"C:\\polls\\ui\\src\\pages\\dashboard\\Locality\\Service\\representiveContact.js",["929"],"import requests from './httpService';\r\nconst RepresentiveContactService = {\r\n  getAllRepresentiveContact() {\r\n    return requests.get(`/representivecontact/list`);\r\n  },\r\n  getConstituencyByDistrictId(body){\r\n    return requests.post('/representivecontact/getConstituencyByDistrictId',body); \r\n  },\r\n  getVillageByConstituencyId(body){\r\n    return requests.post('/representivecontact/getVillageByConstituencyId',body); \r\n  },\r\n  getBoothByVillageId(body){\r\n    return requests.post('/representivecontact/getBoothByVillageId',body); \r\n  },\r\n  getCountByVillageId(body){\r\n    return requests.post('/representivecontact/getCountByVillageId',body); \r\n  },\r\n  creteRepresentiveContact(body){\r\n    return requests.post('/representivecontact/add',body); \r\n  },\r\n  deleteRepresentiveContact(body){\r\n    return requests.delete(`/representivecontact/${body._id}`); \r\n  },\r\n   findRepresentiveContactList(body){\r\n    return requests.post(`/representivecontact/find`,body); \r\n  },\r\n  findRepresentiveContactList(body){\r\n    return requests.post(`/representivecontact/find`,body); \r\n  },\r\n  upadeRepresentiveContact(body) {\r\n    return requests.put(`/representivecontact/${body._id}`,body); \r\n  },\r\n};\r\nexport default RepresentiveContactService;\r\n","C:\\polls\\ui\\src\\pages\\notifications\\styles.js",[],"C:\\polls\\ui\\src\\pages\\dashboard\\Locality\\Service\\contactService.js",[],"C:\\polls\\ui\\src\\components\\Header\\styles.js",[],"C:\\polls\\ui\\src\\components\\Widget\\styles.js",[],"C:\\polls\\ui\\src\\pages\\dashboard\\Locality\\Service\\voterService.js",[],"C:\\polls\\ui\\src\\components\\Sidebar\\styles.js",[],"C:\\polls\\ui\\src\\pages\\dashboard\\components\\BigStat\\styles.js",[],"C:\\polls\\ui\\src\\pages\\charts\\components\\ApexHeatmap.js",[],"C:\\polls\\ui\\src\\pages\\charts\\components\\ApexLineChart.js",[],"C:\\polls\\ui\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js",[],"C:\\polls\\ui\\src\\pages\\dashboard\\Locality\\Service\\httpService.js",[],"C:\\polls\\ui\\src\\pages\\typography\\styles.js",[],"C:\\polls\\ui\\src\\pages\\dashboard\\styles.js",[],"C:\\polls\\ui\\src\\components\\Notification\\styles.js",[],"C:\\polls\\ui\\src\\pages\\dashboard\\Locality\\Service\\profileRegistration.js",[],"C:\\polls\\ui\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js",[],"C:\\polls\\ui\\src\\pages\\icons\\Icons.js",[],"C:\\polls\\ui\\src\\pages\\icons\\styles.js",[],"C:\\polls\\ui\\src\\pages\\dashboard\\Track.js",["930","931","932","933","934","935","936","937","938","939"],"import React, { useState } from \"react\";\r\nimport {\r\n    Button, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, InputLabel, MenuItem,\r\n    TableRow, Table,\r\n    TableHead,\r\n    TableBody,\r\n    TableCell\r\n} from \"@material-ui/core\";\r\nimport DistrictService from \"./Locality/Service/districtService\";\r\nimport ConstituencyService from \"./Locality/Service/constituencyService\";\r\nimport VillageService from \"./Locality/Service/villageService\";\r\nimport BoothService from \"./Locality/Service/boothService\";\r\nimport TrackService from \"./Locality/Service/trackService\";\r\nimport VoterService from \"./Locality/Service/voterService\";\r\nimport * as Yup from 'yup';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport { Grid, Select, TextField } from \"@material-ui/core\";\r\nimport { useFormik } from 'formik';\r\nimport { useEffect } from 'react';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: \"#30875b\",\r\n        color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 200,\r\n    },\r\n}));\r\nexport default function Track() {\r\n    const tableHeaders = ['Village', 'Booth', 'Voters Polled','ourVotersPolled','percentage', 'Edit', 'Delete'];\r\n    const classes = useStyles();\r\n    const [districtList, setDistrictList] = useState([]);\r\n    const [constituencyList, setConstituencyList] = useState([]);\r\n    const [villageList, setVillageList] = useState([]);\r\n    const [trackList, setTrackList] = useState([]);\r\n    const [boothList, setBoothList] = useState([]);\r\n    const [voter, setVoter] = useState([]);\r\n    const [age, setAge] = React.useState('');\r\n    var [error, setError] = useState(null);\r\n    const [tabelIdList, setTabelIdList] = useState([]);\r\n    const [open, setOpen] = React.useState(false);\r\n    const [pg, setpg] = React.useState(0);\r\n    const [rpg, setrpg] = React.useState(5);\r\n    const [track, setTrack] = useState({\r\n        districtId: '',\r\n        constituencyId: '',\r\n        villageId: '',\r\n        countId: '',\r\n        votersPolled: '',\r\n        ourVotersPolled: '',\r\n        percentage: '',\r\n    });\r\n\r\n    const validationSchema = Yup.object().shape({\r\n        districtId: Yup.string().required('district is required'),\r\n        constituencyId: Yup.string().required('constituency is required'),\r\n        villageId: Yup.string().required('village is required'),\r\n        countId: Yup.string().required('count is required'),\r\n        votersPolled: Yup.string().required('voters polled is required'),\r\n        ourVotersPolled: Yup.string().required(' required'),\r\n        votersPolled: Yup.string().required(' required'),\r\n    });\r\n    const handleChangePage = (event, newpage) => {\r\n        setpg(newpage);\r\n    }\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setrpg(parseInt(event.target.value, 10));\r\n        setpg(0);\r\n    }\r\n    useEffect(() => {\r\n        getDistrictList();\r\n        //getConstituencyList();\r\n        getTrackList();\r\n        return () => {\r\n            setDistrictList([]);\r\n            setConstituencyList([]);\r\n            setVillageList([]);\r\n            setTrackList([]);\r\n        }\r\n    }, []);\r\n    const getDistrictList = () => {\r\n        DistrictService.getAllDistrict().then((res) => {\r\n            setDistrictList(res);\r\n        }).catch((err) => {\r\n            // setError(err.message);\r\n        });\r\n    }\r\n    const getConstituencyList = (destId) => {\r\n        const disListI = { districtId: destId };\r\n        ConstituencyService.getConstituencyByDistrictId(disListI).then((res) => {\r\n\r\n            setConstituencyList(res);\r\n\r\n        }).catch((err) => {\r\n            setError(err.message);\r\n        });\r\n    }\r\n    const getVillageList = (constituencyId) => {\r\n        const villListId = { constituencyId: constituencyId };\r\n        VillageService.getVillageByConstituencyId(villListId).then((res) => {\r\n            setVillageList(res);\r\n        }).catch((err) => {\r\n            setError(err.message);\r\n        });\r\n    }\r\n    const getBoothList = (villageId) => {\r\n        const boothListId = { villageId: villageId };\r\n        BoothService.getBoothByVillageId(boothListId).then((res) => {\r\n            setBoothList(res);\r\n        }).catch((err) => {\r\n            setError(err.message);\r\n        });\r\n    }\r\n    const getVoter = (countId) => {\r\n        const votesListId = { countId: countId };\r\n        VoterService.getVotersByBoothId(votesListId).then((res) => {\r\n            setVoter(res);\r\n            if (res.length > 0) {\r\n                console.log(res[0].votes)\r\n            }\r\n        }).catch((err) => {\r\n            setError(err.message);\r\n        });\r\n    }\r\n    const getTrackList = () => {\r\n        TrackService.getAllTrack().then((res) => {\r\n            setTrackList(res);\r\n        }).catch((err) => {\r\n            setError(err.message);\r\n        });\r\n    }\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const onclick = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const handleChange = (event) => {\r\n        setAge(event.target.value);\r\n    };\r\n    const onSubmit = data => {\r\n        console.log(JSON.stringify(data, null, 2));\r\n        const createObjectConstituency = {\r\n            districtId: data.district,\r\n            constituency: data.constituency,\r\n        }\r\n    };\r\n\r\n\r\n    const editTrack = (track) => {\r\n        const obj = JSON.parse(JSON.stringify(track));\r\n        obj.constituencyId = track.constituencyId ? track.constituencyId._id : '';\r\n        obj.districtId = track.districtId ? track.districtId._id : '';\r\n        obj.villageId = track.villageId ? track.villageId._id : '';\r\n        obj.countId = track.countId ? track.countId._id : '';\r\n        getConstituencyList(obj.districtId);\r\n        getVillageList(obj.constituencyId);\r\n        getBoothList(obj.villageId);\r\n        setTrack(obj);\r\n        handleOpen();\r\n    }\r\n    const deleteTrack = (trackdelete) => {\r\n        if (trackdelete) {\r\n            TrackService.deleteTrack(trackdelete).then((res) => {\r\n                getTrackList();\r\n            }).catch((err) => {\r\n            });\r\n        }\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues: track,\r\n        enableReinitialize: true,\r\n        validationSchema: validationSchema,\r\n        onSubmit: (values, { resetForm }) => {\r\n            if (track._id) {\r\n                TrackService.upadeTrack(values).then((res) => {\r\n                    handleClose();\r\n                    getTrackList();\r\n                    resetForm()\r\n                    alert(\" Track Updated Successfully.\");\r\n                }).catch((err) => {\r\n                });\r\n            }\r\n            else {\r\n                TrackService.creteTrack(values).then((res) => {\r\n                    getTrackList();\r\n                    resetForm();\r\n                    handleClose();\r\n                    alert(\" Track Added Successfully.\");\r\n                    // props.history.push('/app/vendor');\r\n                })\r\n                    .catch((err) => {\r\n\r\n                        alert(err.response.data.message)\r\n                    })\r\n            }\r\n\r\n        },\r\n    });\r\n    return (\r\n        <>\r\n            <PageTitle title=\"Poll Tracking\" button={<Button\r\n                variant=\"contained\" onClick={handleOpen}\r\n                size=\"medium\"\r\n                color=\"secondary\" style={{ backgroundColor: '#30875b' }}> Add Poll Tracking\r\n            </Button>} />\r\n            <Grid container spacing={4}>\r\n                <Grid item xs={12}>\r\n                    <Widget title=\"\" upperTitle noBodyPadding bodyClass={classes.tableOverflow}>\r\n                        <Table className=\"mb-0\">\r\n                            <TableHead >\r\n                                <TableRow>\r\n                                    {tableHeaders.map(key => (\r\n                                        <StyledTableCell key={key}>{key}</StyledTableCell>\r\n                                    ))}\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {trackList.slice(pg * rpg, pg * rpg + rpg).map((track) => (\r\n                                    <TableRow key={track._id}>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{track.villageId?.village}</TableCell>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{track.countId?.count}</TableCell>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{track.votersPolled}</TableCell>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{track.ourVotersPolled}</TableCell>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{track.percentage}</TableCell>\r\n                                        <TableCell>\r\n                                            <EditIcon style={{ cursor: 'pointer' }} onClick={() => editTrack(track)} >\r\n                                            </EditIcon >\r\n                                        </TableCell>\r\n                                        <TableCell>\r\n                                            <DeleteIcon style={{ cursor: 'pointer' }} onClick={() => deleteTrack(track)} />\r\n                                        </TableCell>\r\n\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                        <TablePagination\r\n                            component=\"div\"\r\n                            rowsPerPageOptions={[5, 100, 500, 1000]}\r\n                            count={trackList.length}\r\n                            page={pg}\r\n                            onPageChange={handleChangePage}\r\n                            rowsPerPage={rpg}\r\n                            onRowsPerPageChange={handleChangeRowsPerPage}\r\n                        />\r\n                    </Widget>\r\n                </Grid>\r\n            </Grid>\r\n            <Dialog open={open} onClose={handleClose}>\r\n                <DialogTitle>Add Poll Tracking</DialogTitle>\r\n                <form onSubmit={formik.handleSubmit} >\r\n                    <DialogContent style={{ width: 308 }}>\r\n                        <FormControl variant=\"standard\" fullWidth=\"true\" >\r\n                            <InputLabel id=\"demo-simple-select-standard-label\">District</InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-standard-label\"\r\n                                id=\"demo-simple-select-standard\"\r\n                                InputProps={{ style: { width: 258 } }}\r\n                                autoFocus\r\n                                margin=\"dense\"\r\n                                name=\"districtId\"\r\n                                label=\"District\"\r\n                                type=\"text\"\r\n                                variant=\"standard\"\r\n                                value={formik.values.districtId}\r\n                                // getConstituencyList();\r\n                                onChange={e => {\r\n                                    formik.handleChange(e);\r\n                                    getConstituencyList(e.target.value)\r\n                                }}\r\n                                error={formik.touched.districtId && Boolean(formik.errors.districtId)}\r\n                                helperText={formik.touched.districtId && formik.errors.districtId}\r\n                            >\r\n                                <MenuItem value=\"\">\r\n                                    <em>None</em>\r\n                                </MenuItem>\r\n                                {districtList.map(({ _id, district }) => (\r\n                                    <MenuItem key={_id} value={_id}>{district}</MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                        <FormControl variant=\"standard\" fullWidth=\"true\" >\r\n                            <InputLabel id=\"demo-simple-select-standard-label\">Constituency </InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-standard-label\"\r\n                                id=\"demo-simple-select-standard\"\r\n                                InputProps={{ style: { width: 258 } }}\r\n                                margin=\"dense\"\r\n                                name=\"constituencyId\"\r\n                                label=\"Constituency\"\r\n                                type=\"text\"\r\n                                variant=\"standard\"\r\n                                value={formik.values.constituencyId}\r\n                                onChange={e => {\r\n                                    formik.handleChange(e);\r\n                                    getVillageList(e.target.value)\r\n                                }}\r\n                                error={formik.touched.constituencyId && Boolean(formik.errors.constituencyId)}\r\n                                helperText={formik.touched.constituencyId && formik.errors.constituencyId}\r\n                            >\r\n                                <MenuItem value=\"\">\r\n                                    <em>None</em>\r\n                                </MenuItem>\r\n                                {constituencyList.map(({ _id, constituency }) => (\r\n                                    <MenuItem key={_id} value={_id}>{constituency}</MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                        <FormControl variant=\"standard\" fullWidth=\"true\" >\r\n                            <InputLabel id=\"demo-simple-select-standard-label\">Village </InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-standard-label\"\r\n                                id=\"demo-simple-select-standard\"\r\n                                InputProps={{ style: { width: 258 } }}\r\n\r\n                                margin=\"dense\"\r\n                                name=\"villageId\"\r\n                                label=\"Village\"\r\n                                type=\"text\"\r\n                                variant=\"standard\"\r\n                                value={formik.values.villageId}\r\n                                onChange={e => {\r\n                                    formik.handleChange(e);\r\n                                    getBoothList(e.target.value)\r\n                                }}\r\n                                error={formik.touched.villageId && Boolean(formik.errors.villageId)}\r\n                                helperText={formik.touched.villageId && formik.errors.constituencyId}\r\n                            >\r\n                                <MenuItem value=\"\">\r\n                                    <em>None</em>\r\n                                </MenuItem>\r\n                                {villageList.map(({ _id, village }) => (\r\n                                    <MenuItem key={_id} value={_id}>{village}</MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                        <FormControl variant=\"standard\" fullWidth=\"true\" >\r\n                            <InputLabel id=\"demo-simple-select-standard-label\">Booth </InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-standard-label\"\r\n                                id=\"demo-simple-select-standard\"\r\n                                InputProps={{ style: { width: 258 } }}\r\n                                margin=\"dense\"\r\n                                name=\"countId\"\r\n                                label=\"Booth\"\r\n                                type=\"text\"\r\n                                variant=\"standard\"\r\n                                value={formik.values.countId}\r\n                                onChange={e => {\r\n                                    formik.handleChange(e);\r\n                                    getVoter(e.target.value)\r\n                                }}\r\n                                error={formik.touched.countId && Boolean(formik.errors.countId)}\r\n                                helperText={formik.touched.countId && formik.errors.countId}\r\n                            >\r\n                                <MenuItem value=\"\">\r\n                                    <em>None</em>\r\n                                </MenuItem>\r\n                                {boothList.map(({ _id, count }) => (\r\n                                    <MenuItem key={_id} value={_id}>{count}</MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                        <TextField\r\n                            InputProps={{ style: { width: 258 } }}\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"votersPolled\"\r\n                            name=\"votersPolled\"\r\n                            label=\"Number Of Voters Polled\"\r\n                            type=\"text\"\r\n                            variant=\"standard\"\r\n                            value={formik.values.votersPolled}\r\n                            onChange={formik.handleChange}\r\n                            error={formik.touched.votersPolled && Boolean(formik.errors.votersPolled)}\r\n                            helperText={formik.touched.votersPolled && formik.errors.votersPolled}\r\n                        />\r\n                        <TextField\r\n                            InputProps={{ style: { width: 258 } }}\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"ourVotersPolled\"\r\n                            name=\"ourVotersPolled\"\r\n                            label=\"Our Voters Polled\"\r\n                            type=\"text\"\r\n                            variant=\"standard\"\r\n                            value={formik.values.ourVotersPolled}\r\n                            onChange={formik.handleChange}\r\n                            error={formik.touched.ourVotersPolled && Boolean(formik.errors.ourVotersPolled)}\r\n                            helperText={formik.touched.ourVotersPolled && formik.errors.ourVotersPolled}\r\n                        />\r\n                        <TextField\r\n                            InputProps={{ style: { width: 258 } }}\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"percentage\"\r\n                            name=\"percentage\"\r\n                            label=\"Percentage\"\r\n                            type=\"text\"\r\n                            variant=\"standard\"\r\n                            value={formik.values.percentage}\r\n                            onChange={formik.handleChange}\r\n                            error={formik.touched.percentage && Boolean(formik.errors.percentage)}\r\n                            helperText={formik.touched.percentage && formik.errors.percentage}\r\n                        />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={handleClose}>Cancel</Button>\r\n                        <Button type=\"submit\">Add</Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n","C:\\polls\\ui\\src\\pages\\dashboard\\Locality\\Service\\trackService.js",[],"C:\\polls\\ui\\src\\themes\\index.js",[],"C:\\polls\\ui\\src\\themes\\default.js",[],"C:\\polls\\ui\\src\\pages\\dashboard\\Dashboard.js",["940","941","942","943","944","945","946","947","948","949","950","951","952","953","954","955","956","957","958","959","960","961","962","963","964","965","966","967"],"import React, { useState } from \"react\";\r\nimport {\r\n  LinearProgress,\r\n  OutlinedInput,\r\n} from \"@material-ui/core\";\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport {\r\n  Grid, Button,  Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, TextField, FormControl, InputLabel, Select, MenuItem,\r\n  TableRow, Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableCell\r\n} from \"@material-ui/core\";\r\nimport CityServices from \"../../services/CityServices\";\r\nimport { useContext, useEffect } from 'react';\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport {\r\n  ResponsiveContainer,\r\n  ComposedChart,\r\n  AreaChart,\r\n  LineChart,\r\n  Line,\r\n  Area,\r\n  PieChart,\r\n  Pie,\r\n  Cell,\r\n  YAxis,\r\n  XAxis,\r\n} from \"recharts\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport mock from \"./mock\";\r\nimport Widget from \"../../components/Widget\";\r\nimport PageTitle from \"../../components/PageTitle\";\r\nimport { Typography } from \"../../components/Wrappers\";\r\nimport Dot from \"../../components/Sidebar/components/Dot\";\r\n\r\nimport BigStat from \"./components/BigStat/BigStat\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: \"#536dfe\",\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\n\r\nconst mainChartData = getMainChartData();\r\n\r\n\r\nexport default function Dashboard(props) {\r\n   const tableHeaders = ['Order ID','Sub Total', 'Discount', 'Status', 'View' ];\r\n  var classes = useStyles();\r\n  var theme = useTheme();\r\n\r\n  // local\r\n  var [mainChartState, setMainChartState] = useState(\"monthly\");\r\n  const [vendorOrdersList, setVendorOrdersList] = useState({totalPendingOrder:{count:'' }, todayOrder:[]});\r\n  const[cartList, setCartList]=useState([]);\r\n  const [open, setOpen] = React.useState(false);\r\n  useEffect(() => {\r\n    getvendorordersList();\r\n    return () => {\r\n      setVendorOrdersList({})\r\n    };\r\n  }, []);\r\n\r\n  const getvendorordersList = () => {\r\n    const userDetails = JSON.parse(localStorage.getItem(\"userDetail\"));\r\n    CityServices.createVendorOrdersById({\"vendorId\":userDetails._id}).then((res) => {\r\nconsole.log(res);\r\n      setVendorOrdersList(res);\r\n\r\n    }).catch((err) => {\r\n      // setError(err.message);\r\n    });\r\n  }\r\n  const handleOpen = (cartList) => {\r\n\r\n    setCartList(cartList.cart);\r\n    setOpen(true);\r\n \r\n  }\r\n  const handleClose = () => setOpen(false);\r\n  return (\r\n    <>\r\n      <PageTitle title=\"Dashboard\"  />\r\n      <Grid container spacing={4}>\r\n        <Grid item lg={4} md={4} sm={6} xs={12}>\r\n          <Widget\r\n            title=\"Total Order\"\r\n            upperTitle\r\n            bodyClass={classes.fullHeightBody}\r\n            className={classes.card}\r\n          >\r\n            <div className={classes.visitsNumberContainer}>\r\n              <Grid container item alignItems={\"center\"}>\r\n                <Grid item xs={6}>\r\n              <Typography size=\"xl\" weight=\"medium\" noWrap>\r\n              {vendorOrdersList.totalOrder}\r\n              </Typography>\r\n                </Grid>\r\n               \r\n              </Grid>\r\n            </div>\r\n          \r\n          </Widget>\r\n        </Grid>\r\n        <Grid item lg={4} md={4} sm={6} xs={12}>\r\n          <Widget\r\n            title=\"Pending Order\"\r\n            upperTitle\r\n            className={classes.card}\r\n            bodyClass={classes.fullHeightBody}\r\n          >\r\n            <div className={classes.visitsNumberContainer}>\r\n              <Grid container item alignItems={\"center\"}>\r\n                <Grid item xs={6}>\r\n              <Typography size=\"xl\" weight=\"medium\" noWrap>\r\n              {vendorOrdersList.totalPendingOrder.count}\r\n              </Typography>\r\n                </Grid>\r\n               \r\n              </Grid>\r\n            </div>\r\n           \r\n          </Widget>\r\n        </Grid>\r\n        <Grid item lg={4} md={4} sm={6} xs={12}>\r\n          <Widget\r\n            title=\"Processing Order\"\r\n            upperTitle\r\n            className={classes.card}\r\n            bodyClass={classes.fullHeightBody}\r\n          >\r\n            <div className={classes.visitsNumberContainer}>\r\n              <Grid container item alignItems={\"center\"}>\r\n                <Grid item xs={6}>\r\n              <Typography size=\"xl\" weight=\"medium\" noWrap>\r\n              {vendorOrdersList.totalProcessingOrder}\r\n              </Typography>\r\n                </Grid>\r\n               \r\n              </Grid>\r\n            </div>\r\n          </Widget>\r\n        </Grid>\r\n        <Grid item lg={4} md={4} sm={6} xs={12}>\r\n          <Widget title=\"Deliverd Order\" upperTitle className={classes.card}>\r\n          <div className={classes.visitsNumberContainer}>\r\n              <Grid container item alignItems={\"center\"}>\r\n                <Grid item xs={6}>\r\n              <Typography size=\"xl\" weight=\"medium\" noWrap>\r\n              {vendorOrdersList.totalDeliveredOrder}\r\n              </Typography>\r\n                </Grid>\r\n               \r\n              </Grid>\r\n            </div>\r\n          </Widget>\r\n        </Grid>\r\n        <Grid item lg={4} md={4} sm={6} xs={12}>\r\n          <Widget\r\n            title=\"Totel Amount\"\r\n            upperTitle\r\n            className={classes.card}\r\n            bodyClass={classes.fullHeightBody}\r\n          >\r\n            <div className={classes.visitsNumberContainer}>\r\n              <Grid container item alignItems={\"center\"}>\r\n                <Grid item xs={6}>\r\n              <Typography size=\"xl\" weight=\"medium\" noWrap>\r\n              {vendorOrdersList.totalAmount}\r\n              </Typography>\r\n                </Grid>\r\n               \r\n              </Grid>\r\n            </div>\r\n          </Widget>\r\n        </Grid>\r\n        <Grid item lg={4} md={4} sm={6} xs={12}>\r\n          <Widget\r\n            title=\"Total Amount Of This Month\"\r\n            upperTitle\r\n            className={classes.card}\r\n            bodyClass={classes.fullHeightBody}\r\n          >\r\n            <div className={classes.visitsNumberContainer}>\r\n              <Grid container item alignItems={\"center\"}>\r\n                <Grid item xs={6}>\r\n              <Typography size=\"xl\" weight=\"medium\" noWrap>\r\n              {vendorOrdersList.totalAmountOfThisMonth}\r\n              </Typography>\r\n                </Grid>\r\n               \r\n              </Grid>\r\n            </div>\r\n          </Widget>\r\n        </Grid>\r\n        <Grid item lg={4} md={4} sm={6} xs={12}>\r\n          <Widget\r\n            title=\"Rejected Orders\"\r\n            upperTitle\r\n            className={classes.card}\r\n            bodyClass={classes.fullHeightBody}\r\n          >\r\n            <div className={classes.visitsNumberContainer}>\r\n              <Grid container item alignItems={\"center\"}>\r\n                <Grid item xs={6}>\r\n              <Typography size=\"xl\" weight=\"medium\" noWrap>\r\n              {vendorOrdersList.rejectedOrder}\r\n              </Typography>\r\n                </Grid>\r\n               \r\n              </Grid>\r\n            </div>\r\n          </Widget>\r\n        </Grid>\r\n        <Grid item lg={4} md={4} sm={6} xs={12}>\r\n          <Widget\r\n            title=\"Complete Orders\"\r\n            upperTitle\r\n            className={classes.card}\r\n            bodyClass={classes.fullHeightBody}\r\n          >\r\n            <div className={classes.visitsNumberContainer}>\r\n              <Grid container item alignItems={\"center\"}>\r\n                <Grid item xs={6}>\r\n              <Typography size=\"xl\" weight=\"medium\" noWrap>\r\n              {vendorOrdersList.completOrder}\r\n              </Typography>\r\n                </Grid>\r\n               \r\n              </Grid>\r\n            </div>\r\n          </Widget>\r\n        </Grid>\r\n        <Grid item lg={4} md={4} sm={6} xs={12}>\r\n          <Widget\r\n            title=\"Accepted Order\"\r\n            upperTitle\r\n            className={classes.card}\r\n            bodyClass={classes.fullHeightBody}\r\n          >\r\n            <div className={classes.visitsNumberContainer}>\r\n              <Grid container item alignItems={\"center\"}>\r\n                <Grid item xs={6}>\r\n              <Typography size=\"xl\" weight=\"medium\" noWrap>\r\n              {vendorOrdersList.acceptedOrder}\r\n              </Typography>\r\n                </Grid>\r\n               \r\n              </Grid>\r\n            </div>\r\n          </Widget>\r\n        </Grid>\r\n        \r\n        <Grid item xs={12}>\r\n       \r\n            \r\n        \r\n        </Grid>\r\n      \r\n     \r\n      </Grid>\r\n\r\n\r\n\r\n      <Grid container spacing={4}>\r\n\r\n\r\n\r\n        <Grid item xs={12}>\r\n          \r\n\r\n\r\n            <Table className=\"mb-0\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  {tableHeaders.map(key => (\r\n                    <StyledTableCell key={key}>{key}</StyledTableCell>\r\n                  ))}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                            {vendorOrdersList.todayOrder.map((todayOrder) => (\r\n                                <TableRow >\r\n                                  <TableCell className=\"pl-3 fw-normal\" >\r\n                                        {todayOrder.orderInvoice}\r\n                                    </TableCell>\r\n                                    <TableCell className=\"pl-3 fw-normal\" >\r\n                                        {todayOrder.subTotal}\r\n                                    </TableCell>\r\n                                    <TableCell className=\"pl-3 fw-normal\" >\r\n                                        {todayOrder.discount}\r\n                                    </TableCell>\r\n                                    \r\n                                    <TableCell className=\"pl-3 fw-normal\" >\r\n                                        {todayOrder.status}\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                            <VisibilityIcon style={{ cursor: 'pointer' }}  onClick={()=>handleOpen(todayOrder)}>\r\n\r\n                                            </VisibilityIcon >\r\n                                        </TableCell>\r\n                                                                    \r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n            </Table>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle  >Orders Detailes</DialogTitle>\r\n        <DialogContent>\r\n        <Table className=\"mb-0\">\r\n        <TableHead>\r\n                <TableRow>\r\n                <StyledTableCell >Order Name</StyledTableCell>\r\n                <StyledTableCell >Quantity</StyledTableCell>\r\n                <StyledTableCell >Original Price</StyledTableCell>\r\n                <StyledTableCell >Final Price</StyledTableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n             \r\n                            {cartList.map((vendorOrderDetails) => (\r\n                                <TableRow >\r\n                                    <TableCell className=\"pl-3 fw-normal\" >\r\n                                        {vendorOrderDetails.title}\r\n                                    </TableCell>\r\n                                    <TableCell className=\"pl-3 fw-normal\" >\r\n                                        {vendorOrderDetails.quantity}\r\n                                    </TableCell>\r\n                                    <TableCell className=\"pl-3 fw-normal\" >\r\n                                        {vendorOrderDetails.originalPrice}\r\n                                    </TableCell>\r\n                                    <TableCell className=\"pl-3 fw-normal\" >\r\n                                        {vendorOrderDetails.price}\r\n                                    </TableCell>\r\n\r\n\r\n                                  \r\n                                   \r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n            </Table>\r\n\r\n\r\n\r\n\r\n        </DialogContent>\r\n\r\n        <DialogActions>\r\n          <Button onClick={handleClose} >Cancel</Button>\r\n          \r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n\r\n// #######################################################################\r\nfunction getRandomData(length, min, max, multiplier = 10, maxDiff = 10) {\r\n  var array = new Array(length).fill();\r\n  let lastValue;\r\n\r\n  return array.map((item, index) => {\r\n    let randomValue = Math.floor(Math.random() * multiplier + 1);\r\n\r\n    while (\r\n      randomValue <= min ||\r\n      randomValue >= max ||\r\n      (lastValue && randomValue - lastValue > maxDiff)\r\n    ) {\r\n      randomValue = Math.floor(Math.random() * multiplier + 1);\r\n    }\r\n\r\n    lastValue = randomValue;\r\n\r\n    return { value: randomValue };\r\n  });\r\n}\r\n\r\nfunction getMainChartData() {\r\n  var resultArray = [];\r\n  var tablet = getRandomData(31, 3500, 6500, 7500, 1000);\r\n  var desktop = getRandomData(31, 1500, 7500, 7500, 1500);\r\n  var mobile = getRandomData(31, 1500, 7500, 7500, 1500);\r\n\r\n  for (let i = 0; i < tablet.length; i++) {\r\n    resultArray.push({\r\n      tablet: tablet[i].value,\r\n      desktop: desktop[i].value,\r\n      mobile: mobile[i].value,\r\n    });\r\n  }\r\n\r\n  return resultArray;\r\n}\r\n",["968","969"],"C:\\polls\\ui\\src\\services\\CityServices.js",[],"C:\\polls\\ui\\src\\pages\\dashboard\\voterreport.js",["970","971","972","973","974"],"import React, { useState } from \"react\";\r\nimport {\r\n    Button,  FormControl, InputLabel, MenuItem,\r\n    TableRow, Table,\r\n    TableHead,\r\n    TableBody,\r\n    Card,\r\n    TableCell,\r\n} from \"@material-ui/core\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport ExportExcel from \"../../Excelexport\";\r\nimport DistrictService from \"./Locality/Service/districtService\";\r\nimport ConstituencyService from \"./Locality/Service/constituencyService\";\r\nimport VillageService from \"./Locality/Service/villageService\";\r\nimport VoterService from \"./Locality/Service/voterService\";\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport { Grid, Select } from \"@material-ui/core\";\r\nimport { useEffect } from 'react';\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: \"#30875b\",\r\n        color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 200,\r\n    },\r\n}));\r\nexport default function VoterReport() {\r\n    const tableHeaders = [ 'Village','Booth','Number Of Voters In Village', 'Percentage', 'Cumulative Percentage'];\r\n    const classes = useStyles();\r\n    var [constituencyId, setConstituencyId] = useState(\"\");\r\n    const [voterList, setVoterList] = useState({\r\n        returnvalues:[],\r\n        totalVotesByConst:0,\r\n        votePercetage:0\r\n    }); \r\n    const [districtList, setDistrictList] = useState([]);\r\n       const [constituencyList, setConstituencyList] = useState([]);\r\n    const [villageList, setVillageList] = useState([]);\r\n    var [constituencyId, setConstituencyId] = useState(\"\");\r\n    var [error, setError] = useState(null);\r\n    const [pg, setpg] = React.useState(0);\r\n    const [rpg, setrpg] = React.useState(50);\r\n    const [result, setResult]= useState([]);\r\n    const handleChangePage = (event, newpage) => {\r\n        setpg(newpage);\r\n    }\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setrpg(parseInt(event.target.value, 10));\r\n        setpg(0);\r\n    }\r\n    useEffect(() => {\r\n        getVillageList();\r\n        // getVoterList();\r\n        getDistrictList();\r\n\r\n        return () => {\r\n            setDistrictList([]);\r\n            setConstituencyList([]);\r\n            // setRepresentiveContactList([]);\r\n            setVillageList([]);\r\n            setVoterList({});\r\n            \r\n        }\r\n    }, []);\r\n  \r\n    const getVillageList = (event,obj) => {\r\n        VillageService.getAllVillage().then((res) => {\r\n            setVillageList(res);\r\n           \r\n        }).catch((err) => {\r\n            setError(err.message);\r\n        });\r\n    }\r\n\r\n\r\n    const getDistrictList = () => {\r\n        DistrictService.getAllDistrict().then((res) => {\r\n            setDistrictList(res);\r\n        }).catch((err) => {\r\n            // setError(err.message);\r\n        });\r\n    }\r\n    const getConstituencyList = (destId) => {\r\n      const disListI = { districtId: destId };\r\n        ConstituencyService.getConstituencyByDistrictId(disListI).then((res) => {\r\n           \r\n            setConstituencyList(res);\r\n           \r\n        }).catch((err) => {\r\n            setError(err.message);\r\n        });\r\n    }\r\n    const onSubmit = data => {\r\n        const keys = {    \"constituencyId\":constituencyId}\r\n        VoterService.getVotersReport(keys).then((res) => {\r\n          \r\n            //  let sortedTotalVotes = res.slice().sort((a, b) => b.totalVotes - a.totalVotes);\r\n            \r\n            const roundOf = res.returnvalues.map(res => {\r\n                return { _id: res._id,votePercetage: res.votePercetage.toFixed(2), cumilativePer: res.cumilativePer.toFixed(2),\r\n                    totalVotes:res.totalVotes, villageName:res.villageName, boothCount:res.boothCount,\r\n                     totalVotesInConst:res.totalVotesInConst,  };\r\n            })\r\n            res.returnvalues =roundOf;\r\n            setVoterList(res);\r\n            excelExport(res.returnvalues);\r\n        }).catch((err) => {\r\n            console.error(err)\r\n        });\r\n\r\n    };\r\n    const  excelExport  =(res)  => {\r\n        const result= res.map((response)=>{\r\n             return {\r\n                \r\n                 \"Village Name\":response.villageName , \r\n                 \"Both Count\": response. boothCount,\r\n                 \"Number Of Voters In Village\": response.totalVotes,\r\n                 \"Number Of Voters In Constituency \": response.totalVotesInConst,\r\n                 \"Percentage\":response.votePercetage,\r\n                 \"Cumulative Percentage\":response.cumilativePer,\r\n             }\r\n            \r\n          })\r\n          setResult(result);\r\n     };\r\n    return (\r\n        <>\r\n                <PageTitle title=\"Voters Statistics\"  />\r\n            <Card sx={{ maxWidth: 345 }}>\r\n                <Box   >\r\n                    <div >\r\n                        <form >\r\n                            <Grid container spacing={2} columns={12} style={{ margin: 10 }}  >\r\n                                <Grid item xs={12} sm={3} md={3} >\r\n                                <FormControl variant=\"standard\" fullWidth=\"true\" >\r\n                            <InputLabel id=\"demo-simple-select-standard-label\">District</InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-standard-label\"\r\n                                id=\"demo-simple-select-standard\"\r\n                                InputProps={{ style: { width: 258 } }}\r\n                                autoFocus\r\n                                margin=\"dense\"\r\n                                name=\"districtId\"\r\n                                label=\"District\"\r\n                                type=\"text\"\r\n                                variant=\"standard\"\r\n                                onChange={e => {getConstituencyList(e.target.value)}}\r\n                                \r\n                            >\r\n                                <MenuItem value=\"\">\r\n                                    <em>None</em>\r\n                                </MenuItem>\r\n                                {districtList.map(({ _id, district }) => (\r\n                                    <MenuItem key={_id} value={_id}>{district}</MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={3} md={3} >\r\n                                <FormControl variant=\"standard\" fullWidth=\"true\" >\r\n                            <InputLabel id=\"demo-simple-select-standard-label\">Constituency </InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-standard-label\"\r\n                                id=\"demo-simple-select-standard\"\r\n                                InputProps={{ style: { width: 258 } }}\r\n                                margin=\"dense\"\r\n                                name=\"constituencyId\"\r\n                                label=\"Constituency\"\r\n                                type=\"text\"\r\n                                variant=\"standard\"\r\n                                value={constituencyId}\r\n                                onChange={e => { setConstituencyId(e.target.value) }}\r\n                                // onChange={e => {\r\n                                    \r\n                                //     getVillageList(e.target.value)\r\n                                // }}\r\n                             \r\n                            >\r\n                                <MenuItem value=\"\">\r\n                                    <em>None</em>\r\n                                </MenuItem>\r\n                                {constituencyList.map(({ _id, constituency }) => (\r\n                                    <MenuItem key={_id} value={_id}>{constituency}</MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                                </Grid>\r\n                                \r\n                               \r\n                                <Grid item xs={12}  sm={3} md={3}>\r\n                                    <Button style={{ backgroundColor: 'rgb(48 135 91)', color: 'white' }}\r\n                                        type=\"button\"\r\n                                        onClick={() => onSubmit()} variant=\"contained\"\r\n                                    >\r\n                                        Search</Button>\r\n                                </Grid>\r\n                                <Grid item xs={3} >\r\n                                <ExportExcel excelData={result} fileName={'Voters Percentage'} />\r\n                                </Grid>\r\n                              \r\n                            </Grid>\r\n                        </form>\r\n                    </div>\r\n                </Box>\r\n            </Card>\r\n            <Grid container spacing={4}>\r\n                <Grid item xs={12}>\r\n                    <Widget title=\"\" upperTitle noBodyPadding bodyClass={classes.tableOverflow}>\r\n                        <Table className=\"mb-0\">\r\n                            <TableHead >\r\n                                <TableRow>\r\n                                    {tableHeaders.map(key => (\r\n                                        <StyledTableCell key={key}>{key}</StyledTableCell>\r\n                                    ))}\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {voterList?.returnvalues.slice(pg * rpg, pg * rpg + rpg).map((voter) => (\r\n                                    <TableRow key={voter._id}>\r\n                                        {/* <TableCell className=\"pl-3 fw-normal\" >{representivecontact.districtId.district}</TableCell> */}\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{voter.villageName}</TableCell>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{voter.boothCount}</TableCell>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{voter.totalVotes}</TableCell>\r\n                                        {/* <TableCell className=\"pl-3 fw-normal\" >{voter.totalVotesInConst}</TableCell> */}\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{voter.votePercetage}</TableCell>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{voter.cumilativePer}</TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                        <div>\r\n                            {\r\n                                voterList.returnvalues.length>0?          <TableRow >\r\n                                <TableCell className=\"pl-3 fw-normal\" style={{color:\"red\" } } >Total</TableCell>\r\n                                <TableCell className=\"pl-3 fw-normal\" ></TableCell>\r\n                                <TableCell className=\"pl-3 fw-normal\" ></TableCell>\r\n                                <TableCell className=\"pl-3 fw-normal\" ></TableCell>\r\n                                <TableCell className=\"pl-3 fw-normal\" ></TableCell>\r\n                                <TableCell className=\"pl-3 fw-normal\" ></TableCell>\r\n                                <TableCell className=\"pl-3 fw-normal\" ></TableCell>\r\n                                <TableCell className=\"pl-3 fw-normal\" ></TableCell>\r\n                                <TableCell className=\"pl-3 fw-normal\" ></TableCell>\r\n                                <TableCell className=\"pl-3 fw-normal\" style={{color:\"red\" } }>{voterList.totalVotesByConst}</TableCell>\r\n                                <TableCell className=\"pl-3 fw-normal\" ></TableCell>\r\n                                <TableCell className=\"pl-3 fw-normal\" ></TableCell>\r\n                                <TableCell className=\"pl-3 fw-normal\" ></TableCell>\r\n                                <TableCell className=\"pl-3 fw-normal\" ></TableCell>\r\n                                <TableCell className=\"pl-3 fw-normal\" ></TableCell>\r\n                                <TableCell className=\"pl-3 fw-normal\" style={{color:\"red\" } } >{Math.round(voterList.votePercetage)}</TableCell>\r\n\r\n                            </TableRow>:''\r\n                            }\r\n              \r\n                        </div>\r\n                        <TablePagination\r\n                            component=\"div\"\r\n                            rowsPerPageOptions={[ 50,  75, 100, 500, 1000]}\r\n                            count={voterList?.returnvalues.length}\r\n                            page={pg}\r\n                            onPageChange={handleChangePage}\r\n                            rowsPerPage={rpg}\r\n                            onRowsPerPageChange={handleChangeRowsPerPage}\r\n                        />\r\n                    </Widget>\r\n                </Grid>\r\n            </Grid>\r\n          \r\n        </>\r\n    );\r\n}\r\n\r\n\r\n","C:\\polls\\ui\\src\\pages\\dashboard\\OurVoter.js",["975","976","977","978","979","980","981","982","983","984","985","986","987","988","989","990","991","992","993","994","995","996","997","998","999","1000","1001","1002","1003","1004","1005","1006","1007","1008","1009","1010","1011","1012","1013","1014"],"C:\\polls\\ui\\src\\pages\\dashboard\\TrackVoters.js",["1015","1016","1017","1018","1019","1020","1021","1022","1023","1024","1025","1026","1027","1028","1029","1030","1031","1032","1033","1034","1035","1036","1037"],"import React, { useState } from \"react\";\r\nimport {\r\n    Button, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, InputLabel, MenuItem,\r\n    TableRow, Table,\r\n    TableHead,\r\n    TableBody,\r\n    TableCell\r\n} from \"@material-ui/core\";\r\nimport VoterDataService from \"./Locality/Service/voterDataService\";\r\nimport TrackVotersService from \"./Locality/Service/trackVotersService\";\r\nimport DistrictService from \"./Locality/Service/districtService\";\r\nimport ConstituencyService from \"./Locality/Service/constituencyService\";\r\nimport VillageService from \"./Locality/Service/villageService\";\r\n import BoothService from \"./Locality/Service/boothService\";\r\nimport TrackService from \"./Locality/Service/trackService\";\r\nimport VoterService from \"./Locality/Service/voterService\";\r\nimport * as Yup from 'yup';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport { Grid, Select, TextField } from \"@material-ui/core\";\r\nimport { useFormik } from 'formik';\r\nimport { useEffect } from 'react';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: \"#30875b\",\r\n        color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 200,\r\n    },\r\n}));\r\nexport default function TrackVoters() {\r\n    const tableHeaders = ['Booth','Voters','Votes Polled','Our Voters Polled', 'Percentage'];\r\n    const classes = useStyles();\r\n    const [districtList, setDistrictList] = useState([]);\r\n    const [constituencyList, setConstituencyList] = useState([]);\r\n    const [villageList, setVillageList] = useState([]);\r\n    const [voterList, setVoterList] = useState([]);\r\n    const [trackVotersList, setTrackVotersList] = useState([]);\r\n    const [boothList, setBoothList] = useState([]);\r\n    const [voterDataList, setVoterDataList] = useState([]);\r\n    const [voters, setvoters] = useState(0);\r\n    const [age, setAge] = React.useState('');\r\n    var [error, setError] = useState(null);\r\n    const [tabelIdList, setTabelIdList] = useState([]);\r\n    const [open, setOpen] = React.useState(false);\r\n    const [pg, setpg] = React.useState(0);\r\n    const [rpg, setrpg] = React.useState(5);\r\n    const [trackVoters, setTrackVoters] = useState({  \r\n        votesPolled:'',\r\n    });\r\n    \r\n    const validationSchema = Yup.object().shape({\r\n        votesPolled:Yup.string().required('votes polled is required'),\r\n    });\r\n    const handleChangePage = (event, newpage) => {\r\n        setpg(newpage);\r\n    }\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setrpg(parseInt(event.target.value, 10));\r\n        setpg(0);\r\n    }\r\n    useEffect(() => {\r\n        getDistrictList();\r\n        getVoters();\r\n        //getConstituencyList();\r\n        getTrackVotersList();\r\n        getVoterList();\r\n        getVoterDataList();\r\n        return () => {\r\n            setDistrictList([]);\r\n            setConstituencyList([]);\r\n            setVillageList([]);\r\n            setTrackVotersList([]);\r\n            setVoterList([]);\r\n            setVoterDataList([]);\r\n        }\r\n    }, []);\r\n    const getDistrictList = () => {\r\n        DistrictService.getAllDistrict().then((res) => {\r\n            setDistrictList(res);\r\n        }).catch((err) => {\r\n            // setError(err.message);\r\n        });\r\n    }\r\n    const getConstituencyList = (destId) => {\r\n      const disListI = { districtId: destId };\r\n        ConstituencyService.getConstituencyByDistrictId(disListI).then((res) => {\r\n           \r\n            setConstituencyList(res);\r\n           \r\n        }).catch((err) => {\r\n            setError(err.message);\r\n        });\r\n    }\r\n    const getVillageList = (constituencyId) => {\r\n        const villListId = { constituencyId: constituencyId };\r\n        VillageService.getVillageByConstituencyId(villListId).then((res) => {\r\n            setVillageList(res);\r\n        }).catch((err) => {\r\n            setError(err.message);\r\n        });\r\n    }\r\n    const getBoothList = (villageId) => {\r\n        const boothListId = { villageId: villageId };\r\n        BoothService.getBoothByVillageId(boothListId).then((res) => {\r\n            setBoothList(res);\r\n        }).catch((err) => {\r\n            setError(err.message);\r\n        });\r\n    }\r\n    const getVoters = () => {\r\n       // const userDetails = JSON.parse(sessionStorage.getItem(\"userDetail\"));\r\n        const userDetails = JSON.parse(localStorage.getItem(\"userDetail\"));\r\n\r\n        const voterListId = { countId: userDetails._id };\r\n       \r\n        VoterService.getVotersByBoothId( voterListId).then((res) => {\r\n            \r\n            if(res.length>0){\r\n                \r\nsetvoters(Number(res[0].voter));\r\n\r\n\r\n            }\r\n        }).catch((err) => {\r\n            setError(err.message);\r\n        });\r\n    }\r\n    const getTrackVotersList = () => {\r\n        const userDetails = JSON.parse(localStorage.getItem(\"userDetail\"));\r\n        TrackVotersService.getAllTrackVoters(userDetails._id).then((res) => {\r\n            setTrackVotersList(res);\r\n        }).catch((err) => {\r\n            setError(err.message);\r\n        });\r\n    }\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const onclick = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const handleChange = (event) => {\r\n        setAge(event.target.value);\r\n    };\r\n    const onSubmit = data => {\r\n        console.log(JSON.stringify(data, null, 2));\r\n        const createObjectConstituency = {\r\n            districtId: data.district,\r\n            constituency: data.constituency,\r\n        }\r\n    };\r\n    const getVoterList = () => {\r\n        VoterService.getAllVoter().then((res) => {\r\n            setVoterList(res);\r\n        }).catch((err) => {\r\n            setError(err.message);\r\n        });\r\n    }\r\n    const getVoterDataList = () => {\r\n        VoterDataService.getAllVoterData().then((res) => {\r\n            setVoterDataList(res);\r\n        }).catch((err) => {\r\n            setError(err.message);\r\n        });\r\n    }\r\n    const editVoter = (voter) => {\r\n        const obj = JSON.parse(JSON.stringify(voter));\r\n        obj.constituencyId = voter.constituencyId ? voter.constituencyId._id : '';\r\n        obj.districtId = voter.districtId ? voter.districtId._id : '';\r\n        obj.villageId = voter.villageId ? voter.villageId._id : '';\r\n        obj.countId= voter.countId ? voter.countId._id : '';\r\n        getConstituencyList(obj.districtId);\r\n        getVillageList(obj.constituencyId);\r\n        getBoothList(obj.villageId);\r\n        setTrackVoters(obj);\r\n        handleOpen();\r\n    }\r\n    // const deleteVoter = (voterdelete) => {\r\n    //     if (voterdelete) {\r\n    //         VoterService.deleteVoter(voterdelete).then((res) => {\r\n    //             getVoterList();\r\n    //         }).catch((err) => {\r\n    //         });\r\n    //     }\r\n    // };\r\n \r\n    const formik = useFormik({\r\n        initialValues: trackVoters,\r\n        enableReinitialize: true,\r\n        validationSchema: validationSchema,\r\n        onSubmit: (values, { resetForm }) => {\r\n            const userDetails = JSON.parse(sessionStorage.getItem(\"userDetail\"));\r\n            if (trackVoters._id) {\r\n               VoterService.upadeVoter(values).then((res) => {\r\n                    handleClose();\r\n                    getTrackVotersList();\r\n                    resetForm()\r\n                    alert(\" Voter Updated Successfully.\");\r\n                }).catch((err) => {\r\n                });\r\n            }\r\n            else {\r\n               \r\n                console.log(JSON.parse(localStorage.getItem(\"userDetail\")))\r\n                const userDetails = JSON.parse(localStorage.getItem(\"userDetail\"));\r\n                values.voter = voters;\r\n                values.countId = userDetails._id;\r\n                TrackVotersService.creteTrackVoters( values).then((res) => {\r\n                    getTrackVotersList();\r\n                    resetForm();\r\n                    handleClose();\r\n                    \r\n                    alert(\" Voter Added Successfully.\");\r\n                    // props.history.push('/app/vendor');\r\n                })\r\n                    .catch((err) => {\r\n\r\n                        alert(err.response.data.message)\r\n                    })\r\n            }\r\n\r\n        },\r\n    });\r\n    return (\r\n        <>\r\n            <PageTitle title=\"Track Voters Booth Wise\" button={<Button\r\n                variant=\"contained\" onClick={handleOpen}\r\n                size=\"medium\"\r\n                color=\"secondary\" style={{ backgroundColor: '#30875b' }}> Add Votes Polled\r\n            </Button>} />\r\n            <Grid container spacing={4}>\r\n                <Grid item xs={12}>\r\n                    <Widget title=\"\" upperTitle noBodyPadding bodyClass={classes.tableOverflow}>\r\n                        <Table className=\"mb-0\">\r\n                            <TableHead >\r\n                                <TableRow>\r\n                                    {tableHeaders.map(key => (\r\n                                        <StyledTableCell key={key}>{key}</StyledTableCell>\r\n                                    ))}\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {trackVotersList.slice(pg * rpg, pg * rpg + rpg).map((trackVoters) => (\r\n                                    <TableRow key={trackVoters._id}>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{trackVoters.countId?.count}</TableCell>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{trackVoters.voter}</TableCell>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{trackVoters.votesPolled}</TableCell>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{trackVoters.ourVotesPolled}</TableCell>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{trackVoters.polledPercentage}</TableCell>\r\n                                     \r\n\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                        <TablePagination\r\n                            component=\"div\"\r\n                            rowsPerPageOptions={[5,  100, 1000, 3000]}\r\n                            count={trackVotersList.length}\r\n                            page={pg}\r\n                            onPageChange={handleChangePage}\r\n                            rowsPerPage={rpg}\r\n                            onRowsPerPageChange={handleChangeRowsPerPage}\r\n                        />\r\n                    </Widget>\r\n                </Grid>\r\n            </Grid>\r\n            <Dialog open={open} onClose={handleClose}>\r\n                <DialogTitle>Add Votes Polled</DialogTitle>\r\n                <form onSubmit={formik.handleSubmit} >\r\n                    <DialogContent style={{ width: 308 }}>\r\n                        <TextField\r\n                            InputProps={{ style: { width: 258 } }}\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"votesPolled\"\r\n                            name=\"votesPolled\"\r\n                            label=\"Number Of Voters Polled\"\r\n                            type=\"text\"\r\n                            variant=\"standard\"\r\n                            value={formik.values.votesPolled}\r\n                            onChange={formik.handleChange}\r\n                            error={formik.touched.votesPolled && Boolean(formik.errors.votesPolled)}\r\n                            helperText={formik.touched.votesPolled && formik.errors.votesPolled}\r\n                        /> \r\n                         \r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={handleClose}>Cancel</Button>\r\n                        <Button type=\"submit\">Add</Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n","C:\\polls\\ui\\src\\pages\\dashboard\\Locality\\Service\\trackVotersService.js",[],"C:\\QR-code\\ui\\src\\index.js",[],["1038","1039"],"C:\\QR-code\\ui\\src\\serviceWorker.js",[],"C:\\QR-code\\ui\\src\\components\\App.js",["1040","1041"],"import React from \"react\";\r\nimport { HashRouter, Route, Switch, Redirect } from \"react-router-dom\";\r\nimport ProfileRegistration from \"../pages/dashboard/ProfileRegistration\";\r\n\r\n// components\r\nimport Layout from \"./Layout\";\r\n\r\n// pages\r\nimport Error from \"../pages/error\";\r\nimport Login from \"../pages/login\";\r\n\r\nimport Home from \"../pages/home\";\r\nimport Success from \"../pages/dashboard/Success\";\r\nimport Getqr from \"../pages/dashboard/Getqr\";\r\n// context\r\nimport { useUserState } from \"../context/UserContext\";\r\n// import SchoolRegistration from \"../pages/dashboard/SchoolRegistration\";\r\nimport TicketBooking from \"../pages/dashboard/TicketBooking\";\r\nimport CoachingBooking from \"../pages/dashboard/CoachingBooking\";\r\nimport LoginLayout from \"./LoginLayout/LoginLayout\";\r\n\r\nexport default function App() {\r\n  // global\r\n  var { isAuthenticated } = useUserState();\r\n\r\n  return (\r\n    <HashRouter>\r\n      <Switch>\r\n        <Route exact path=\"/\" render={() => <Redirect to=\"/home\" />} />\r\n        {/* <Route\r\n          exact\r\n          path=\"/app\"\r\n          render={() => <Redirect to=\"/app/success\" />}\r\n        /> */}\r\n       \r\n        <PublicRoute path=\"/ticketbooking/:parkId\" component={TicketBooking} />\r\n        <PublicRoute path=\"/coachingbooking/:coachingId\" component={CoachingBooking} />\r\n        <PublicRoute path=\"/getqr/:parkId\" component={Getqr} />\r\n        {/* <PublicRoute path=\"/login\" component={Login} /> */}\r\n        <PublicRoute path=\"/home\" component={Home} />\r\n        \r\n        <PublicRoute path=\"/paymentstatus/:bookingId/:parkId\" component={Success} />\r\n        <PrivateRoute path=\"/app\" component={Layout} />\r\n        {/* <Route path=\"/sriqr/profileregistration\" component={ProfileRegistration} /> */}\r\n\r\n        <PublicRoute path=\"/sriqr\" component={LoginLayout} />\r\n        \r\n        <Route component={Error} />\r\n      </Switch>\r\n    </HashRouter>\r\n  );\r\n\r\n  // #######################################################################\r\n\r\n  function PrivateRoute({ component, ...rest }) {\r\n    return (\r\n      \r\n      <Route\r\n        {...rest}\r\n        render={props =>\r\n          isAuthenticated ? (\r\n            React.createElement(component, props)\r\n          ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/login\",\r\n                state: {\r\n                  from: props.location,\r\n                },\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      />\r\n    );\r\n  }\r\n\r\n  function PublicRoute({ component, ...rest }) {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={props =>\r\n          React.createElement(component, props)\r\n        }\r\n      />\r\n    );\r\n  }\r\n}\r\n","C:\\QR-code\\ui\\src\\context\\LayoutContext.js",[],"C:\\QR-code\\ui\\src\\context\\UserContext.js",[],"C:\\QR-code\\ui\\src\\themes\\index.js",[],"C:\\QR-code\\ui\\src\\services\\CategoryServices.js",[],"C:\\QR-code\\ui\\src\\components\\LoginLayout\\LoginLayout.js",["1042","1043","1044","1045","1046","1047","1048","1049","1050","1051","1052","1053","1054","1055","1056"],"import React from \"react\";\r\nimport {\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n  withRouter,\r\n} from \"react-router-dom\";\r\nimport Layout from \"../Layout/Layout\"\r\nimport classnames from \"classnames\";\r\nimport {Box, IconButton, Link} from '@material-ui/core'\r\nimport Icon from '@mdi/react'\r\nimport Header from \"../../pages/home/Header\"\r\n//icons\r\nimport {\r\n  mdiFacebook as FacebookIcon,\r\n  mdiTwitter as TwitterIcon,\r\n  mdiGithub as GithubIcon,\r\n} from '@mdi/js'\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\n// import Header from \"../Header\";\r\nimport Sidebar from \"../Sidebar\";\r\n\r\n// pages\r\n// import Dashboard from \"../../pages/dashboard/ProfileRegistration\";\r\nimport Typography from \"../../pages/typography\";\r\nimport Notifications from \"../../pages/notifications\";\r\nimport Maps from \"../../pages/maps\";\r\n// import Tables from \"../../pages/tables\";\r\n\r\nimport Icons from \"../../pages/icons\";\r\nimport Charts from \"../../pages/charts\";\r\n\r\n// context\r\nimport { useLayoutState } from \"../../context/LayoutContext\";\r\nimport { Category } from \"@material-ui/icons\";\r\nimport Login from \"../../pages/login/Login\";\r\nimport LoginHeader from \"../LoginHeader/LoginHeader\";\r\nimport ProfileRegistration from \"../../pages/dashboard/ProfileRegistration\";\r\nimport Success from \"../../pages/dashboard/Success\";\r\n\r\n// import SchoolRegistration from \"../../pages/dashboard/ProfileRegistration\";\r\n\r\nfunction LoginLayout(props) {\r\n  var classes = useStyles();\r\n\r\n  // global\r\n  var layoutState = useLayoutState();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        <>\r\n        <Header history={props.history} />\r\n          \r\n          <div\r\n            className={classnames(classes.content, {\r\n              [classes.contentShift]: layoutState.isSidebarOpened,\r\n            })}\r\n          >\r\n            <div className={classes.fakeToolbar} />\r\n            <Switch>\r\n             \r\n               {/* <Route\r\n                exact\r\n                path=\"/\"\r\n                render={() => <Redirect to=\"/sriqr/schoolregistration\" />}\r\n              />   */}\r\n              {/* <Route path=\"/montessori/schoolregistration\" component={SchoolRegistration} /> */}\r\n              <Route path=\"/sriqr/login\" component={Login} />\r\n              <Route path=\"/sriqr/profileregistration\" component={ProfileRegistration} />\r\n              <Route path=\"/sriqr/success\" component={Success} />\r\n\r\n              <Route path=\"/sriqr/dashboard\" component={Layout} />\r\n            </Switch>\r\n            <Box\r\n              mt={5}\r\n              width={\"100%\"}\r\n              display={\"flex\"}\r\n              alignItems={\"center\"}\r\n              justifyContent=\"space-between\"\r\n            >\r\n              {/* <div>\r\n                <Link\r\n                  color={'primary'}\r\n                  href={'https://flatlogic.com/'}\r\n                  target={'_blank'}\r\n                  className={classes.link}\r\n                >\r\n                  Flatlogic\r\n                </Link>\r\n                <Link\r\n                  color={'primary'}\r\n                  href={'https://flatlogic.com/about'}\r\n                  target={'_blank'}\r\n                  className={classes.link}\r\n                >\r\n                  About Us\r\n                </Link>\r\n                <Link\r\n                  color={'primary'}\r\n                  href={'https://flatlogic.com/blog'}\r\n                  target={'_blank'}\r\n                  className={classes.link}\r\n                >\r\n                  Blog\r\n                </Link>\r\n              </div> */}\r\n              {/* <div>\r\n                <Link\r\n                  href={'https://www.facebook.com/flatlogic'}\r\n                  target={'_blank'}\r\n                >\r\n                  <IconButton aria-label=\"facebook\">\r\n                    <Icon\r\n                      path={FacebookIcon}\r\n                      size={1}\r\n                      color=\"#6E6E6E99\"\r\n                    />\r\n                  </IconButton>\r\n                </Link>\r\n                <Link\r\n                  href={'https://twitter.com/flatlogic'}\r\n                  target={'_blank'}\r\n                >\r\n                  <IconButton aria-label=\"twitter\">\r\n                    <Icon\r\n                      path={TwitterIcon}\r\n                      size={1}\r\n                      color=\"#6E6E6E99\"\r\n                    />\r\n                  </IconButton>\r\n                </Link>\r\n                <Link\r\n                  href={'https://github.com/flatlogic'}\r\n                  target={'_blank'}\r\n                >\r\n                  <IconButton\r\n                    aria-label=\"github\"\r\n                    style={{marginRight: -12}}\r\n                  >\r\n                    <Icon\r\n                      path={GithubIcon}\r\n                      size={1}\r\n                      color=\"#6E6E6E99\"\r\n                    />\r\n                  </IconButton>\r\n                </Link>\r\n              </div> */}\r\n            </Box>\r\n          </div>\r\n        </>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(LoginLayout);\r\n","C:\\QR-code\\ui\\src\\pages\\error\\Error.js",[],"C:\\QR-code\\ui\\src\\components\\Layout\\Layout.js",["1057","1058","1059","1060","1061","1062","1063","1064"],"import React from \"react\";\r\nimport {\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n  withRouter,\r\n} from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\nimport BookingReport from \"../../pages/dashboard/BookingReport\"\r\nimport Report from \"../../pages/dashboard/report\"\r\nimport Success from \"../../pages/dashboard/Success\"\r\nimport ProfileRegistration from \"../../pages/dashboard/ProfileRegistration\"\r\nimport Coaching from \"../../pages/dashboard/Coaching\"\r\nimport Park from \"../../pages/dashboard/Park\"\r\n\r\nimport {Box, IconButton, Link} from '@material-ui/core'\r\nimport Icon from '@mdi/react'\r\nimport {\r\n  mdiFacebook as FacebookIcon,\r\n  mdiTwitter as TwitterIcon,\r\n  mdiGithub as GithubIcon,\r\n} from '@mdi/js'\r\n\r\nimport useStyles from \"./styles\";\r\n\r\nimport Header from \"../Header\";\r\nimport Sidebar from \"../Sidebar\";\r\n\r\n// pages\r\n// import Dashboard from \"../../pages/dashboard/SchoolRegistration\";\r\nimport Typography from \"../../pages/typography\";\r\nimport Notifications from \"../../pages/notifications\";\r\nimport Maps from \"../../pages/maps\";\r\nimport Icons from \"../../pages/icons\";\r\nimport Charts from \"../../pages/charts\";\r\n// context\r\nimport { useLayoutState } from \"../../context/LayoutContext\";\r\nimport { Category } from \"@material-ui/icons\";\r\n\r\nfunction Layout(props) {\r\n  var classes = useStyles();\r\n\r\n  // global\r\n  var layoutState = useLayoutState();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        <>\r\n          <Header history={props.history} />\r\n          <Sidebar />\r\n          <div\r\n            className={classnames(classes.content, {\r\n              [classes.contentShift]: layoutState.isSidebarOpened,\r\n            })}\r\n          >\r\n            <div className={classes.fakeToolbar} />\r\n            <Switch>\r\n            <Route path=\"/app/bookingreport\" component={BookingReport} />\r\n            <Route path=\"/app/report\" component={Report} />\r\n            <Route path=\"/app/profileregistration\" component={ProfileRegistration} />\r\n            <Route path=\"/app/success\" component={Success} />\r\n              <Route path=\"/app/park\" component={Park} />\r\n              <Route path=\"/app/coaching\" component={Coaching} />\r\n              <Route path=\"/app/typography\" component={Typography} />\r\n              <Route path=\"/app/notifications\" component={Notifications} />\r\n              <Route\r\n                exact\r\n                path=\"/app/ui\"\r\n                render={() => <Redirect to=\"/app/ui/icons\" />}\r\n              />\r\n              <Route path=\"/app/ui/reportofactivities\" component={Icons} />\r\n              <Route path=\"/app/ui/charts\" component={Charts} />\r\n            </Switch>\r\n            <Box\r\n              mt={5}\r\n              width={\"100%\"}\r\n              display={\"flex\"}\r\n              alignItems={\"center\"}\r\n              justifyContent=\"space-between\"\r\n            >\r\n              {/* <div>\r\n                <Link\r\n                  color={'primary'}\r\n                  href={'https://flatlogic.com/'}\r\n                  target={'_blank'}\r\n                  className={classes.link}\r\n                >\r\n                  Flatlogic\r\n                </Link>\r\n                <Link\r\n                  color={'primary'}\r\n                  href={'https://flatlogic.com/about'}\r\n                  target={'_blank'}\r\n                  className={classes.link}\r\n                >\r\n                  About Us\r\n                </Link>\r\n                <Link\r\n                  color={'primary'}\r\n                  href={'https://flatlogic.com/blog'}\r\n                  target={'_blank'}\r\n                  className={classes.link}\r\n                >\r\n                  Blog\r\n                </Link>\r\n              </div> */}\r\n              {/* <div>\r\n                <Link\r\n                  href={'https://www.facebook.com/flatlogic'}\r\n                  target={'_blank'}\r\n                >\r\n                  <IconButton aria-label=\"facebook\">\r\n                    <Icon\r\n                      path={FacebookIcon}\r\n                      size={1}\r\n                      color=\"#6E6E6E99\"\r\n                    />\r\n                  </IconButton>\r\n                </Link>\r\n                <Link\r\n                  href={'https://twitter.com/flatlogic'}\r\n                  target={'_blank'}\r\n                >\r\n                  <IconButton aria-label=\"twitter\">\r\n                    <Icon\r\n                      path={TwitterIcon}\r\n                      size={1}\r\n                      color=\"#6E6E6E99\"\r\n                    />\r\n                  </IconButton>\r\n                </Link>\r\n                <Link\r\n                  href={'https://github.com/flatlogic'}\r\n                  target={'_blank'}\r\n                >\r\n                  <IconButton\r\n                    aria-label=\"github\"\r\n                    style={{marginRight: -12}}\r\n                  >\r\n                    <Icon\r\n                      path={GithubIcon}\r\n                      size={1}\r\n                      color=\"#6E6E6E99\"\r\n                    />\r\n                  </IconButton>\r\n                </Link>\r\n              </div> */}\r\n            </Box>\r\n          </div>\r\n        </>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Layout);\r\n","C:\\QR-code\\ui\\src\\pages\\login\\Login.js",["1065","1066","1067"],"import React, { useState } from \"react\";\r\nimport { Grid, CircularProgress, Typography,Tabs,Tab,TextField,Fade,} from \"@material-ui/core\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport { loginUser } from \"../../context/UserContext\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport useStyles from \"./styles\";\r\nimport {Link} from \"react-router-dom\";\r\nimport { useUserDispatch,  } from \"../../context/UserContext\";\r\nimport Footer from \"../../pages/home/Footer\"\r\nfunction Login(props) {\r\n  const handleOpen = () => {\r\n    props.history.push('/app/profileregistration/add') \r\n};\r\n  var classes = useStyles();\r\n  var userDispatch = useUserDispatch();\r\n  var [isLoading, setIsLoading] = useState(false);\r\n  var [error, setError] = useState(null);\r\n  var [activeTabId, setActiveTabId] = useState(0);\r\n  var [loginValue, setLoginValue] = useState(\"\");\r\n  var [passwordValue, setPasswordValue] = useState(\"\");\r\n  var [roleValue, setRoleValue] = useState(\"\");\r\n  return (\r\n  \r\n    <Grid container className={classes.container}>\r\n      {/* <div className={classes.logotypeContainer} >\r\n        <img src=\"https://img.freepik.com/premium-photo/hands-student-boy-using-wooden-material-montessori-school_47726-6358.jpg?w=2000\"\r\n         alt=\"logo\" className={classes.logotypeImage} style={{ width: '820px',  height: '1000px'}}/>\r\n      </div> */}\r\n      <div className={classes.formContainer}>\r\n        <div className={classes.form}>\r\n\r\n         {/* <h2 style={{fontFamily: 'unset',color: '#0fb880', fontSize: '20px', fontWeight: 'revert',   \r\n       \r\n        }}>Welcome To Sure shot Survey </h2> */}\r\n      \r\n          <Tabs\r\n            value={activeTabId}\r\n            onChange={(e, id) => setActiveTabId(id)}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            centered\r\n          >\r\n            <Tab label=\"Login\" style={{color:\"#ff6b81\"}} classes={{ root: classes.tab }} />\r\n          </Tabs>\r\n            <React.Fragment>\r\n              <Fade in={error}>\r\n                <Typography color=\"secondary\" className={classes.errorMessage}>\r\n                  Something is wrong with your login or password :(\r\n                </Typography>\r\n              </Fade>\r\n              {/* <FormControl variant=\"standard\" fullWidth>\r\n                            <InputLabel id=\"demo-simple-select-standard-label\">Select Role</InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-standard-label\"\r\n                                id=\"demo-simple-select-standard\"\r\n                                label=\"Select Login\"\r\n                                name=\"status\"\r\n                                placeholder=\"Select Role\"\r\n                               value={roleValue}\r\n                               onChange={e => setRoleValue(e.target.value)}\r\n                            >\r\n                                <MenuItem value=\"\">\r\n                                    <em>None</em>\r\n                                </MenuItem>\r\n                                <MenuItem value={'SCHOOLE'}>Admin </MenuItem>\r\n                                <MenuItem value={'BOOTH'}>Booth </MenuItem>\r\n                              \r\n                            </Select>\r\n                        </FormControl> */}\r\n              <TextField\r\n                id=\"email\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={loginValue}\r\n                onChange={e => setLoginValue(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"Email Adress\"\r\n                type=\"email\"\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                id=\"password\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={passwordValue}\r\n                onChange={e => setPasswordValue(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"Password\"\r\n                type=\"password\"\r\n                fullWidth\r\n              />\r\n              <div className={classes.formButtons}>\r\n                {isLoading ? (\r\n                  <CircularProgress size={26} className={classes.loginLoader} />\r\n                ) : (\r\n                  <Button\r\n                    disabled={\r\n                      loginValue.length === 0 || passwordValue.length === 0\r\n                    }\r\n                    onClick={() =>\r\n                      \r\n                      loginUser(\r\n                        userDispatch,\r\n                        loginValue,\r\n                        passwordValue,\r\n                        props.history,\r\n                        setIsLoading,\r\n                        setError,\r\n                        roleValue\r\n                      )\r\n                    }\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    style={{backgroundColor:\"#ff6b81\", }}\r\n                    size=\"large\"\r\n                  >\r\n                    Login\r\n                  </Button>\r\n                )}\r\n                {/* /app/profileregistration/add */}\r\n                 <Link to=\"/sriqr/profileregistration\"\r\n                  color=\"primary\"\r\n                  size=\"large\" style={{color:\"#ff6b81\", fontSize: \"initial\"}}\r\n                  className={classes.forgetButton}\r\n                >\r\n                get registerd\r\n                </Link>\r\n                \r\n              </div>\r\n              \r\n            </React.Fragment>\r\n         \r\n           \r\n        </div>\r\n       \r\n      </div>\r\n      <div>\r\n      \r\n        </div>\r\n    </Grid>\r\n    \r\n  );\r\n\r\n}\r\n\r\nexport default withRouter(Login);\r\n","C:\\QR-code\\ui\\src\\themes\\default.js",[],"C:\\QR-code\\ui\\src\\services\\httpServices.js",[],"C:\\QR-code\\ui\\src\\components\\LoginHeader\\LoginHeader.js",["1068","1069","1070","1071","1072","1073","1074","1075","1076","1077","1078","1079","1080","1081","1082","1083","1084","1085","1086","1087","1088","1089","1090","1091","1092"],"import React from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  InputBase,\r\n  Menu,\r\n  MenuItem,\r\n  Fab,\r\n  withStyles,\r\n  Button\r\n} from \"@material-ui/core\";\r\nimport { Grid, Card, Box, FormControl, Select, InputLabel, TextField } from \"@material-ui/core\";\r\nimport Login from \"../../pages/login/Login\";\r\nimport {\r\n\r\n  Link\r\n} from \"react-router-dom\";\r\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\r\n// import SchoolRegistration from \"../../pages/dashboard/SchoolRegistration\";\r\nimport {\r\n  Menu as MenuIcon,\r\n\r\n \r\n  Send as SendIcon,\r\n  ArrowBack as ArrowBackIcon\r\n} from \"@material-ui/icons\";\r\nimport { fade } from \"@material-ui/core/styles/colorManipulator\";\r\nimport classNames from \"classnames\";\r\n\r\nimport { Badge, Typography } from \"../Wrappers/Wrappers\";\r\n\r\nimport UserAvatar from \"../UserAvatar/UserAvatar\";\r\n\r\nconst messages = [\r\n  {\r\n    id: 0,\r\n    variant: \"warning\",\r\n    name: \"Jane Hew\",\r\n    message: \"Hey! How is it going?\",\r\n    time: \"9:32\"\r\n  },\r\n  {\r\n    id: 1,\r\n    variant: \"success\",\r\n    name: \"Lloyd Brown\",\r\n    message: \"Check out my new Dashboard\",\r\n    time: \"9:18\"\r\n  },\r\n  {\r\n    id: 2,\r\n    variant: \"primary\",\r\n    name: \"Mark Winstein\",\r\n    message: \"I want rearrange the appointment\",\r\n    time: \"9:15\"\r\n  },\r\n  {\r\n    id: 3,\r\n    variant: \"secondary\",\r\n    name: \"Liana Dutti\",\r\n    message: \"Good news from sale department\",\r\n    time: \"9:09\"\r\n  }\r\n];\r\n\r\n\r\n\r\n\r\nconst HeaderView = ({ classes, isSidebarOpened, toggleSidebar, ...props }) => (\r\n  <AppBar position=\"fixed\" className={classes.appBar} style={{backgroundColor : 'white'}}>\r\n    <Toolbar className={classes.toolbar} >\r\n      \r\n  \r\n      <Typography variant=\"h6\" weight=\"medium\" className={classes.logotype} style={{ fontSize:\"calc(2.142rem)\", fontWeight:\"600\", color:'#ff6b81'}}>Admin</Typography>\r\n      <div className={classes.grow} />\r\n    \r\n\r\n\r\n  {/* <Grid item xs>\r\n  <li  style={{ display:\"block\"}}>\r\n          <Link to=\"/montessori/ticketbooking\" style={{color:\"white\", textDecoration: \"none\", color:'#6c0f0e'}}>Ticket Booking</Link>\r\n          </li>\r\n  </Grid>\r\n  \r\n  <Grid item xs>\r\n  <li style={{ display:\"block\"}}>\r\n          <Link to=\"/montessori/login\" style={{color:\"white\", textDecoration: \"none\", color:'#6c0f0e' }}>Login</Link>\r\n          </li>\r\n  </Grid> */}\r\n\r\n \r\n\r\n\r\n      \r\n\r\n\r\n   \r\n      \r\n\r\n     \r\n      <Menu\r\n        id=\"profile-menu\"\r\n        open={Boolean(props.profileMenu)}\r\n        anchorEl={props.profileMenu}\r\n        onClose={props.closeProfileMenu}\r\n        className={classes.headerMenu}\r\n        classes={{ paper: classes.profileMenu }}\r\n        disableAutoFocusItem\r\n      >\r\n        <div className={classes.profileMenuUser}>\r\n          <Typography variant=\"h4\" weight=\"medium\">\r\n            John Smith\r\n          </Typography>\r\n          <Typography\r\n            className={classes.profileMenuLink}\r\n            component=\"a\"\r\n            color=\"primary\"\r\n            href=\"https://flatlogic.com\"\r\n          >\r\n            Flalogic.com\r\n          </Typography>\r\n        </div>\r\n      \r\n       \r\n        <div className={classes.profileMenuUser}>\r\n          <Typography\r\n            className={classes.profileMenuLink}\r\n            color=\"primary\"\r\n            onClick={props.signOut}\r\n          >\r\n            Sign Out\r\n          </Typography>\r\n        </div>\r\n      </Menu>\r\n    </Toolbar>\r\n  </AppBar>\r\n);\r\n\r\nconst styles = theme => ({\r\n  logotype: {\r\n    color: \"white\",\r\n    marginLeft: theme.spacing.unit * 2.5,\r\n    marginRight: theme.spacing.unit * 2.5,\r\n    fontWeight: 500,\r\n    fontSize: 18,\r\n    whiteSpace: \"nowrap\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      display: \"none\"\r\n    }\r\n  },\r\n  appBar: {\r\n    width: \"100vw\",\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    })\r\n  },\r\n  toolbar: {\r\n    paddingLeft: theme.spacing.unit * 2,\r\n    paddingRight: theme.spacing.unit * 2\r\n  },\r\n  hide: {\r\n    display: \"none\"\r\n  },\r\n  grow: {\r\n    flexGrow: 1\r\n  },\r\n \r\n \r\n  \r\n  inputRoot: {\r\n    color: \"inherit\",\r\n    width: \"100%\"\r\n  },\r\n  inputInput: {\r\n    height: 36,\r\n    padding: 0,\r\n    paddingRight: 36 + theme.spacing.unit * 1.25,\r\n    width: \"100%\"\r\n  },\r\n  messageContent: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\"\r\n  },\r\n  headerMenu: {\r\n    marginTop: theme.spacing.unit * 7\r\n  },\r\n  headerMenuList: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\"\r\n  },\r\n  headerMenuItem: {\r\n    \"&:hover, &:focus\": {\r\n      backgroundColor: theme.palette.primary.main,\r\n      color: \"white\"\r\n    }\r\n  },\r\n  headerMenuButton: {\r\n    marginLeft: theme.spacing.unit * 2,\r\n    padding: theme.spacing.unit / 2\r\n  },\r\n  headerMenuButtonCollapse: {\r\n    marginRight: theme.spacing.unit * 2\r\n  },\r\n  headerIcon: {\r\n    fontSize: 28,\r\n    color: \"rgba(255, 255, 255, 0.35)\"\r\n  },\r\n  headerIconCollapse: {\r\n    color: \"white\"\r\n  },\r\n  profileMenu: {\r\n    minWidth: 265\r\n  },\r\n  profileMenuUser: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    padding: theme.spacing.unit * 2\r\n  },\r\n  profileMenuItem: {\r\n    color: theme.palette.text.hint\r\n  },\r\n  profileMenuIcon: {\r\n    marginRight: theme.spacing.unit * 2,\r\n    color: theme.palette.text.hint\r\n  },\r\n  profileMenuLink: {\r\n    fontSize: 16,\r\n    textDecoration: \"none\",\r\n    \"&:hover\": {\r\n      cursor: \"pointer\"\r\n    }\r\n  },\r\n \r\n \r\n  sendMessageButton: {\r\n    margin: theme.spacing.unit * 4,\r\n    marginTop: theme.spacing.unit * 2,\r\n    marginBottom: theme.spacing.unit * 2,\r\n    textTransform: \"none\"\r\n  },\r\n  sendButtonIcon: {\r\n    marginLeft: theme.spacing.unit * 2\r\n  }\r\n});\r\n\r\nexport default withStyles(styles)(HeaderView);\r\n","C:\\QR-code\\ui\\src\\pages\\login\\styles.js",[],"C:\\QR-code\\ui\\src\\pages\\charts\\Charts.js",[],"C:\\QR-code\\ui\\src\\components\\UserAvatar\\UserAvatar.js",[],"C:\\QR-code\\ui\\src\\components\\Wrappers\\Wrappers.js",[],"C:\\QR-code\\ui\\src\\pages\\charts\\components\\ApexHeatmap.js",[],"C:\\QR-code\\ui\\src\\components\\PageTitle\\PageTitle.js",[],"C:\\QR-code\\ui\\src\\pages\\charts\\components\\ApexLineChart.js",[],"C:\\QR-code\\ui\\src\\components\\Widget\\Widget.js",["1093","1094","1095","1096","1097"],"C:\\QR-code\\ui\\src\\components\\UserAvatar\\styles.js",[],"C:\\QR-code\\ui\\src\\components\\PageTitle\\styles.js",[],"C:\\QR-code\\ui\\src\\components\\Widget\\styles.js",[],"C:\\QR-code\\ui\\src\\components\\Layout\\styles.js",[],"C:\\QR-code\\ui\\src\\pages\\error\\styles.js",[],"C:\\QR-code\\ui\\src\\pages\\maps\\Maps.js",[],"C:\\QR-code\\ui\\src\\pages\\typography\\Typography.js",[],"C:\\QR-code\\ui\\src\\components\\LoginLayout\\styles.js",[],"C:\\QR-code\\ui\\src\\components\\Sidebar\\Sidebar.js",["1098","1099","1100","1101","1102","1103","1104","1105","1106","1107","1108","1109","1110","1111","1112","1113","1114","1115","1116","1117","1118","1119","1120"],"import React, { useState, useEffect } from \"react\";\r\nimport { Drawer, IconButton, List } from \"@material-ui/core\";\r\nimport CategoryServices from \"../../services/CategoryServices\";\r\n\r\nimport {\r\n  NotificationsNone as NotificationsIcon,\r\n  FormatSize as TypographyIcon,\r\n  HotTub as HotTub,\r\n  ArtTrack as ArtTrack,\r\n  FilterNone as UIElementsIcon,\r\n  BorderAll as TableIcon,\r\n  QuestionAnswer as SupportIcon,\r\n  LibraryBooks as LibraryIcon,\r\n  HelpOutline as FAQIcon,\r\n  ArrowBack as ArrowBackIcon,\r\n  SvgIconComponent as SvgIconComponent,\r\n  CalendarToday as CalendarToday,\r\n  AccessAlarmSharp as AccessAlarmSharp,\r\n  Create as Create,\r\n  SupervisedUserCircle,\r\n  HowToVoteSharp ,\r\n  HistorySharp,\r\n  OpenInNew,\r\n  EvStation\r\n} from \"@material-ui/icons\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport classNames from \"classnames\";\r\n// styles\r\nimport useStyles from \"./styles\";\r\n// components\r\nimport SidebarLink from \"./components/SidebarLink/SidebarLink\";\r\nimport Dot from \"./components/Dot\";\r\n// context\r\nimport {\r\n  useLayoutState,\r\n  useLayoutDispatch,\r\n  toggleSidebar,\r\n} from \"../../context/LayoutContext\";\r\n\r\nlet structure = [\r\n  \r\n  \r\n];\r\n\r\nlet batches = [\r\n  \r\n  {\r\n    id: 1,\r\n    label: \"Batches\",\r\n    link: \"/app/coaching\",\r\n    icon: <HotTub />,\r\n  },\r\n  // {\r\n  //   id: 2,\r\n  //   label: \"Booking Reports\",\r\n  //   link: \"/app/bookingreport\",\r\n  //   icon: <HowToVoteSharp />,\r\n  // },\r\n  // {\r\n  //   id: 3,\r\n  //   label: \"Reports\",\r\n  //   link: \"/app/report\",\r\n  //   icon: <SupervisedUserCircle />,\r\n  // },\r\n];\r\n\r\nconst userDetails = JSON.parse(localStorage.getItem(\"userDetail\"));\r\n\r\nif(userDetails && userDetails.registrationType === 'coaching'){\r\n  structure = batches;\r\n}else{\r\n  structure = [\r\n  \r\n    {\r\n      id: 1,\r\n      label: \"Park\",\r\n      link: \"/app/park\",\r\n      icon: <HotTub />,\r\n    },\r\n    {\r\n      id: 2,\r\n      label: \"Detailed Report\",\r\n      link: \"/app/bookingreport\",\r\n      icon: <HowToVoteSharp />,\r\n    },\r\n    {\r\n      id: 3,\r\n      label: \"Reports\",\r\n      link: \"/app/report\",\r\n      icon: <SupervisedUserCircle />,\r\n    },\r\n  ]\r\n}\r\nfunction Sidebar({ location }) {\r\n  var classes = useStyles();\r\n  var theme = useTheme();\r\n\r\n  // global\r\n  var { isSidebarOpened } = useLayoutState();\r\n  var layoutDispatch = useLayoutDispatch();\r\n\r\n  // local\r\n  var [isPermanent, setPermanent] = useState(true);\r\n\r\n  useEffect(function() {\r\n    window.addEventListener(\"resize\", handleWindowWidthChange);\r\n    handleWindowWidthChange();\r\n    return function cleanup() {\r\n      window.removeEventListener(\"resize\", handleWindowWidthChange);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <Drawer\r\n      variant={isPermanent ? \"permanent\" : \"temporary\"}\r\n      className={classNames(classes.drawer, {\r\n        [classes.drawerOpen]: isSidebarOpened,\r\n        [classes.drawerClose]: !isSidebarOpened,\r\n      })}\r\n      classes={{\r\n        paper: classNames({\r\n          [classes.drawerOpen]: isSidebarOpened,\r\n          [classes.drawerClose]: !isSidebarOpened,\r\n        }),\r\n      }}\r\n      open={isSidebarOpened}\r\n    >\r\n      <div className={classes.toolbar} />\r\n      <div className={classes.mobileBackButton}>\r\n        <IconButton onClick={() => toggleSidebar(layoutDispatch)}>\r\n          <ArrowBackIcon\r\n            classes={{\r\n              root: classNames(classes.headerIcon, classes.headerIconCollapse),\r\n            }}\r\n          />\r\n        </IconButton>\r\n      </div>\r\n      <List className={classes.sidebarList}>\r\n        {structure.map(link => (\r\n          <SidebarLink\r\n            key={link.id}\r\n            location={location}\r\n            isSidebarOpened={isSidebarOpened}\r\n            {...link}\r\n          />\r\n        ))}\r\n      </List>\r\n    </Drawer>\r\n  );\r\n  // ##################################################################\r\n  function handleWindowWidthChange() {\r\n    var windowWidth = window.innerWidth;\r\n    var breakpointWidth = theme.breakpoints.values.md;\r\n    var isSmallScreen = windowWidth < breakpointWidth;\r\n    if (isSmallScreen && isPermanent) {\r\n      setPermanent(false);\r\n    } else if (!isSmallScreen && !isPermanent) {\r\n      setPermanent(true);\r\n    }\r\n  }\r\n}\r\n\r\nexport default withRouter(Sidebar);\r\n","C:\\QR-code\\ui\\src\\pages\\notifications\\Notifications.js",[],"C:\\QR-code\\ui\\src\\components\\Header\\Header.js",["1121","1122","1123","1124","1125","1126","1127","1128","1129"],"import React, { useState } from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  InputBase,\r\n  Menu,\r\n  MenuItem,\r\n  Fab,\r\n  Link\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Menu as MenuIcon,\r\n  Person as AccountIcon,\r\n  Search as SearchIcon,\r\n  Send as SendIcon,\r\n  ArrowBack as ArrowBackIcon,\r\n  BuildTwoTone,\r\n} from \"@material-ui/icons\";\r\nimport classNames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport {  Typography, Button } from \"../Wrappers\";\r\nimport Notification from \"../Notification/Notification\";\r\nimport UserAvatar from \"../UserAvatar/UserAvatar\";\r\n\r\n// context\r\nimport {\r\n  useLayoutState,\r\n  useLayoutDispatch,\r\n  toggleSidebar,\r\n} from \"../../context/LayoutContext\";\r\nimport { useUserDispatch, signOut } from \"../../context/UserContext\";\r\n\r\nconst messages = [\r\n  {\r\n    id: 0,\r\n    variant: \"warning\",\r\n    name: \"Jane Hew\",\r\n    message: \"Hey! How is it going?\",\r\n    time: \"9:32\",\r\n  },\r\n  {\r\n    id: 1,\r\n    variant: \"success\",\r\n    name: \"Lloyd Brown\",\r\n    message: \"Check out my new Dashboard\",\r\n    time: \"9:18\",\r\n  },\r\n  {\r\n    id: 2,\r\n    variant: \"primary\",\r\n    name: \"Mark Winstein\",\r\n    message: \"I want rearrange the appointment\",\r\n    time: \"9:15\",\r\n  },\r\n  {\r\n    id: 3,\r\n    variant: \"secondary\",\r\n    name: \"Liana Dutti\",\r\n    message: \"Good news from sale department\",\r\n    time: \"9:09\",\r\n  },\r\n];\r\n\r\nconst notifications = [\r\n  { id: 0, color: \"warning\", message: \"Check out this awesome ticket\" },\r\n  {\r\n    id: 1,\r\n    color: \"success\",\r\n    type: \"info\",\r\n    message: \"What is the best way to get ...\",\r\n  },\r\n  {\r\n    id: 2,\r\n    color: \"secondary\",\r\n    type: \"notification\",\r\n    message: \"This is just a simple notification\",\r\n  },\r\n  {\r\n    id: 3,\r\n    color: \"primary\",\r\n    type: \"e-commerce\",\r\n    message: \"12 new orders has arrived today\",\r\n  },\r\n];\r\n\r\nexport default function Header(props) {\r\n  var classes = useStyles();\r\n\r\n  // global\r\n  var layoutState = useLayoutState();\r\n  var layoutDispatch = useLayoutDispatch();\r\n  var userDispatch = useUserDispatch();\r\n\r\n  // local\r\n  var [mailMenu, setMailMenu] = useState(null);\r\n  var [isMailsUnread, setIsMailsUnread] = useState(true);\r\n  var [notificationsMenu, setNotificationsMenu] = useState(null);\r\n  var [isNotificationsUnread, setIsNotificationsUnread] = useState(true);\r\n  var [profileMenu, setProfileMenu] = useState(null);\r\n  var [isSearchOpen, setSearchOpen] = useState(false);\r\n  const userDetails = JSON.parse(localStorage.getItem(\"userDetail\"));\r\n  \r\n\r\n  // style={{ backgroundColor: 'rgb(255, 92, 147)', color: 'white' }}\r\n  return (\r\n    <AppBar position=\"fixed\" className={classes.appBar} style={{backgroundColor : 'white'}}>\r\n      <Toolbar className={classes.toolbar} >\r\n        <IconButton\r\n          color=\"inherit\"\r\n          onClick={() => toggleSidebar(layoutDispatch)}\r\n          className={classNames(\r\n            classes.headerMenuButtonSandwich,\r\n            classes.headerMenuButtonCollapse,\r\n          )}\r\n        >\r\n          {layoutState.isSidebarOpened ? (\r\n            <ArrowBackIcon\r\n              classes={{\r\n                root: classNames(\r\n                  classes.headerIcon,\r\n                  classes.headerIconCollapse,\r\n                ),\r\n              }}\r\n            />\r\n          ) : (\r\n            <MenuIcon\r\n              classes={{\r\n                root: classNames(\r\n                  classes.headerIcon,\r\n                  classes.headerIconCollapse,\r\n                ),\r\n              }}\r\n            />\r\n          )}\r\n        </IconButton>\r\n        <Typography variant=\"h6\" weight=\"medium\" className={classes.logotype} style={{ fontSize:\"calc(2.142rem)\", fontWeight:\"600\", color:\"#ff6b81\"}}>\r\n       Admin\r\n        </Typography>\r\n       \r\n        <div className={classes.grow} />\r\n        {/* <Button component={Link} href=\"https://flatlogic.com/templates/react-material-admin-full\" variant={\"outlined\"} color={\"secondary\"} className={classes.purchaseBtn}>Unlock full version</Button> */}\r\n       \r\n        <IconButton\r\n          color=\"inherit\"\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"mail-menu\"\r\n          onClick={e => {\r\n            setNotificationsMenu(e.currentTarget);\r\n            setIsNotificationsUnread(false);\r\n          }}\r\n          className={classes.headerMenuButton}\r\n        >\r\n         \r\n        </IconButton>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"mail-menu\"\r\n          onClick={e => {\r\n            setMailMenu(e.currentTarget);\r\n            setIsMailsUnread(false);\r\n          }}\r\n          className={classes.headerMenuButton}\r\n        >\r\n         \r\n        </IconButton>\r\n        <IconButton style={{backgroundColor:\"#ff6b81\"}}\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n          className={classes.headerMenuButton}\r\n          aria-controls=\"profile-menu\"\r\n          onClick={e => setProfileMenu(e.currentTarget)}\r\n        >\r\n          <AccountIcon classes={{ root: classes.headerIcon }} />\r\n        </IconButton>\r\n        <Menu\r\n          id=\"mail-menu\"\r\n          open={Boolean(mailMenu)}\r\n          anchorEl={mailMenu}\r\n          onClose={() => setMailMenu(null)}\r\n          MenuListProps={{ className: classes.headerMenuList }}\r\n          className={classes.headerMenu}\r\n          classes={{ paper: classes.profileMenu }}\r\n          disableAutoFocusItem\r\n        >\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography variant=\"h4\" weight=\"medium\">\r\n              New Messages\r\n            </Typography>\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              component=\"a\"\r\n              color=\"secondary\"\r\n            >\r\n              {messages.length} New Messages\r\n            </Typography>\r\n          </div>\r\n          {messages.map(message => (\r\n            <MenuItem key={message.id} className={classes.messageNotification}>\r\n              <div className={classes.messageNotificationSide}>\r\n                <UserAvatar color={message.variant} name={message.name} />\r\n                <Typography size=\"sm\" color=\"text\" colorBrightness=\"secondary\">\r\n                  {message.time}\r\n                </Typography>\r\n              </div>\r\n              <div\r\n                className={classNames(\r\n                  classes.messageNotificationSide,\r\n                  classes.messageNotificationBodySide,\r\n                )}\r\n              >\r\n                <Typography weight=\"medium\" gutterBottom>\r\n                  {message.name}\r\n                </Typography>\r\n                <Typography color=\"text\" colorBrightness=\"secondary\">\r\n                  {message.message}\r\n                </Typography>\r\n              </div>\r\n            </MenuItem>\r\n          ))}\r\n          <Fab\r\n            variant=\"extended\"\r\n            color=\"primary\"\r\n            aria-label=\"Add\"\r\n            className={classes.sendMessageButton}\r\n          >\r\n            Send New Message\r\n            <SendIcon className={classes.sendButtonIcon} />\r\n          </Fab>\r\n        </Menu>\r\n        <Menu\r\n          id=\"notifications-menu\"\r\n          open={Boolean(notificationsMenu)}\r\n          anchorEl={notificationsMenu}\r\n          onClose={() => setNotificationsMenu(null)}\r\n          className={classes.headerMenu}\r\n          disableAutoFocusItem\r\n        >\r\n          {notifications.map(notification => (\r\n            <MenuItem\r\n              key={notification.id}\r\n              onClick={() => setNotificationsMenu(null)}\r\n              className={classes.headerMenuItem}\r\n            >\r\n              <Notification {...notification} typographyVariant=\"inherit\" />\r\n            </MenuItem>\r\n          ))}\r\n        </Menu>\r\n        <Menu\r\n          id=\"profile-menu\"\r\n          open={Boolean(profileMenu)}\r\n          anchorEl={profileMenu}\r\n          onClose={() => setProfileMenu(null)}\r\n          className={classes.headerMenu}\r\n          classes={{ paper: classes.profileMenu }}\r\n          disableAutoFocusItem\r\n        >\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography variant=\"h4\" weight=\"medium\">\r\n            {userDetails?.name}\r\n            </Typography>\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              component=\"a\"\r\n              color=\"primary\"\r\n              href=\"https://flatlogic.com\"\r\n            >\r\n                {userDetails?.email}\r\n            </Typography>\r\n          </div>\r\n          {/* <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <AccountIcon className={classes.profileMenuIcon} /> Profile\r\n          </MenuItem>\r\n          <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <AccountIcon className={classes.profileMenuIcon} /> Tasks\r\n          </MenuItem>\r\n          <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <AccountIcon className={classes.profileMenuIcon} /> Messages\r\n          </MenuItem> */}\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              color=\"primary\"\r\n              onClick={() => signOut(userDispatch, props.history)}\r\n            >\r\n              Sign Out\r\n            </Typography>\r\n          </div>\r\n        </Menu>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n","C:\\QR-code\\ui\\src\\pages\\maps\\styles.js",[],"C:\\QR-code\\ui\\src\\pages\\typography\\styles.js",[],"C:\\QR-code\\ui\\src\\pages\\notifications\\styles.js",[],"C:\\QR-code\\ui\\src\\components\\Header\\styles.js",[],"C:\\QR-code\\ui\\src\\components\\Notification\\Notification.js",[],"C:\\QR-code\\ui\\src\\pages\\icons\\Icons.js",[],"C:\\QR-code\\ui\\src\\pages\\icons\\styles.js",[],"C:\\QR-code\\ui\\src\\components\\Notification\\styles.js",[],"C:\\QR-code\\ui\\src\\components\\Sidebar\\styles.js",[],"C:\\QR-code\\ui\\src\\components\\Sidebar\\components\\Dot.js",[],"C:\\QR-code\\ui\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js",[],"C:\\QR-code\\ui\\src\\pages\\dashboard\\Locality\\Service\\parkService.js",[],"C:\\QR-code\\ui\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js",[],"C:\\QR-code\\ui\\src\\pages\\dashboard\\Locality\\Service\\httpService.js",[],"C:\\QR-code\\ui\\src\\pages\\dashboard\\Dashboard.js",["1130","1131","1132","1133","1134","1135","1136","1137","1138","1139","1140","1141","1142","1143","1144","1145","1146","1147","1148","1149","1150","1151","1152","1153","1154","1155","1156","1157"],["1158","1159"],"C:\\QR-code\\ui\\src\\pages\\dashboard\\styles.js",[],"C:\\QR-code\\ui\\src\\pages\\dashboard\\mock.js",[],"C:\\QR-code\\ui\\src\\services\\CityServices.js",[],"C:\\QR-code\\ui\\src\\pages\\dashboard\\components\\BigStat\\BigStat.js",[],"C:\\QR-code\\ui\\src\\pages\\dashboard\\components\\BigStat\\styles.js",[],"C:\\QR-code\\ui\\src\\pages\\dashboard\\Park.js",["1160","1161","1162","1163","1164","1165","1166","1167","1168","1169","1170","1171","1172","1173","1174","1175","1176","1177","1178"],"import React, { useState } from \"react\";\r\nimport {\r\n    Button, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, InputLabel, MenuItem,\r\n    TableRow, Table, List, ListItem, Checkbox, FormControlLabel,\r\n    TableHead,\r\n    TableBody, Card,\r\n    TableCell,\r\n    FormLabel, FormGroup, FormHelperText\r\n} from \"@material-ui/core\";\r\nimport ParkService from \"./Locality/Service/parkService\";\r\nimport * as Yup from 'yup';\r\nimport TicketBookingService from \"./Locality/Service/ticketBookingService\";\r\nimport { Typography } from \"../../components/Wrappers/Wrappers\";\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport { Grid, Select, TextField } from \"@material-ui/core\";\r\nimport { useFormik } from 'formik';\r\nimport { useEffect } from 'react';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: \"rgb(255, 107, 129)\",\r\n        color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 200,\r\n    },\r\n}));\r\nexport default function Park() {\r\n    const tableHeaders = ['Park Name', 'Location', 'Adult', 'Child', 'Senior Citizen Fee', 'Women Fee',\r\n        'Physically Challenged Fee', 'Camera Fee', , 'Photography Fee',\r\n         'Shooting Fee', 'Walker Fee', 'Edit', 'Delete', 'QR-Code'];\r\n    const classes = useStyles();\r\n    const [parkList, setParkList] = useState([]);\r\n    const [getParksList, setParks] = useState([]);\r\n    const [qrCode, setQrCode] = useState([]);\r\n    const [open, setOpen] = React.useState(false);\r\n    const [pg, setpg] = React.useState(0);\r\n    const [rpg, setrpg] = React.useState(5);\r\n    const [ticketBookingList, setTicketBookingList] = useState([]);\r\n    const [state, setState] = React.useState({\r\n        checkedA: true,\r\n        checkedB: true,\r\n        checkedF: true,\r\n        checkedG: true,\r\n    });\r\n    const [park, setPark] = useState({\r\n        parkName: '',\r\n        location: '',\r\n        adult: false,\r\n        child: false,\r\n        adultFee: '',\r\n        childFee: '',\r\n        seniorCitizen: false,\r\n        seniorCitizenFee: '',\r\n        women: false,\r\n        womenFee: '',\r\n        physicallyChallenged: false,\r\n        physicallyChallengedFee: '',\r\n        camera: false,\r\n        cameraFee: '',\r\n        photography: false,\r\n        photographyFee: '',\r\n        shooting: false,\r\n        shootingFee: '',\r\n        walker: false,\r\n        walkerFee: '',\r\n        startTiming: '',\r\n        endTiming: '',\r\n        note: '',\r\n    });\r\n    const [holidays, setHolidaysState] = React.useState({\r\n        mon: false,\r\n        tue: false,\r\n        wed: false,\r\n        thu: false,\r\n        fri: false,\r\n        sat: false,\r\n        sun: false,\r\n    });\r\n    const [checkboxes, setCheckboxes] = useState({\r\n        adult: false,\r\n        child: false,\r\n        seniorCitizen: false,\r\n        women: false,\r\n        physicallyChallenged: false,\r\n        camera: false,\r\n        photography: false,\r\n        shooting: false,\r\n        isCloakRoom: false,\r\n        isHolidays: false\r\n    });\r\n    const validationSchema = Yup.object().shape({\r\n        parkName: Yup.string().required('park name is required'),\r\n        location: Yup.string().required('location is required'),\r\n        adult: Yup.boolean(),\r\n        child: Yup.boolean(),\r\n        adultFee: Yup.string(),\r\n        childFee: Yup.string(),\r\n        seniorCitizen: Yup.boolean(),\r\n        seniorCitizenFee: Yup.string(),\r\n        women: Yup.boolean(),\r\n        womenFee: Yup.string(),\r\n        physicallyChallenged: Yup.boolean(),\r\n        physicallyChallengedFee: Yup.string(),\r\n        camera: Yup.boolean(),\r\n        cameraFee: Yup.string(),\r\n        photography: Yup.boolean(),\r\n        photographyFee: Yup.string(),\r\n        shooting: Yup.boolean(),\r\n        shootingFee: Yup.string(),\r\n        isCloakRoom: Yup.boolean(),\r\n        isHolidays: Yup.boolean(),\r\n        startTiming: Yup.string(),\r\n        endTiming: Yup.string(),\r\n        node: Yup.string(),\r\n    });\r\n    const handleChangePage = (event, newpage) => {\r\n        setpg(newpage);\r\n    }\r\n    const handleCheckboxChange = (event) => {\r\n        const { name, checked } = event.target;\r\n        setCheckboxes((prevCheckboxes) => ({\r\n            ...prevCheckboxes,\r\n            [name]: checked,\r\n        }));\r\n    };\r\n\r\n    const handleHolidaysChange = (event) => {\r\n        setHolidaysState({\r\n            ...holidays,\r\n            [event.target.name]: event.target.checked,\r\n        });\r\n    };\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setrpg(parseInt(event.target.value, 10));\r\n        setpg(0);\r\n    }\r\n  \r\n    useEffect(() => {\r\n       // getParkList();\r\n    //    getParks();\r\n       getProfileId();\r\n       // getQrCode()\r\n        return () => {\r\n            setParkList([]);\r\n            setQrCode([]);\r\n           \r\n        }\r\n    }, []);\r\n    \r\n    const getTicketBookingList = () => {\r\n        TicketBookingService.getAllTicketBooking().then((res) => {\r\n            setTicketBookingList(res);\r\n        }).catch((err) => {\r\n            // setError(err.message);\r\n        });\r\n    }\r\n  \r\n \r\n    const getProfileId = ()=>{\r\n        const userDetails = JSON.parse(localStorage.getItem(\"userDetail\"));\r\nconsole.log(userDetails.role)\r\n\r\n   const result = userDetails.role===\"admin\" ? null:userDetails.profileId;\r\n   console.log(result)\r\n        ParkService.addAllProfileId({profileRegistrationId:result }).then((res) => {\r\n            setParkList(res);\r\n    }).catch((err) => {\r\n        // setError(err.message);\r\n    });\r\n}\r\n    const getQrCode = (data) => {\r\n       \r\n        ParkService.qrCode(data._id).then((res) => {\r\n            \r\n            if(res){\r\n                const base64Data = res.image.replace(/^data:image\\/\\w+;base64,/, '');\r\n                const imageBuffer = Buffer.from(base64Data, 'base64');\r\n                // Create a blob URL for the binary buffer\r\n                const blob = new Blob([imageBuffer]);\r\n                const blobUrl = URL.createObjectURL(blob);\r\n                // Create a link element and trigger the download\r\n                const link = document.createElement('a');\r\n                link.href = blobUrl;\r\n                link.download = data.parkName+'.png'; // Change the file name and extension\r\n                link.click();\r\n            \r\n                // Clean up the blob URL\r\n                URL.revokeObjectURL(blobUrl);\r\n\r\n            }\r\n        }).catch((err) => {\r\n            // setError(err.message);\r\n        });\r\n    }\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const onclick = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const onSubmit = data => {\r\n        console.log(JSON.stringify(data, null, 2));\r\n    };\r\n    \r\n    const editPark = (park) => {\r\n        debugger\r\n        setPark(park);\r\n        handleOpen();\r\n        setHolidaysState({\r\n        mon: park.holidayDays.includes(\"mon\"),\r\n        tue: park.holidayDays.includes(\"tue\"),\r\n        wed: park.holidayDays.includes(\"wed\"),\r\n        thu: park.holidayDays.includes(\"thu\"),\r\n        fri: park.holidayDays.includes(\"fri\"),\r\n        sat: park.holidayDays.includes(\"sat\"),\r\n        sun: park.holidayDays.includes(\"sun\"),\r\n    })\r\n\r\n    }\r\n \r\n    const deletePark = (parkdelete) => {\r\n        if (parkdelete) {\r\n            ParkService.deletePark(parkdelete).then((res) => {\r\n                //getParkList();\r\n                getProfileId()\r\n                onSubmit()\r\n            }).catch((err) => {\r\n            });\r\n        }\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues: park,\r\n        enableReinitialize: true,\r\n        validationSchema: validationSchema,\r\n        onSubmit: (values, { resetForm }) => {\r\n            const userDetails = JSON.parse(localStorage.getItem(\"userDetail\"));\r\n            values.profileRegistrationId = userDetails.profileId;\r\n            const objectData = Object.keys(holidays).map(key => {\r\n                return holidays[key] ? key : '';\r\n            })\r\n            values.holidayDays = objectData.filter(item => item !== \"\").toString();\r\n\r\n            if (park._id) {\r\n                ParkService.upadePark(values).then((res) => {\r\n                    handleClose();\r\n                  //  getParkList();\r\n                  getProfileId();\r\n                    resetForm()\r\n                    alert(\"Park Updated Successfully.\");\r\n                }).catch((err) => {\r\n                });\r\n            }\r\n            else {\r\n                \r\n                console.log(values)\r\n                // values.holidayDays = holidays;\r\n                debugger\r\n                const objectData = Object.keys(holidays).map(key => {\r\n                    return holidays[key] ? key : '';\r\n                })\r\n                values.holidayDays = objectData.filter(item => item !== \"\").toString();\r\n\r\n                ParkService.cretePark(values).then((res) => {\r\n                    //getParkList();\r\n                    getProfileId();\r\n                    resetForm();\r\n                    handleClose();\r\n                    alert(\" Park Added Successfully.\");\r\n                    // props.history.push('/app/vendor');\r\n                })\r\n                    .catch((err) => {\r\n                        alert(err.response.data.message)\r\n                    })\r\n            }\r\n\r\n        },\r\n    });\r\n    return (\r\n        <>\r\n        \r\n            <PageTitle title=\"Park\" button={<Button\r\n                variant=\"contained\" onClick={handleOpen}\r\n                size=\"medium\"\r\n                color=\"secondary\" style={{ backgroundColor: '#ff6b81' }}> Add Park\r\n            </Button>} />\r\n            <Grid container spacing={4}>\r\n                <Grid item xs={12}>\r\n                    <Widget title=\"\" upperTitle noBodyPadding bodyClass={classes.tableOverflow}>\r\n                        <Table className=\"mb-0\">\r\n                            <TableHead >\r\n                                <TableRow>\r\n                                    {tableHeaders.map(key => (\r\n                                        <StyledTableCell key={key}>{key}</StyledTableCell>\r\n                                    ))}\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {parkList.slice(pg * rpg, pg * rpg + rpg).map((park) => (\r\n                                    <TableRow key={park._id}>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{park.parkName}</TableCell>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{park.location}</TableCell>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{park.adultFee}</TableCell>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{park.childFee}</TableCell>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{park.seniorCitizenFee}</TableCell>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{park.womenFee}</TableCell>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{park.physicallyChallengedFee}</TableCell>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{park.cameraFee}</TableCell>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{park.photographyFee}</TableCell>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{park.shootingFee}</TableCell>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{park.walkerFee}</TableCell>\r\n                                       \r\n                                        <TableCell>\r\n                                            <EditIcon style={{ cursor: 'pointer' }} onClick={() => editPark(park)} >\r\n                                            </EditIcon >\r\n                                        </TableCell>\r\n                                        <TableCell>\r\n                                            <DeleteIcon style={{ cursor: 'pointer' }} onClick={() => deletePark(park)} />\r\n                                        </TableCell>\r\n                                        <TableCell>\r\n                                        <Button variant=\"contained\" onClick={() => getQrCode(park)} size=\"medium\" color=\"secondary\" \r\n                                        style={{ backgroundColor: '#ff6b81' }}> Download </Button>\r\n                                            {/* <QrCodeIcon style={{ cursor: 'pointer' }} onClick={() => getQrCode(park)} /> */}\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                        <TablePagination\r\n                            component=\"div\"\r\n                            rowsPerPageOptions={[5, 100, 1000]}\r\n                            count={parkList.length}\r\n                            page={pg}\r\n                            onPageChange={handleChangePage}\r\n                            rowsPerPage={rpg}\r\n                            onRowsPerPageChange={handleChangeRowsPerPage}\r\n                        />\r\n                    </Widget>\r\n                </Grid>\r\n            </Grid>\r\n            <Dialog open={open} onClose={handleClose}>\r\n                <DialogTitle>Add Park</DialogTitle>\r\n                <form onSubmit={formik.handleSubmit} >\r\n                    <DialogContent style={{ width: 650 }}>\r\n                        <TextField\r\n                            style={{ width: 600 }}\r\n                            id=\"parkName\"\r\n                            name=\"parkName\"\r\n                            label=\"Park Name\"\r\n                            type=\"text\"\r\n                            onChange={formik.handleChange}\r\n                            value={formik.values.parkName}\r\n                            error={formik.touched.parkName && Boolean(formik.errors.parkName)}\r\n                            helperText={formik.touched.parkName && formik.errors.parkName}\r\n                        />\r\n                        <TextField\r\n                            style={{ width: 600 }}\r\n                            id=\"location\"\r\n                            name=\"location\"\r\n                            label=\"Location\"\r\n                            type=\"text\"\r\n                            onChange={formik.handleChange}\r\n                            value={formik.values.location}\r\n                            error={formik.touched.location && Boolean(formik.errors.location)}\r\n                            helperText={formik.touched.location && formik.errors.location}\r\n                        />\r\n                        {/* <TextField\r\n                            style={{ width: 600 }}\r\n                            id=\"adult\"\r\n                            name=\"adult\"\r\n                            label=\"Adult\"\r\n                            type=\"text\"\r\n                            onChange={formik.handleChange}\r\n                            value={formik.values.adult}\r\n                            error={formik.touched.adult && Boolean(formik.errors.adult)}\r\n                            helperText={formik.touched.adult && formik.errors.adult}\r\n                        /> */}\r\n                        {/* <TextField\r\n                            style={{ width: 600 }}\r\n                            id=\"child\"\r\n                            name=\"child\"\r\n                            label=\"Child\"\r\n                            type=\"text\"\r\n                            onChange={formik.handleChange}\r\n                            value={formik.values.child}\r\n                            error={formik.touched.child && Boolean(formik.errors.child)}\r\n                            helperText={formik.touched.child && formik.errors.child}\r\n                        /> */}\r\n                        <Grid container alignContent=\"center\" alignItems=\"center\" direction=\"row\" xs={12}>\r\n                            <Grid item xs=\"auto\" >\r\n                                <FormControlLabel style={{ width: 250 }}\r\n                                    control={<Checkbox\r\n\r\n                                        onChange={formik.handleChange}\r\n                                        value={formik.values.adult}\r\n                                        checked={formik.values.adult} name=\"adult\" />}\r\n                                    label=\"adult\"\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs>\r\n                                <TextField\r\n                                    style={{ width: 344 }}\r\n                                    id=\"adultFee\"\r\n                                    name=\"adultFee\"\r\n                                    label=\"adult Fee\"\r\n                                    type=\"text\"\r\n                                    disabled={!formik.values.adult}\r\n                                    onChange={formik.handleChange}\r\n                                    value={formik.values.adultFee}\r\n                                    error={formik.touched.adultFee && Boolean(formik.errors.adultFee)}\r\n                                    helperText={formik.touched.adultFee && formik.errors.adultFee}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container alignContent=\"center\" alignItems=\"center\" direction=\"row\" xs={12}>\r\n                            <Grid item xs=\"auto\" >\r\n                                <FormControlLabel style={{ width: 250 }}\r\n                                    control={<Checkbox\r\n                                        onChange={formik.handleChange}\r\n                                        value={formik.values.child}\r\n                                        checked={formik.values.child}\r\n                                        name=\"child\" />}\r\n                                    label=\"Child \"\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs>\r\n                                <TextField\r\n                                    style={{ width: 344 }}\r\n                                    id=\"childFee\"\r\n                                    name=\"childFee\"\r\n                                    label=\"Child Fee\"\r\n                                    type=\"text\"\r\n                                    disabled={!formik.values.child}\r\n                                    onChange={formik.handleChange}\r\n                                    value={formik.values.childFee}\r\n                                    error={formik.touched.childFee && Boolean(formik.errors.childFee)}\r\n                                    helperText={formik.touched.childFee && formik.errors.childFee}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container alignContent=\"center\" alignItems=\"center\" direction=\"row\" xs={12}>\r\n                            <Grid item xs=\"auto\" >\r\n                                <FormControlLabel style={{ width: 250 }}\r\n                                    control={<Checkbox\r\n                                        onChange={formik.handleChange}\r\n                                        value={formik.values.seniorCitizen}\r\n                                        checked={formik.values.seniorCitizen}\r\n                                        name=\"seniorCitizen\" />}\r\n                                    label=\"Senior Citizen\"\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs>\r\n                                <TextField\r\n                                    style={{ width: 344 }}\r\n                                    id=\"seniorCitizenFee\"\r\n                                    name=\"seniorCitizenFee\"\r\n                                    label=\"Senior Citizen Fee\"\r\n                                    type=\"text\"\r\n                                    disabled={!formik.values.seniorCitizen}\r\n                                    onChange={formik.handleChange}\r\n                                    value={formik.values.seniorCitizenFee}\r\n                                    error={formik.touched.seniorCitizenFee && Boolean(formik.errors.seniorCitizenFee)}\r\n                                    helperText={formik.touched.seniorCitizenFee && formik.errors.seniorCitizenFee}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container alignContent=\"center\" alignItems=\"center\" direction=\"row\" xs={12}>\r\n                            <Grid item xs=\"auto\" >\r\n                                <FormControlLabel style={{ width: 250 }}\r\n                                    control={<Checkbox\r\n                                        onChange={formik.handleChange}\r\n                                        value={formik.values.women}\r\n                                        checked={formik.values.women}\r\n                                        name=\"women\" />}\r\n                                    label=\"Women\"\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs>\r\n                                <TextField style={{ width: 344 }}\r\n                                    id=\"womenFee\"\r\n                                    name=\"womenFee\"\r\n                                    label=\"Women Fee\"\r\n                                    disabled={!formik.values.women}\r\n                                    type=\"text\"\r\n                                    onChange={formik.handleChange}\r\n                                    value={formik.values.womenFee}\r\n                                    error={formik.touched.womenFee && Boolean(formik.errors.womenFee)}\r\n                                    helperText={formik.touched.womenFee && formik.errors.womenFee}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container alignContent=\"center\" alignItems=\"center\" direction=\"row\" xs={12}>\r\n                            <Grid item xs=\"auto\">\r\n                                <FormControlLabel style={{ width: 250 }}\r\n                                    control={<Checkbox\r\n                                        onChange={formik.handleChange}\r\n                                        value={formik.values.physicallyChallenged}\r\n                                        checked={formik.values.physicallyChallenged}\r\n                                        name=\"physicallyChallenged\" />}\r\n                                    label=\"Physically Challenged\"\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs>\r\n                                <TextField style={{ width: 344 }}\r\n                                    id=\"physicallyChallengedFee\"\r\n                                    name=\"physicallyChallengedFee\"\r\n                                    label=\"Physically Challenged Fee\"\r\n                                    type=\"text\"\r\n                                    disabled={!formik.values.physicallyChallenged}\r\n                                    onChange={formik.handleChange}\r\n                                    value={formik.values.physicallyChallengedFee}\r\n                                    error={formik.touched.physicallyChallengedFee && Boolean(formik.errors.physicallyChallengedFee)}\r\n                                    helperText={formik.touched.physicallyChallengedFee && formik.errors.physicallyChallengedFee}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container alignContent=\"center\" alignItems=\"center\" direction=\"row\" xs={12}>\r\n                            <Grid item xs=\"auto\">\r\n                                <FormControlLabel style={{ width: 250 }}\r\n                                    control={<Checkbox\r\n\r\n                                        onChange={formik.handleChange}\r\n                                        value={formik.values.camera}\r\n                                        checked={formik.values.camera}\r\n                                        name=\"camera\" />}\r\n                                    label=\"Video Camera\"\r\n                                />\r\n\r\n                            </Grid>\r\n\r\n                            <Grid item xs>\r\n                                <TextField style={{ width: 344 }}\r\n                                    id=\"cameraFee\"\r\n                                    name=\"cameraFee\"\r\n                                    label=\"Camera Fee\"\r\n                                    type=\"text\"\r\n                                    disabled={!formik.values.camera}\r\n                                    onChange={formik.handleChange}\r\n                                    value={formik.values.cameraFee}\r\n                                    error={formik.touched.cameraFee && Boolean(formik.errors.cameraFee)}\r\n                                    helperText={formik.touched.cameraFee && formik.errors.cameraFee}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container alignContent=\"center\" alignItems=\"center\" direction=\"row\" xs={12}>\r\n                            <Grid item xs=\"auto\">\r\n                                <FormControlLabel style={{ width: 250 }}\r\n                                    control={<Checkbox\r\n                                        onChange={formik.handleChange}\r\n                                        value={formik.values.photography}\r\n                                        checked={formik.values.photography}\r\n                                        name=\"photography\" />}\r\n                                    label=\"Photography\"\r\n                                />\r\n\r\n                            </Grid>\r\n\r\n                            <Grid item xs>\r\n                                <TextField style={{ width: 344 }}\r\n                                    id=\"photographyFee\"\r\n                                    name=\"photographyFee\"\r\n                                    label=\"Photography Fee\"\r\n                                    type=\"text\"\r\n                                    disabled={!formik.values.photography}\r\n                                    onChange={formik.handleChange}\r\n                                    value={formik.values.photographyFee}\r\n                                    error={formik.touched.photographyFee && Boolean(formik.errors.photographyFee)}\r\n                                    helperText={formik.touched.photographyFee && formik.errors.photographyFee}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                        <Grid container alignContent=\"center\" alignItems=\"center\" direction=\"row\" xs={12}>\r\n                            <Grid item xs=\"auto\">\r\n                                <FormControlLabel style={{ width: 250 }}\r\n                                    control={<Checkbox\r\n                                        onChange={formik.handleChange}\r\n                                        value={formik.values.shooting}\r\n                                        checked={formik.values.shooting}\r\n                                        name=\"shooting\" />}\r\n                                    label=\"Shooting\"\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs>\r\n                                <TextField style={{ width: 344 }}\r\n                                    id=\"shootingFee\"\r\n                                    name=\"shootingFee\"\r\n                                    label=\"Shooting Fee\"\r\n                                    disabled={!formik.values.shooting}\r\n                                    type=\"text\"\r\n                                    onChange={formik.handleChange}\r\n                                    value={formik.values.shootingFee}\r\n                                    error={formik.touched.shootingFee && Boolean(formik.errors.shootingFee)}\r\n                                    helperText={formik.touched.shootingFee && formik.errors.shootingFee}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container alignContent=\"center\" alignItems=\"center\" direction=\"row\" xs={12}>\r\n                            <Grid item xs=\"auto\">\r\n                                <FormControlLabel style={{ width: 250 }}\r\n                                    control={<Checkbox\r\n                                        onChange={formik.handleChange}\r\n                                        value={formik.values.walker}\r\n                                        checked={formik.values.walker}\r\n                                        name=\"walker\" />}\r\n                                    label=\"Walker\"\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs>\r\n                                <TextField style={{ width: 344 }}\r\n                                    id=\"walkerFee\"\r\n                                    name=\"walkerFee\"\r\n                                    label=\"walker Fee\"\r\n                                    disabled={!formik.values.walker}\r\n                                    type=\"text\"\r\n                                    onChange={formik.handleChange}\r\n                                    value={formik.values.walkerFee}\r\n                                    error={formik.touched.walkerFee && Boolean(formik.errors.walkerFee)}\r\n                                    helperText={formik.touched.walkerFee && formik.errors.walkerFee}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                        <Grid container alignContent=\"center\" alignItems=\"center\" direction=\"row\" xs={12}>\r\n                            <Grid item xs=\"auto\">\r\n                                <FormControlLabel style={{ width: 250 }}\r\n                                    control={<Checkbox\r\n                                        onChange={formik.handleChange}\r\n                                        value={formik.values.isCloakRoom}\r\n                                        checked={formik.values.isCloakRoom}\r\n                                        name=\"isCloakRoom\" />}\r\n                                    label=\"Cloak Room Available\"\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                        <Grid container alignContent=\"center\" alignItems=\"center\" direction=\"row\" xs={12}>\r\n                            <Grid item xs=\"auto\">\r\n                                <FormControlLabel style={{ width: 250 }}\r\n                                    control={<Checkbox\r\n                                        onChange={formik.handleChange}\r\n                                        value={formik.values.isHolidays}\r\n                                        checked={formik.values.isHolidays}\r\n                                        name=\"isHolidays\" />}\r\n                                    label=\"Holidays\"\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        {formik.values.isHolidays ? (<Grid container alignContent=\"center\" alignItems=\"center\" direction=\"row\" xs={12}>\r\n                            <Grid item xs=\"auto\">\r\n                                {/* <FormControlLabel style={{ width: 250 }}\r\n                                    control={<Checkbox checked={checkboxes.isHolidays} onChange={handleCheckboxChange} name=\"isHolidays\" />}\r\n                                    label=\"Holidays\"\r\n                                /> */}\r\n                                <FormControl\r\n                                    required\r\n\r\n                                    component=\"fieldset\"\r\n                                    sx={{ m: 3 }}\r\n                                    variant=\"standard\"\r\n                                >\r\n                                    <FormLabel component=\"legend\">Selecte Holiday</FormLabel>\r\n                                    <FormGroup>\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                <Checkbox checked={holidays.mon} onChange={handleHolidaysChange} name=\"mon\" />\r\n                                            }\r\n                                            label=\"Mon\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                <Checkbox checked={holidays.tue} onChange={handleHolidaysChange} name=\"tue\" />\r\n                                            }\r\n                                            label=\"Tue\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                <Checkbox checked={holidays.wed} onChange={handleHolidaysChange} name=\"wed\" />\r\n                                            }\r\n                                            label=\"Wed\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                <Checkbox checked={holidays.thu} onChange={handleHolidaysChange} name=\"thu\" />\r\n                                            }\r\n                                            label=\"Thu\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                <Checkbox checked={holidays.fri} onChange={handleHolidaysChange} name=\"fri\" />\r\n                                            }\r\n                                            label=\"Fri\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                <Checkbox checked={holidays.sat} onChange={handleHolidaysChange} name=\"sat\" />\r\n                                            }\r\n                                            label=\"Sat\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                <Checkbox checked={holidays.sun} onChange={handleHolidaysChange} name=\"sun\" />\r\n                                            }\r\n                                            label=\"Sun\"\r\n                                        />\r\n                                    </FormGroup>\r\n\r\n                                </FormControl>\r\n                            </Grid>\r\n\r\n\r\n                        </Grid>) : ''}\r\n                        <Grid container alignContent=\"center\" alignItems=\"center\" direction=\"row\" xs={12}>\r\n                        <Grid item xs=\"auto\">\r\n                            <form className={classes.container} noValidate>\r\n                                <TextField\r\n                                    id=\"startTiming\"\r\n                                    label=\" Park Start Timing\"\r\n                                    type=\"time\"\r\n                                    defaultValue=\"07:30\"\r\n                                    className={classes.textField}\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    inputProps={{\r\n                                        step: 300, // 5 min\r\n                                    }}\r\n                                />\r\n                            </form>\r\n                        </Grid>\r\n                        <Grid item xs>\r\n                        <form className={classes.container} noValidate>\r\n                                <TextField\r\n                                    id=\"endTiming\"\r\n                                    label=\"Park End Timing\"\r\n                                    type=\"time\"\r\n                                    defaultValue=\"07:30\"\r\n                                    className={classes.textField}\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    inputProps={{\r\n                                        step: 300, // 5 min\r\n                                    }}\r\n                                />\r\n                            </form>\r\n                        </Grid>\r\n                        </Grid>\r\n                        <TextField\r\n                            style={{ width: 427 }}\r\n                            id=\"note\"\r\n                            name=\"note\"\r\n                            label=\"Note\"\r\n                            type=\"text\"\r\n                            onChange={formik.handleChange}\r\n                            value={formik.values.note}\r\n                            error={formik.touched.note && Boolean(formik.errors.note)}\r\n                            helperText={formik.touched.note && formik.errors.note}\r\n                        />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={handleClose}>Cancel</Button>\r\n                        <Button type=\"submit\" >Add</Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\n\r\n","C:\\QR-code\\ui\\src\\pages\\dashboard\\TicketBooking.js",["1179","1180","1181","1182","1183","1184","1185","1186","1187"],"import React, { useState } from \"react\";\r\nimport { Button, Card, Box } from \"@material-ui/core\";\r\nimport ParkService from \"./Locality/Service/parkService\";\r\nimport { Grid, TextField } from \"@material-ui/core\";\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { useFormik } from 'formik';\r\nimport { useEffect } from 'react';\r\nimport RemoveIcon from '@material-ui/icons/RemoveCircleOutlineRounded';\r\nimport AddIcon from '@material-ui/icons/AddCircleOutlineRounded';\r\nimport { useParams } from \"react-router-dom\";\r\nimport TicketBookingService from \"./Locality/Service/ticketBookingService\";\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\nimport ConfirmationNumberIcon from '@material-ui/icons/ConfirmationNumber';\r\nimport PaymentIcon from '@material-ui/icons/Payment';\r\nimport Loader from './Loader';\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 20,\r\n    color: 'rgb(255, 107, 129)',\r\n    fontWeight: 'bold'\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n\r\n});\r\n\r\nexport default function TicketBooking(props) {\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = useState(true);\r\n  const [ticketBooking, setTicketBooking] = useState({\r\n    parkName: '',\r\n  });\r\n  const { parkId } = useParams();\r\n  const [mobile, setMobile] = useState('');\r\n  const [ticketBookingList, setTicketBookingList] = useState([]);\r\n  const [profileRegistrationId, setProfileRegistrationId] = useState('');\r\n  var [error, setError] = useState(null);\r\n  const [fee, setFee] = useState([]);\r\n  const handleIncrement = (id) => {\r\n    setFee(prevItems =>\r\n      prevItems.map(item =>\r\n        item.id === id ? { ...item, quantity: item.quantity + 1, totalprice: (item.price * (item.quantity + 1)) } : item\r\n      )\r\n    );\r\n    // sumOfTotal();\r\n  };\r\n  const handleDecrement = (id) => {\r\n    setFee(prevItems =>\r\n      prevItems.map(item =>\r\n        item.id === id && item.quantity > 0\r\n          ? { ...item, quantity: item.quantity - 1, totalprice: (item.price * (item.quantity - 1)) }\r\n          : item\r\n      )\r\n    );\r\n\r\n  };\r\n  const getDay = () => {\r\n    const currentDate = new Date();\r\n    const currentDayNumber = currentDate.getDay();\r\n\r\n    const daysOfWeek = [\"sun\", \"mon\", \"tue\", \"wed\", \"thu\", \"fri\", \"sat\"];\r\n    const currentDayName = daysOfWeek[currentDayNumber];\r\n    return currentDayName;\r\n  }\r\n\r\n  const handleOpens = () => {\r\n    props.history.push(`/getqr/${parkId}`)\r\n  };\r\n  const sumOfTotal = () => {\r\n    console.log(JSON.stringify(fee));\r\n    const totalPrice = fee.reduce((sum, item) => sum + (item.price * item.quantity), 0);\r\n    console.log(totalPrice)\r\n  }\r\n\r\n\r\n  const Item = ({ name, price, quantity, onIncrement, onDecrement }) => {\r\n    return (\r\n      <>\r\n        {loading && <Loader />}\r\n        <Grid item xs={4}>\r\n\r\n          <div>\r\n            <h4 style={{\r\n              'overflow': 'hidden',\r\n              'text-transform': 'uppercase',\r\n              'text-overflow': 'ellipsis',\r\n              'white-space': 'break-spaces'\r\n            }}>{name}</h4>\r\n\r\n          </div>\r\n          <div>\r\n            <span> &#x20b9;{price}</span>\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <div style={{ textAlign: 'center' }}>\r\n            <RemoveIcon style={{ cursor: 'pointer', width: \"18px\", height: \"18px\", }} onClick={onDecrement} />\r\n            <span style={{ fontSize: '16px', padding: '5px' }}>{quantity}</span>\r\n            <AddIcon style={{ cursor: 'pointer', width: \"18px\", height: \"18px\", }} onClick={onIncrement} />\r\n          </div>\r\n\r\n          {/* <div>\r\n            <h4> &#x20b9;{price * quantity}</h4>\r\n          </div> */}\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n\r\n\r\n          <div style={{ textAlign: 'end' }}>\r\n            <h4> &#x20b9;{price * quantity}</h4>\r\n          </div>\r\n        </Grid>\r\n      </>\r\n\r\n\r\n\r\n    );\r\n  };\r\n  const pricePerItem = 10;\r\n  useEffect(() => {\r\n    getByIdList();\r\n    //  sumOfTotal();\r\n\r\n    return () => {\r\n\r\n    }\r\n  }, []);\r\n  function getRandomInt(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n  }\r\n\r\n  function isDate(val) {\r\n    // Cross realm comptatible\r\n    return Object.prototype.toString.call(val) === '[object Date]'\r\n  }\r\n  function isObj(val) {\r\n    return typeof val === 'object'\r\n  }\r\n  function stringifyValue(val) {\r\n    if (isObj(val) && !isDate(val)) {\r\n      return JSON.stringify(val)\r\n    } else {\r\n      return val\r\n    }\r\n  }\r\n  function buildForm({ action, params }) {\r\n    const form = document.createElement('form')\r\n    form.setAttribute('method', 'post')\r\n    form.setAttribute('action', action)\r\n\r\n    Object.keys(params).forEach(key => {\r\n      const input = document.createElement('input')\r\n      input.setAttribute('type', 'hidden')\r\n      input.setAttribute('name', key)\r\n      input.setAttribute('value', stringifyValue(params[key]))\r\n      form.appendChild(input)\r\n    })\r\n\r\n    return form\r\n  }\r\n  function post(details) {\r\n    const form = buildForm(details)\r\n    console.log(form);\r\n    document.body.appendChild(form)\r\n    form.submit()\r\n    form.remove()\r\n    setLoading(false);\r\n  }\r\n  const payment = (values) => {\r\n    TicketBookingService.paymentProcess(values).then((response) => {\r\n      var information = {\r\n        action: process.env.REACT_APP_CCAV_URL,\r\n        params: response\r\n      }\r\n\r\n      post(information);\r\n\r\n    })\r\n  }\r\n  const bookTickets = () => {\r\n\r\n\r\n    const getBookedDetails = fee.filter(feeDetails => feeDetails.quantity > 0);\r\n    const totalSum = getBookedDetails.reduce((sum, item) => sum + item.price * item.quantity, 0);\r\n    const day = getDay();\r\n    const phoneNumberRegex = /^\\d{10}$/;\r\n\r\n\r\n    if (!mobile) {\r\n      alert(\"Please enter mobile number\");\r\n      return\r\n    }\r\n    if (!phoneNumberRegex.test(mobile)) {\r\n      alert(\"Please enter valid mobile number\");\r\n      return\r\n    }\r\n    if (ticketBooking.holidayDays && ticketBooking.holidayDays.includes(day)) {\r\n      alert(\"You cant procced to book the ticket. today is holiday \");\r\n      return\r\n    }\r\n    if (getBookedDetails.length <= 0) {\r\n      alert(\"You need to select atleast one field\");\r\n      return\r\n    }\r\n\r\n    const ticketDetails = {\r\n      fee: getBookedDetails,\r\n      totalAmount: totalSum,\r\n      parkId: parkId,\r\n      parkName: ticketBooking.parkName,\r\n      mobile: mobile,\r\n      paymentStatus: \"pending\",\r\n      profileRegistrationId: profileRegistrationId,\r\n    }\r\n    setLoading(true);\r\n    TicketBookingService.creteTicketBooking(ticketDetails).then((res) => {\r\n\r\n      setMobile('');\r\n      payment({ amount: totalSum, mobile: mobile, id: res.id })\r\n\r\n    })\r\n      .catch((err) => {\r\n\r\n        alert(err.response.data.message)\r\n      })\r\n  }\r\n\r\n  const updateMobile = (event) => {\r\n    setMobile(event.target.value)\r\n  }\r\n\r\n  const getByIdList = () => {\r\n\r\n    ParkService.getParkById(parkId).then((res) => {\r\n      const park = [];\r\n      if (res) {\r\n\r\n        setLoading(false);\r\n        setProfileRegistrationId(res.profileRegistrationId);\r\n\r\n        Object.keys(res).map(key => {\r\n          if (key === \"seniorCitizen\" && res[key]) {\r\n            park.push(\r\n              { id: getRandomInt(1000, 10000), price: Number(res['seniorCitizenFee']), quantity: 0, name: 'Senior Citizen' },\r\n            )\r\n          } else if (key === \"women\" && res[key]) {\r\n            park.push(\r\n              { id: getRandomInt(1000, 10000), price: Number(res['womenFee']), quantity: 0, name: 'Women' },\r\n            )\r\n          } else if (key === \"physicallyChallenged\" && res[key]) {\r\n            park.push(\r\n              { id: getRandomInt(1000, 10000), price: Number(res['physicallyChallengedFee']), quantity: 0, name: 'Physically Challenged' },\r\n            )\r\n          } else if (key === \"camera\" && res[key]) {\r\n            park.push(\r\n              { id: getRandomInt(1000, 10000), price: Number(res['cameraFee']), quantity: 0, name: 'Camera' },\r\n            )\r\n          }\r\n          else if (key === \"photography\" && res[key]) {\r\n            park.push(\r\n              { id: getRandomInt(1000, 10000), price: Number(res['photographyFee']), quantity: 0, name: 'Photography' },\r\n            )\r\n          } else if (key === \"shooting\" && res[key]) {\r\n            park.push(\r\n              { id: getRandomInt(1000, 10000), price: Number(res['shootingFee']), quantity: 0, name: 'shooting' },\r\n            )\r\n          }\r\n          else if (key === \"walker\" && res[key]) {\r\n            park.push(\r\n              { id: getRandomInt(1000, 10000), price: Number(res['walkerFee']), quantity: 0, name: 'walker' },\r\n            )\r\n          } else if (key === \"adult\" && res[key]) {\r\n            park.push(\r\n              { id: getRandomInt(1000, 10000), price: Number(res['adultFee']), quantity: 0, name: 'adult' },\r\n            )\r\n          } else if (key === \"child\" && res[key]) {\r\n            park.push(\r\n              { id: getRandomInt(1000, 10000), price: Number(res['childFee']), quantity: 0, name: 'child' },\r\n            )\r\n          }\r\n\r\n        }\r\n\r\n\r\n\r\n        )\r\n\r\n        setFee(park);\r\n        setTicketBooking(res);\r\n\r\n      }\r\n\r\n\r\n\r\n    }).catch((err) => {\r\n      setError(err.message);\r\n    });\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: ticketBooking,\r\n    enableReinitialize: true,\r\n    // validationSchema: validationSchema,\r\n    onSubmit: (values, { resetForm }) => {\r\n      //   SchooleRegistrationService.creteSchooleRegistration(values).then((res) => {\r\n\r\n      //     alert(\" Registration Successfully.\");\r\n      //     props.history.push('/montessori/login');\r\n      //   })\r\n      //     .catch((err) => {\r\n      //       alert(err.response.data.message);\r\n      //     })\r\n    },\r\n  });\r\n\r\n  const totalSum = fee.reduce((sum, item) => sum + item.price * item.quantity, 0);\r\n\r\n  return (\r\n    <>\r\n\r\n\r\n\r\n      <Box   >\r\n        <Grid container\r\n          spacing={0}\r\n          direction=\"column\"\r\n          alignItems=\"center\"\r\n\r\n          style={{ minHeight: '100vh' }}>\r\n          <form onSubmit={formik.handleSubmit} class=\"form\" style={{ width: '100%', margin: '15px' }} >\r\n            <div >\r\n              <Card >\r\n                <CardHeader\r\n                  avatar={\r\n\r\n                    <LocationOnIcon style={{ color: 'rgb(255, 107, 129)', fontSize: 25 }} />\r\n\r\n                  }\r\n\r\n\r\n                  // action={\r\n                  //   <IconButton aria-label=\"settings\">\r\n\r\n                  //   </IconButton>\r\n                  // }\r\n                  // titleTypographyProps={{variant:'h6' }}\r\n\r\n                  classes={{\r\n                    title: classes.title\r\n                  }}\r\n                  title=\"Booking For\"\r\n\r\n                />\r\n                {/* <Grid item xs={12}>\r\n                    <PageTitle title=\"Ticket Booking\" />\r\n                  </Grid> */}\r\n                <CardContent>\r\n                  {(ticketBooking?.isCloakRoom || ticketBooking?.isHolidays || ticketBooking?.holidayDays) ? <Grid item xs={12}>\r\n                    <h4> Note: <span style={{\r\n                      'color': \"#0a88e4\",\r\n                      'font-size': \"13px\"\r\n                    }}>\r\n                      {ticketBooking?.isCloakRoom ? <span>1.Cloak room Avilable</span> : ''},{ticketBooking?.isHolidays ? <span>2.Holidays on {ticketBooking?.holidayDays}</span> : ''}\r\n                    </span></h4>\r\n\r\n                  </Grid> : ''}\r\n\r\n                  <Grid item xs={12} >\r\n                    <TextField\r\n\r\n                      margin=\"dense\"\r\n                      id=\"parkName\"\r\n                      name=\"parkName\"\r\n                      value={ticketBooking.parkName}\r\n                      label=\"Name Of The Park\"\r\n                      type=\"text\"\r\n                      variant=\"outlined\"\r\n                      style={{ width: '100%' }}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <TextField autoFocus\r\n                      style={{ width: '100%' }}\r\n                      margin=\"dense\"\r\n                      id=\"mobile\"\r\n                      name=\"mobile\"\r\n                      value={mobile}\r\n                      onChange={updateMobile}\r\n                      label=\"Enter Mobile Number\"\r\n                      type=\"text\"\r\n                      variant=\"outlined\"\r\n\r\n                    />\r\n                  </Grid>\r\n                </CardContent>\r\n\r\n\r\n              </Card>\r\n            </div>\r\n            <div style={{ marginTop: \"2%\" }}>\r\n              <Card >\r\n\r\n                <CardHeader\r\n                  avatar={\r\n\r\n                    <ConfirmationNumberIcon style={{ color: 'rgb(255, 107, 129)', fontSize: 25 }} />\r\n\r\n                  }\r\n                  classes={{\r\n                    title: classes.title\r\n                  }}\r\n                  title=\"Entry Tickets\"\r\n\r\n                />\r\n                <CardContent>\r\n                  <Grid container >\r\n                    {fee.map(item => (\r\n                      <Item\r\n                        key={item.id}\r\n                        name={item.name}\r\n                        price={item.price}\r\n                        quantity={item.quantity}\r\n                        onIncrement={() => handleIncrement(item.id)}\r\n                        onDecrement={() => handleDecrement(item.id)}\r\n                      />\r\n                    ))}\r\n                  </Grid>\r\n                </CardContent>\r\n\r\n\r\n              </Card>\r\n            </div>\r\n            <div style={{ marginTop: \"2%\" }}>\r\n              <Card >\r\n\r\n                <CardHeader\r\n                  avatar={\r\n\r\n                    <PaymentIcon style={{ color: 'rgb(255, 107, 129)', fontSize: 25 }} />\r\n\r\n                  }\r\n                  classes={{\r\n                    title: classes.title\r\n                  }}\r\n                  title=\"Summary\"\r\n\r\n                />\r\n                <CardContent>\r\n                  <Grid container spacing={3}>\r\n                    <Grid item xs={6}>\r\n                      <h4> Sub Total:</h4>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                      <div style={{ textAlign: 'end' }}>\r\n                        <h3>  &#x20b9;  {totalSum}.00</h3>\r\n                      </div>\r\n\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n\r\n\r\n                </CardContent>\r\n              </Card>\r\n            </div>\r\n            <div style={{ marginTop: \"2%\" }}>\r\n              <Grid item xs={12}>\r\n                <div style={{ textAlign: 'left' }}>\r\n                  {/* <a href=\"javascript:void(0)\" class=\"btn\" ><i class=\"lni lni-apple\"></i> Book More Tickets</a> */}\r\n                  {/* <PublicRoute path=\"/ticketbooking/:parkId\" component={TicketBooking} /> */}\r\n\r\n                  <a style={{ fontWeight: 'bold', color: '#ff6b81', fontSize: 'large' }} href=\"javascript:void(0)\" onClick={handleOpens} class=\"page-scroll active\"> Get QR</a>\r\n                </div>\r\n              </Grid>\r\n            </div>\r\n\r\n            <div style={{ marginTop: \"2%\" }}>\r\n              <Grid item xs={12}>\r\n                <div style={{ textAlign: 'center' }}>\r\n                  <Button style={{ backgroundColor: 'rgb(255, 107, 129)', color: 'white', marginBottom: '20px' }} onClick={bookTickets} variant=\"contained\" >Book</Button>\r\n                </div>\r\n              </Grid>\r\n            </div>\r\n          </form>\r\n        </Grid>\r\n      </Box>\r\n\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n","C:\\QR-code\\ui\\src\\pages\\dashboard\\Locality\\Service\\ticketBookingService.js",[],"C:\\QR-code\\ui\\src\\pages\\dashboard\\BookingReport.js",["1188","1189","1190","1191","1192","1193","1194","1195","1196","1197","1198","1199","1200","1201","1202","1203","1204","1205","1206","1207","1208","1209","1210","1211","1212","1213","1214","1215","1216","1217","1218","1219","1220","1221","1222","1223","1224","1225","1226","1227","1228","1229","1230"],"import React, { useState } from \"react\";\r\nimport {\r\n    Button, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, InputLabel, MenuItem,\r\n    TableRow, Table, List, ListItem, Checkbox, FormControlLabel,\r\n    TableHead,\r\n    TableBody, Card,\r\n    TableCell,\r\n    FormLabel, FormGroup, FormHelperText\r\n} from \"@material-ui/core\";\r\nimport ParkService from \"./Locality/Service/parkService\";\r\nimport * as Yup from 'yup';\r\nimport TicketBookingService from \"./Locality/Service/ticketBookingService\";\r\nimport { Typography } from \"../../components/Wrappers/Wrappers\";\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport { Grid, Select, TextField } from \"@material-ui/core\";\r\nimport { useFormik } from 'formik';\r\nimport { useEffect } from 'react';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: \"rgb(255, 107, 129)\",\r\n        color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 200,\r\n    },\r\n}));\r\nexport default function BookingReport() {\r\n    const tableHeaders = ['Park Name', 'Booking Details', 'Total', 'Mobile'];\r\n    const classes = useStyles();\r\n    const [ticketBooking, setTicketBooking] = useState([]);\r\n    const [parkList, setParkList] = useState([]);\r\n    const [qrCode, setQrCode] = useState([]);\r\n    const [open, setOpen] = React.useState(false);\r\n    const [pg, setpg] = React.useState(0);\r\n    const [rpg, setrpg] = React.useState(5);\r\n    const [ticketBookingList, setTicketBookingList] = useState([]);\r\n    \r\n    const [state, setState] = React.useState({\r\n        checkedA: true,\r\n        checkedB: true,\r\n        checkedF: true,\r\n        checkedG: true,\r\n    });\r\n    const [park, setPark] = useState({\r\n        parkName: '',\r\n        location: '',\r\n        adult: false,\r\n        child: false,\r\n        adultFee: '',\r\n        childFee: '',\r\n        seniorCitizen: false,\r\n        seniorCitizenFee: '',\r\n        women: false,\r\n        womenFee: '',\r\n        physicallyChallenged: false,\r\n        physicallyChallengedFee: '',\r\n        camera: false,\r\n        cameraFee: '',\r\n        photography: false,\r\n        photographyFee: '',\r\n        shooting: false,\r\n        shootingFee: '',\r\n        walker: false,\r\n        walkerFee: '',\r\n        startTiming: '',\r\n        endTiming: '',\r\n        note: '',\r\n    });\r\n    const [holidays, setHolidaysState] = React.useState({\r\n        mon: false,\r\n        tue: false,\r\n        wed: false,\r\n        thu: false,\r\n        fri: false,\r\n        sat: false,\r\n        sun: false,\r\n    });\r\n    const [checkboxes, setCheckboxes] = useState({\r\n        adult: false,\r\n        child: false,\r\n        seniorCitizen: false,\r\n        women: false,\r\n        physicallyChallenged: false,\r\n        camera: false,\r\n        photography: false,\r\n        shooting: false,\r\n        isCloakRoom: false,\r\n        isHolidays: false\r\n    });\r\n    const validationSchema = Yup.object().shape({\r\n        parkName: Yup.string().required('park name is required'),\r\n        location: Yup.string().required('location is required'),\r\n        adult: Yup.boolean(),\r\n        child: Yup.boolean(),\r\n        adultFee: Yup.string(),\r\n        childFee: Yup.string(),\r\n        seniorCitizen: Yup.boolean(),\r\n        seniorCitizenFee: Yup.string(),\r\n        women: Yup.boolean(),\r\n        womenFee: Yup.string(),\r\n        physicallyChallenged: Yup.boolean(),\r\n        physicallyChallengedFee: Yup.string(),\r\n        camera: Yup.boolean(),\r\n        cameraFee: Yup.string(),\r\n        photography: Yup.boolean(),\r\n        photographyFee: Yup.string(),\r\n        shooting: Yup.boolean(),\r\n        shootingFee: Yup.string(),\r\n        isCloakRoom: Yup.boolean(),\r\n        isHolidays: Yup.boolean(),\r\n        startTiming: Yup.string(),\r\n        endTiming: Yup.string(),\r\n        node: Yup.string(),\r\n    });\r\n    const handleChangePage = (event, newpage) => {\r\n        setpg(newpage);\r\n    }\r\n    const handleCheckboxChange = (event) => {\r\n        const { name, checked } = event.target;\r\n        setCheckboxes((prevCheckboxes) => ({\r\n            ...prevCheckboxes,\r\n            [name]: checked,\r\n        }));\r\n    };\r\n\r\n    const handleHolidaysChange = (event) => {\r\n        setHolidaysState({\r\n            ...holidays,\r\n            [event.target.name]: event.target.checked,\r\n        });\r\n    };\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setrpg(parseInt(event.target.value, 10));\r\n        setpg(0);\r\n    }\r\n    useEffect(() => {\r\n        // getTicketBookingList();\r\n        getProfileIdList();\r\n        // getQrCode()\r\n        return () => {\r\n              setTicketBookingList([]);\r\n        }\r\n    }, []);\r\n\r\n    const getTicketBookingList = () => {\r\n        TicketBookingService.getAllTicketBooking().then((res) => {\r\n            setTicketBookingList(res);\r\n        }).catch((err) => {\r\n            // setError(err.message);\r\n        });\r\n    }\r\n    const getProfileIdList = ()=>{\r\n        const userDetails = JSON.parse(localStorage.getItem(\"userDetail\"));\r\nconsole.log(userDetails.role)\r\n\r\n   const result = userDetails.role===\"admin\" ? null:userDetails.profileId;\r\n   console.log(result)\r\n\r\n   TicketBookingService.getAllProfileId({profileRegistrationId:result }).then((res) => {\r\n            setTicketBookingList(res);\r\n            \r\n    }).catch((err) => {\r\n        // setError(err.message);\r\n    });\r\n}\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const onclick = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const onSubmit = data => {\r\n        console.log(JSON.stringify(data, null, 2));\r\n    };\r\n    return (\r\n        <>\r\n            <PageTitle title=\"Booking Reports\" />\r\n            <Grid container spacing={4}>\r\n                <Grid item xs={12}>\r\n                    <Widget title=\"\" upperTitle noBodyPadding bodyClass={classes.tableOverflow}>\r\n                        <Table className=\"mb-0\">\r\n                            <TableHead >\r\n                                <TableRow>\r\n                                    {tableHeaders.map(key => (\r\n                                        <StyledTableCell key={key}>{key}</StyledTableCell>\r\n                                    ))}\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {ticketBookingList.slice(pg * rpg, pg * rpg + rpg).map((ticketBooking, bookingReport) => (\r\n                                    <TableRow key={ticketBooking._id}>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{ticketBooking.parkId?.parkName}</TableCell>\r\n                                        <TableCell>\r\n                                            <TableBody>\r\n                                                {ticketBooking.fee.map((item, subIndex) => (\r\n                                                    <TableRow>\r\n                                                        <TableCell className=\"pl-3 fw-normal\">\r\n                                                            <span >{item.name}</span>\r\n                                                        </TableCell>\r\n                                                        <TableCell className=\"pl-3 fw-normal\">\r\n                                                            <span >{item.price}</span>\r\n                                                        </TableCell>\r\n                                                        <TableCell className=\"pl-3 fw-normal\">\r\n                                                            <span  >{item.quantity}</span>\r\n                                                        </TableCell>\r\n                                                        <TableCell className=\"pl-3 fw-normal\">\r\n                                                            <span  >{item.totalprice}</span>\r\n                                                        </TableCell>\r\n                                                    </TableRow>\r\n\r\n                                                ))\r\n\r\n                                                }\r\n\r\n                                            </TableBody>\r\n                                        </TableCell>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{ticketBooking.totalAmount}</TableCell>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{ticketBooking.mobile}</TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                        <TablePagination\r\n                            component=\"div\"\r\n                            rowsPerPageOptions={[5, 100, 1000]}\r\n                            count={ticketBookingList.length}\r\n                            page={pg}\r\n                            onPageChange={handleChangePage}\r\n                            rowsPerPage={rpg}\r\n                            onRowsPerPageChange={handleChangeRowsPerPage}\r\n                        />\r\n                    </Widget>\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </>\r\n    );\r\n\r\n}\r\n\r\n\r\n","C:\\QR-code\\ui\\src\\pages\\dashboard\\ProfileRegistration.js",["1231","1232","1233","1234","1235","1236","1237","1238","1239","1240","1241","1242","1243","1244","1245","1246","1247","1248","1249","1250","1251","1252","1253","1254","1255","1256","1257","1258","1259","1260","1261","1262","1263","1264","1265","1266","1267","1268","1269","1270","1271","1272","1273","1274","1275","1276","1277","1278","1279","1280","1281","1282","1283","1284","1285","1286"],"import React, { useState } from \"react\";\r\nimport {\r\n  LinearProgress,\r\n  OutlinedInput,\r\n} from \"@material-ui/core\";\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport {\r\n  Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, FormControl, InputLabel, MenuItem,\r\n  TableRow, Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableCell\r\n} from \"@material-ui/core\";\r\nimport ProfileRegistrationService from \"./Locality/Service/profileRegistrationService\"\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport { Grid, Card, Box, Select, TextField } from \"@material-ui/core\";\r\nimport { useFormik } from 'formik';\r\nimport { useContext, useEffect } from 'react';\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport {\r\n  ResponsiveContainer,\r\n  ComposedChart,\r\n  AreaChart,\r\n  LineChart,\r\n  Line,\r\n  Area,\r\n  PieChart,\r\n  Pie,\r\n  Cell,\r\n  YAxis,\r\n  XAxis,\r\n} from \"recharts\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as Yup from 'yup';\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport mock from \"./mock\";\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { Typography } from \"../../components/Wrappers/Wrappers\";\r\nimport Dot from \"../../components/Sidebar/components/Dot\";\r\nimport BigStat from \"./components/BigStat/BigStat\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\nexport default function ProfileSRegistration(props) {\r\n  const classes = useStyles();\r\n  const [age, setAge] = React.useState('');\r\n\r\n  var [error, setError] = useState(null);\r\n  const [constituencyList, setConstituencyList] = useState([]);\r\n  const [partyList, setPartyList] = useState([]);\r\n  const [profileRegistrationList, setProfileRegistrationList] = useState([]);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [districtList, setDistrictList] = useState([]);\r\n  const [password, setPassword] = useState('');\r\n  const [passwordError, setPasswordError] = useState('');\r\n  const [profileRegistration, setProfileRegistration] = useState({\r\n    registrationType:'park',\r\n    location: '',\r\n    name: '',\r\n    email: '',\r\n    personName:'',\r\n    mobileNumber1: '',\r\n    mobileNumber2: '',\r\n    password: '',\r\n  });\r\n  const handleChange = (event) => {\r\n    setAge(event.target.value);\r\n};\r\n  const validationSchema = Yup.object().shape({\r\n    location: Yup.string().required('location  is required'),\r\n    registrationType:Yup.string().required('Registration Type  is required'),\r\n    name: Yup.string().required('orgnaization name is required'),\r\n    email: Yup.string().required('email is required'),\r\n    personName: Yup.string().required('Name is required'),\r\n    mobileNumber1: Yup.string().required()\r\n      .matches(/^[0-9]+$/, \"Must be only digits\")\r\n      .min(10, 'Must be exactly 10 digits')\r\n      .max(10, 'Must be exactly 10 digits'),\r\n      mobileNumber2: Yup.string()\r\n      .matches(/^[0-9]+$/, \"Must be only digits\")\r\n      .min(10, 'Must be exactly 10 digits')\r\n      .max(10, 'Must be exactly 10 digits'),\r\n      password: Yup.string().required('password is required'),\r\n  });\r\n  const handlePasswordChange = (event) => {\r\n    setPassword(event.target.value);\r\n  };\r\n\r\n \r\n\r\n  const handleFormSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n  };\r\n  const getProfileRegistrationList = () => {\r\n    ProfileRegistrationService.getAllProfileRegistration().then((res) => {\r\n      setProfileRegistrationList(res);\r\n    }).catch((err) => {\r\n      setError(err.message);\r\n    });\r\n  }\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  useEffect(() => {\r\n    return () => {\r\n    }\r\n}, []);\r\n\r\n  const formik = useFormik({\r\n    initialValues: profileRegistration,\r\n    enableReinitialize: true,\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values, { resetForm }) => {\r\n        ProfileRegistrationService.creteProfileRegistration(values).then((res) => {\r\n\r\n        alert(\" Registration Successfully.\");\r\n         props.history.push('/sriqr/login');\r\n      })\r\n        .catch((err) => {\r\n          alert(err.response.data.message)\r\n        })\r\n    },\r\n  });\r\n\r\n\r\n  return (\r\n\r\n    <>\r\n        <Grid item xs={12}>\r\n          <Card sx={{ maxWidth: 345 }}>\r\n            <Box   >\r\n              \r\n              <div style={{ marginLeft: \"7%\" }}>\r\n                <form onSubmit={formik.handleSubmit} >\r\n                \r\n                  <Grid container spacing={2} columns={12} >\r\n                    <Grid item xs={12}>\r\n                      <PageTitle InputProps={{ style: { color: '#10b680' } }} title=\"Profile Registration\" >aaaaa</PageTitle>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={6}>\r\n                    <FormControl>\r\n      <FormLabel id=\"demo-row-radio-buttons-group-label\">Select Registration Type</FormLabel>\r\n      <RadioGroup\r\n        row\r\n        name=\"registrationType\" \r\n        margin=\"dense\"\r\n      id=\"registrationType\" \r\n       type=\"radio\"\r\n      variant=\"standard\"\r\n      value={formik.values.registrationType}\r\n      onChange={formik.handleChange}\r\n      error={formik.touched.registrationType && Boolean(formik.errors.registrationType)}\r\n      helperText={formik.touched.registrationType && formik.errors.registrationType}\r\n   \r\n      >\r\n        <FormControlLabel name=\"registrationType\" value=\"park\" control={<Radio />} label=\"Park\" />\r\n        <FormControlLabel name=\"registrationType\" value=\"coaching\" control={<Radio />} label=\"Coaching\" />\r\n        \r\n      </RadioGroup>\r\n    </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={6}>\r\n                      <TextField\r\n                        InputProps={{ style: { width: 370 } }}\r\n                        margin=\"dense\"\r\n                        id=\"name\"\r\n                        name=\"name\"\r\n                        label=\"Name of the business entity \"\r\n                        type=\"text\"\r\n                        variant=\"standard\"\r\n                        value={formik.values.name}\r\n                        onChange={formik.handleChange}\r\n                        error={formik.touched.name && Boolean(formik.errors.name)}\r\n                        helperText={formik.touched.name && formik.errors.name}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={6}>\r\n                      <TextField\r\n                        InputProps={{ style: { width: 370 } }}\r\n                        margin=\"dense\"\r\n                        id=\"location\"\r\n                        name=\"location\"\r\n                        label=\"Location\"\r\n                        type=\"text\"\r\n                        variant=\"standard\"\r\n                        value={formik.values.location}\r\n                        onChange={formik.handleChange}\r\n                        error={formik.touched.location && Boolean(formik.errors.location)}\r\n                        helperText={formik.touched.location && formik.errors.location}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={6}>\r\n                      <TextField\r\n                        InputProps={{ style: { width: 370 } }}\r\n                        margin=\"dense\"\r\n                        id=\"personName\"\r\n                        name=\"personName\"\r\n                        label=\"Name\"\r\n                        type=\"text\"\r\n                        variant=\"standard\"\r\n                        value={formik.values.personName}\r\n                        onChange={formik.handleChange}\r\n                        error={formik.touched.name && Boolean(formik.errors.personName)}\r\n                        helperText={formik.touched.personName && formik.errors.personName}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={6}>\r\n                      <TextField\r\n                        InputProps={{ style: { width: 370 } }}\r\n\r\n                        margin=\"dense\"\r\n                        id=\"mobileNumber1\"\r\n                        name=\"mobileNumber1\"\r\n                        label=\"Mobile Number-1\"\r\n                        type=\"text\"\r\n                        variant=\"standard\"\r\n                        value={formik.values.mobileNumber1}\r\n                        onChange={formik.handleChange}\r\n                        error={formik.touched.mobileNumber1 && Boolean(formik.errors.mobileNumber1)}\r\n                        helperText={formik.touched.mobileNumber1 && formik.errors.mobileNumber1}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={6}>\r\n                      <TextField\r\n                        InputProps={{ style: { width: 370 } }}\r\n\r\n                        margin=\"dense\"\r\n                        id=\"mobileNumber2\"\r\n                        name=\"mobileNumber2\"\r\n                        label=\"Mobile Number-2\"\r\n                        type=\"text\"\r\n                        variant=\"standard\"\r\n                        value={formik.values.mobileNumber2}\r\n                        onChange={formik.handleChange}\r\n                        error={formik.touched.mobileNumber2 && Boolean(formik.errors.mobileNumber2)}\r\n                        helperText={formik.touched.mobileNumber2 && formik.errors.mobileNumber2}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={6}>\r\n                      <TextField\r\n                        InputProps={{ style: { width: 370 } }}\r\n                        margin=\"dense\"\r\n                        id=\"email\"\r\n                        name=\"email\"\r\n                        label=\"Email ID \"\r\n                        type=\"Email ID\"\r\n                        variant=\"standard\"\r\n                        value={formik.values.email}\r\n                        onChange={formik.handleChange}\r\n                        error={formik.touched.email && Boolean(formik.errors.email)}\r\n                        helperText={formik.touched.email && formik.errors.email}\r\n                      />\r\n                    </Grid>\r\n                  \r\n                    <Grid item xs={12} sm={12} md={6}>\r\n                      <TextField\r\n                        id=\"password\"\r\n                        InputProps={{ style: { width: 370 } }}\r\n                        margin=\"normal\"\r\n                        label=\"Password  \"\r\n                        // placeholder=\"Password\"\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        value={formik.values.password}\r\n                        onChange={formik.handleChange}\r\n                        error={formik.touched.password && Boolean(formik.errors.password)}\r\n                        helperText={formik.touched.password && formik.errors.password}\r\n                      />\r\n                    </Grid>\r\n                  \r\n                  </Grid>\r\n                  <Grid item xs={6} style={{ textAlign: 'right', margin: '29px' }}>\r\n                    <Button style={{ backgroundColor: '#ff6b81', color: 'white' }} type=\"submit\" variant=\"contained\" >Submit</Button>\r\n                    </Grid>\r\n\r\n                </form>\r\n              </div>\r\n            </Box>\r\n\r\n          </Card>\r\n       \r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n","C:\\QR-code\\ui\\src\\pages\\dashboard\\Locality\\Service\\profileRegistrationService.js",[],"C:\\QR-code\\ui\\src\\pages\\home\\Home.js",["1287","1288","1289","1290","1291","1292","1293","1294","1295","1296","1297","1298","1299","1300","1301","1302","1303","1304","1305","1306","1307","1308","1309","1310","1311","1312","1313","1314","1315","1316","1317","1318","1319","1320","1321","1322","1323","1324","1325","1326","1327","1328","1329","1330","1331","1332","1333","1334","1335","1336","1337","1338","1339","1340","1341","1342","1343","1344","1345","1346","1347","1348","1349","1350"],"import React, { useState } from \"react\";\r\nimport { Grid, CircularProgress, Typography, Tabs, Tab, TextField, Fade, } from \"@material-ui/core\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { loginUser } from \"../../context/UserContext\";\r\nimport { withRouter } from \"react-router-dom\";\r\n// import useStyles from \"./styles\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Footer from \"../../pages/home/Footer\"\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport {\r\n    Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, FormControl, InputLabel, MenuItem,\r\n    TableRow, Table,\r\n    TableHead,\r\n    TableBody,\r\n    TableCell\r\n} from \"@material-ui/core\";\r\nimport ParkService from \"../dashboard/Locality/Service/parkService\";\r\nimport { Card, Box, Select } from \"@material-ui/core\";\r\nimport PhoneIcon from '@material-ui/icons/Phone';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\nimport SRI from './images/SRI.jpg';\r\nimport CachedIcon from '@material-ui/icons/Cached';\r\nimport PhonelinkLockIcon from '@material-ui/icons/PhonelinkLock';\r\nimport PaymentIcon from '@material-ui/icons/Payment';\r\n// import PaymentsIcon from '@material-ui/icons/Payments';\r\n// import CleaningServicesIcon from '@material-ui/icons/CleaningServices';\r\nimport AcUnitIcon from '@material-ui/icons/AcUnit';\r\nimport home from './images/homeimg.jpg';\r\nimport { Link } from \"react-router-dom\";\r\nimport { useUserDispatch, } from \"../../context/UserContext\";\r\nimport './styles/bootstrap.min.css';\r\nimport './styles/animate.css';\r\nimport { useContext, useEffect } from 'react';\r\nimport './styles/tiny-slider.css';\r\n\r\nimport './styles/glightbox.min.css';\r\nimport './styles/main.css';\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 200,\r\n    },\r\n}));\r\n\r\n\r\nfunction Home(props) {\r\n    const [age, setAge] = React.useState('');\r\n    var classes = useStyles();\r\n    var userDispatch = useUserDispatch();\r\n    const [parkList, setParkList] = useState([]);\r\n    const [parkId, setParkId] = useState(\"\");\r\n    const [parkName, setParkName] = useState(\"\");\r\n    var [isLoading, setIsLoading] = useState(false);\r\n    var [error, setError] = useState(null);\r\n    var [activeTabId, setActiveTabId] = useState(0);\r\n    var [loginValue, setLoginValue] = useState(\"\");\r\n    var [passwordValue, setPasswordValue] = useState(\"\");\r\n    var [roleValue, setRoleValue] = useState(\"\");   \r\n    const handleOpen = () => {\r\n        props.history.push('/sriqr/login')\r\n    };\r\n    const handleChange=()=>{\r\n        props.history.push('/sriqr/profileregistration') \r\n    }\r\n    useEffect(() => {\r\n        getParkList();\r\n        return () => {\r\n            setParkList([]);\r\n        }\r\n    }, []);\r\n    const getParkList = () => {\r\n        ParkService.getAllPark().then((res) => {\r\n            setParkList(res);\r\n\r\n        }).catch((err) => {\r\n            // setError(err.message);\r\n        });\r\n    }\r\n    const [isOpen, setIsOpen] = React.useState(false);\r\n\r\n  const toggleNavbar = () => {\r\n    \r\n    setIsOpen(!isOpen);\r\n  };\r\n    const handleRedirect = () => {\r\n        \r\n        props.history.push(`ticketbooking/${parkId}/${parkName}`)\r\n    };\r\n    return (\r\n        <>\r\n            <header class=\"header navbar-area sticky\">\r\n                <div class=\"container\">\r\n                    <div class=\"row align-items-center\">\r\n                        <div class=\"col-lg-12\">\r\n                            <div class=\"nav-inner\">\r\n\r\n                                <nav class=\"navbar navbar-expand-lg\">\r\n                                    <a class=\"navbar-brand\" href=\"index.html\">\r\n                                        {/* <img src=\"assets/images/logo/white-logo.svg\" alt=\"Logo\"/> */}\r\n                                        <img src={SRI} alt=\"some example image\" style={{ height: \"70px\", width: \"70px\" }} />\r\n                                        {/* <img src=\"home/images/SRIQR.COM LOGO JPG.jpg\" alt=\"Sriqr.com\"/> */}\r\n\r\n                                    </a>\r\n                                    <button class=\"navbar-toggler mobile-menu-btn\" onClick={toggleNavbar} type=\"button\" data-bs-toggle=\"collapse\"\r\n                                        data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\r\n                                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                                        <span class=\"toggler-icon\"></span>\r\n                                        <span class=\"toggler-icon\"></span>\r\n                                        <span class=\"toggler-icon\"></span>\r\n                                    </button>\r\n                                 {isOpen? <div class=\" navbar-collapse sub-menu-bar\" id=\"navbarSupportedContent\">\r\n                                        <ul id=\"nav\" class=\"navbar-nav ms-auto\">\r\n                                            <li class=\"nav-item\">\r\n                                                <a href=\"#home\" class=\"page-scroll active\"\r\n                                                    aria-label=\"Toggle navigation\">Home</a>\r\n                                            </li>\r\n                                            <li class=\"nav-item\">\r\n                                                <a href=\"#javascript:void(0)\" onClick={handleChange} class=\"page-scroll active\"\r\n                                                    aria-label=\"Toggle navigation\">Profile Registration</a>\r\n                                            </li>\r\n                                            <li class=\"nav-item\">\r\n                                <a href=\"javascript:void(0)\" onClick={handleOpen} class=\"page-scroll active\"> Admin Login</a>\r\n                            </li>\r\n                                        </ul>\r\n                                    </div>:<div class=\"collapse navbar-collapse sub-menu-bar\" id=\"navbarSupportedContent\">\r\n                                        <ul id=\"nav\" class=\"navbar-nav ms-auto\">\r\n                                            <div class=\"nav-item\">\r\n                                                <a href=\"#home\" class=\"page-scroll active\"\r\n                                                    aria-label=\"Toggle navigation\">Home</a>\r\n                                            </div>\r\n                                            <div class=\"nav-item\">\r\n                                            <a href=\"javascript:void(0)\" onClick={handleOpen} class=\"page-scroll active\"> Admin Login</a>\r\n                                            </div>\r\n                                            <div class=\"nav-item\">\r\n                                                <a href=\"javascript:void(0)\" onClick={handleChange} class=\"page-scroll active\"\r\n                                                    aria-label=\"Toggle navigation\">Profile Registration</a>\r\n                                            </div>\r\n                                       \r\n                                        </ul>\r\n                                    </div>}\r\n                                   \r\n                                    {/* <div class=\"button add-list-button\">\r\n                                        <a href=\"javascript:void(0)\" onClick={handleOpen} class=\"btn\">aaAdmin Login</a>\r\n                                    </div> */}\r\n                                </nav>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n\r\n            <section id=\"home\" class=\"hero-area\">\r\n                <div class=\"container\">\r\n                    <div class=\"row align-items-center\">\r\n                        <div class=\"col-lg-5 col-md-12 col-12\">\r\n                            <div class=\"hero-content\">\r\n                                <h1 class=\"wow fadeInLeft\" data-wow-delay=\".4s\">SriQR.com</h1>\r\n                                <p class=\"wow fadeInLeft\" data-wow-delay=\".6s\">No Que With QR Code.</p>\r\n                                <Grid item xs={6}>\r\n                                    <div style={{ width: 370 }}>\r\n                                        <FormControl className={classes.formControl} fullWidth=\"true\"\r\n                                        >\r\n                                            <InputLabel id=\"demo-simple-select-label\">Select Park</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"demo-simple-select-label\"\r\n                                                id=\"demo-simple-select\"\r\n                                                name=\"parkId\"\r\n                                                label=\"Select Park\"\r\n                                                // value={formik.values.parkId}\r\n                                                // onChange={(e) => setParkId(e.target.value)}\r\n                                                onChange={e => { setParkName(e.target.value.parkName.toLowerCase());\r\n                                                            \r\n                                                    setParkId(e.target.value._id)\r\n                                                   }}\r\n                                            // error={formik.touched.parkId && Boolean(formik.errors.parkId)}\r\n                                            // helperText={formik.touched.parkId && formik.errors.parkId}\r\n                                            >\r\n                                                <MenuItem value=\"\">\r\n                                                    <em>None</em>\r\n                                                </MenuItem>\r\n\r\n                                                {parkList.map((parkDet) => (\r\n                                                    <MenuItem key={parkDet._id} value={parkDet}>{parkDet.parkName}\r\n\r\n                                                    </MenuItem>\r\n                                                ))}\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n                                </Grid>\r\n                                <div class=\"button wow fadeInLeft\" data-wow-delay=\".8s\">\r\n\r\n                                    <a href=\"javascript:void(0)\" class=\"btn\" onClick={handleRedirect}><i class=\"lni lni-apple\"></i> Book Your Ticket</a>\r\n                                    {/* <a href=\"javascript:void(0)\" class=\"btn btn-alt\"><i class=\"lni lni-play-store\"></i> Google\r\n                                Play</a> */}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-lg-7 col-md-12 col-12\">\r\n                            <div class=\"hero-image wow fadeInRight\" data-wow-delay=\".4s\">\r\n                                {/* <img src=\"assets/images/hero/phone.png\" alt=\"#\"/> */}\r\n                                <img src={home} style={{width:\"95%\"}} alt=\"some example image\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <section id=\"features\" class=\"features section\">\r\n                <div class=\"container\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-12\">\r\n                            <div class=\"section-title\">\r\n                                <h3 class=\"wow zoomIn\" data-wow-delay=\".2s\">Digitalization</h3>\r\n                                {/* <h2 class=\"wow fadeInUp\" data-wow-delay=\".4s\">Your Experience Gets Better And Better Over Time.\r\n                        </h2> */}\r\n                                <p class=\"wow fadeInUp\" data-wow-delay=\".6s\">\r\n                                    Sriqr.com makes it a simple, process of entry into parks, events, parking, Cloakrooms process, Diagnostic centre, gym management. Besides reports, Analytics, feedback and consultancy for upgrading services are also provided.</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        {/* <div class=\"col-lg-4 col-md-6 col-12\">\r\n                   \r\n                    <div class=\"single-feature wow fadeInUp\" data-wow-delay=\".2s\">\r\n                        <i class=\"lni lni-cloud-upload\"></i>\r\n                        <h3>Introduction</h3>\r\n                        <p>Sriqr.com makes it a simple, process of entry into parks, events, parking, Cloakrooms process, Diagnostic centre, gym management. Besides reports, Analytics, feedback and consultancy for upgrading services are also provided.</p>\r\n                    </div>\r\n                   \r\n                </div> */}\r\n                        <div class=\"col-lg-6 col-md-6 col-12\">\r\n\r\n                            <div class=\"single-feature wow fadeInUp\" data-wow-delay=\".4s\">\r\n\r\n\r\n                                <i class=\"lni lni-lock\"><CachedIcon /></i>\r\n                                <h3>How To Works</h3>\r\n                                <p>Unique QR code for every client’s business, on scanning QR code by client/Customer related page of business opens, client enters details, same is processed and calculates amount to be paid. Client proceeds for payment process, once payment received QR code generated with details of services availed by client.</p>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div class=\"col-lg-6 col-md-6 col-12\">\r\n\r\n                            <div class=\"single-feature wow fadeInUp\" data-wow-delay=\".6s\">\r\n                                <i class=\"lni lni-reload\"><PhonelinkLockIcon /></i>\r\n                                <h3>Authorization</h3>\r\n                                <p>QR code received by client is scanned by authorised person of business entity to know services availed by client same is delivered. Once scanned QR code it becomes invalid.\r\n                                    Simple process, any business can register online, Paytm team will reach and process merchant registration.\r\n                                </p>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div class=\"col-lg-6 col-md-6 col-12\">\r\n\r\n                            <div class=\"single-feature wow fadeInUp\" data-wow-delay=\".2s\">\r\n                                <i class=\"lni lni-shield\"><AcUnitIcon /></i>\r\n                                <h3>Services </h3>\r\n                                <p>All services availed, price paid by client stored in database for generation of MIS and analytics.\r\n                                    “Get QR” option also in application in case QR not received by user after successful payment, user enters mobile number which entered while processing, if payment done successfully, QR will be downloaded with details.\r\n                                </p>\r\n                            </div>\r\n\r\n                        </div>\r\n                        {/* <div class=\"col-lg-4 col-md-6 col-12\">\r\n                  \r\n                    <div class=\"single-feature wow fadeInUp\" data-wow-delay=\".4s\">\r\n                        <i class=\"lni lni-cog\"></i>\r\n                        <h3>Process</h3>\r\n                        <p>Simple process, any business can register online, Paytm team will reach and process merchant registration.</p>\r\n                    </div>\r\n                   \r\n                </div> */}\r\n                        <div class=\"col-lg-6 col-md-6 col-12\">\r\n\r\n                            <div class=\"single-feature wow fadeInUp\" data-wow-delay=\".6s\">\r\n                                <i class=\"lni lni-layers\"><PaymentIcon /></i>\r\n                                <h3>Payments </h3>\r\n                                <p>All payments processed are transferred by Paytm, into business entity’s bank account next day.\r\n                                    Paytm business app updates each transaction as it receives payment. Authorised Person can view each transaction, for any technical or internet issue, client not received QR code, it can be confirmed with this app.\r\n                                </p>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n\r\n            <section class=\"our-achievement section\">\r\n                <div class=\"container\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-lg-10 offset-lg-1 col-md-12 col-12\">\r\n                            <div class=\"title\">\r\n                                <h2>Trusted by users from over India</h2>\r\n                                <p>Simple process, any business can register online, Paytm team will reach and process merchant registration.</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-lg-8 offset-lg-2 col-md-12 col-12\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-lg-4 col-md-4 col-12\">\r\n                                    <div class=\"single-achievement wow fadeInUp\" data-wow-delay=\".2s\">\r\n                                        <h3 class=\"counter\"><span id=\"secondo1\" class=\"countup\" cup-end=\"100\">100</span>%</h3>\r\n                                        <p>digital</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-lg-4 col-md-4 col-12\">\r\n                                    <div class=\"single-achievement wow fadeInUp\" data-wow-delay=\".4s\">\r\n                                        <h3 class=\"counter\"><span id=\"secondo2\" class=\"countup\" cup-end=\"120\">120</span>K</h3>\r\n                                        <p>Happy Users</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-lg-4 col-md-4 col-12\">\r\n                                    <div class=\"single-achievement wow fadeInUp\" data-wow-delay=\".6s\">\r\n                                        <h3 class=\"counter\"><span id=\"secondo3\" class=\"countup\" cup-end=\"125\">100</span>%</h3>\r\n                                        <p>secure</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n\r\n            <section id=\"pricing\" class=\"pricing-table section\">\r\n                <div class=\"container\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-12\">\r\n                            <div class=\"section-title\">\r\n                                {/* <h3 class=\"wow zoomIn\" data-wow-delay=\".2s\">pricing</h3> */}\r\n                                <h2 class=\"wow fadeInUp\" data-wow-delay=\".4s\">Features</h2>\r\n                                {/* <p class=\"wow fadeInUp\" data-wow-delay=\".6s\">There are many variations of passages of Lorem\r\n                                    Ipsum available, but the majority have suffered alteration in some form.</p> */}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-lg-3 col-md-6 col-12\">\r\n\r\n                            <div class=\"single-table wow fadeInUp\" data-wow-delay=\".2s\">\r\n\r\n                                <div class=\"table-head\">\r\n                                    <h4 class=\"title\">Park </h4>\r\n                                    {/* <p>All the basics for starting a new business</p> */}\r\n                                    {/* <div class=\"price\">\r\n                                <h2 class=\"amount\">$12<span class=\"duration\">/mo</span></h2>\r\n                            </div> */}\r\n                                    <div class=\"table-content\">\r\n                                        <h4 class=\"middle-title\">What's Included</h4>\r\n                                        <ul class=\"table-list\">\r\n                                            <li><i class=\"lni lni-checkmark-circle\"></i> Cras justo odio.</li>\r\n                                            <li><i class=\"lni lni-checkmark-circle\"></i> Dapibus ac facilisis in.</li>\r\n                                            <li><i class=\"lni lni-checkmark-circle\"></i> Morbi leo risus.</li>\r\n                                            <li><i class=\"lni lni-checkmark-circle\"></i> Potenti felis, in cras ligula.</li>\r\n                                        </ul>\r\n                                    </div>\r\n                                    <div class=\"button\">\r\n                                        <a href=\"javascript:void(0)\" class=\"btn\">Click Here</a>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-lg-3 col-md-6 col-12\">\r\n                            <div class=\"single-table wow fadeInUp\" data-wow-delay=\".4s\">\r\n                                <div class=\"table-head\">\r\n                                    <h4 class=\"title\">Parking </h4>\r\n                                    {/* <p>All the basics for starting a new business</p> */}\r\n                                    {/* <div class=\"price\">\r\n                                <h2 class=\"amount\">$24<span class=\"duration\">/mo</span></h2>\r\n                            </div> */}\r\n                                    <div class=\"table-content\">\r\n                                        <h4 class=\"middle-title\">What's Included</h4>\r\n                                        <ul class=\"table-list\">\r\n                                            <li><i class=\"lni lni-checkmark-circle\"></i> Cras justo odio.</li>\r\n                                            <li><i class=\"lni lni-checkmark-circle\"></i> Dapibus ac facilisis in.</li>\r\n                                            <li><i class=\"lni lni-checkmark-circle\"></i> Morbi leo risus.</li>\r\n                                            <li><i class=\"lni lni-checkmark-circle\"></i> Potenti felis, in cras ligula.</li>\r\n                                        </ul>\r\n                                    </div>\r\n                                    <div class=\"button\">\r\n                                        <a href=\"javascript:void(0)\" class=\"btn\">Click Here</a>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-lg-3 col-md-6 col-12\">\r\n                            <div class=\"single-table wow fadeInUp\" data-wow-delay=\".6s\">\r\n                                <div class=\"table-head\">\r\n                                    <h4 class=\"title\">Cloak room</h4>\r\n                                    {/* <p>All the basics for starting a new business</p> */}\r\n                                    {/* <div class=\"price\">\r\n                                <h2 class=\"amount\">$32<span class=\"duration\">/mo</span></h2>\r\n                            </div> */}\r\n                                    <div class=\"table-content\">\r\n                                        <h4 class=\"middle-title\">What's Included</h4>\r\n                                        <ul class=\"table-list\">\r\n                                            <li><i class=\"lni lni-checkmark-circle\"></i> Cras justo odio.</li>\r\n                                            <li><i class=\"lni lni-checkmark-circle\"></i> Dapibus ac facilisis in.</li>\r\n                                            <li><i class=\"lni lni-checkmark-circle\"></i> Morbi leo risus.</li>\r\n                                            <li><i class=\"lni lni-checkmark-circle\"></i> Potenti felis, in cras ligula.</li>\r\n                                        </ul>\r\n                                    </div>\r\n                                    <div class=\"button\">\r\n                                        <a href=\"javascript:void(0)\" class=\"btn\">Click Here</a>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-lg-3 col-md-6 col-12\">\r\n                            <div class=\"single-table wow fadeInUp\" data-wow-delay=\".8s\">\r\n                                <div class=\"table-head\">\r\n                                    <h4 class=\"title\">Museum</h4>\r\n                                    {/* <p>All the basics for starting a new business</p> */}\r\n                                    {/* <div class=\"price\">\r\n                                <h2 class=\"amount\">$48<span class=\"duration\">/mo</span></h2>\r\n                            </div> */}\r\n                                    <div class=\"table-content\">\r\n                                        <h4 class=\"middle-title\">What's Included</h4>\r\n                                        <ul class=\"table-list\">\r\n                                            <li><i class=\"lni lni-checkmark-circle\"></i> Cras justo odio.</li>\r\n                                            <li><i class=\"lni lni-checkmark-circle\"></i> Dapibus ac facilisis in.</li>\r\n                                            <li><i class=\"lni lni-checkmark-circle\"></i> Morbi leo risus.</li>\r\n                                            <li><i class=\"lni lni-checkmark-circle\"></i> Potenti felis, in cras ligula.</li>\r\n                                        </ul>\r\n                                    </div>\r\n                                    <div class=\"button\">\r\n                                        <a href=\"javascript:void(0)\" class=\"btn\">Click Here</a>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-lg-4 col-md-6 col-12\">\r\n\r\n                            <div class=\"single-table wow fadeInUp\" data-wow-delay=\".2s\">\r\n\r\n                                <div class=\"table-head\">\r\n                                    <h4 class=\"title\">Gym centre  </h4>\r\n                                    {/* <p>All the basics for starting a new business</p> */}\r\n                                    {/* <div class=\"price\">\r\n                                <h2 class=\"amount\">$12<span class=\"duration\">/mo</span></h2>\r\n                            </div> */}\r\n                                    <div class=\"table-content\">\r\n                                        <h4 class=\"middle-title\">What's Included</h4>\r\n                                        <ul class=\"table-list\">\r\n                                            <li><i class=\"lni lni-checkmark-circle\"></i> Cras justo odio.</li>\r\n                                            <li><i class=\"lni lni-checkmark-circle\"></i> Dapibus ac facilisis in.</li>\r\n                                            <li><i class=\"lni lni-checkmark-circle\"></i> Morbi leo risus.</li>\r\n                                            <li><i class=\"lni lni-checkmark-circle\"></i> Potenti felis, in cras ligula.</li>\r\n                                        </ul>\r\n                                    </div>\r\n                                    <div class=\"button\">\r\n                                        <a href=\"javascript:void(0)\" class=\"btn\">Click Here</a>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-lg-4 col-md-6 col-12\">\r\n                            <div class=\"single-table wow fadeInUp\" data-wow-delay=\".4s\">\r\n                                <div class=\"table-head\">\r\n                                    <h4 class=\"title\">Coaching centre  </h4>\r\n                                    {/* <p>All the basics for starting a new business</p> */}\r\n                                    {/* <div class=\"price\">\r\n                                <h2 class=\"amount\">$24<span class=\"duration\">/mo</span></h2>\r\n                            </div> */}\r\n                                    <div class=\"table-content\">\r\n                                        <h4 class=\"middle-title\">What's Included</h4>\r\n                                        <ul class=\"table-list\">\r\n                                            <li><i class=\"lni lni-checkmark-circle\"></i> Cras justo odio.</li>\r\n                                            <li><i class=\"lni lni-checkmark-circle\"></i> Dapibus ac facilisis in.</li>\r\n                                            <li><i class=\"lni lni-checkmark-circle\"></i> Morbi leo risus.</li>\r\n                                            <li><i class=\"lni lni-checkmark-circle\"></i> Potenti felis, in cras ligula.</li>\r\n                                        </ul>\r\n                                    </div>\r\n                                    <div class=\"button\">\r\n                                        \r\n                                        <a href=\"javascript:void(0)\" class=\"btn\">Click Here</a>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-lg-4 col-md-6 col-12\">\r\n                            <div class=\"single-table wow fadeInUp\" data-wow-delay=\".6s\">\r\n                                <div class=\"table-head\">\r\n                                    <h4 class=\"title\">Diagnostic centre </h4>\r\n                                    {/* <p>All the basics for starting a new business</p> */}\r\n                                    {/* <div class=\"price\">\r\n                                <h2 class=\"amount\">$32<span class=\"duration\">/mo</span></h2>\r\n                            </div> */}\r\n                                    <div class=\"table-content\">\r\n                                        <h4 class=\"middle-title\">What's Included</h4>\r\n                                        <ul class=\"table-list\">\r\n                                            <li><i class=\"lni lni-checkmark-circle\"></i> Cras justo odio.</li>\r\n                                            <li><i class=\"lni lni-checkmark-circle\"></i> Dapibus ac facilisis in.</li>\r\n                                            <li><i class=\"lni lni-checkmark-circle\"></i> Morbi leo risus.</li>\r\n                                            <li><i class=\"lni lni-checkmark-circle\"></i> Potenti felis, in cras ligula.</li>\r\n                                        </ul>\r\n                                    </div>\r\n                                    <div class=\"button\">\r\n                                        <a href=\"javascript:void(0)\" class=\"btn\">Click Here</a>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </section>\r\n\r\n\r\n            <section class=\"section call-action\">\r\n                <div class=\"container\">\r\n                    <div class=\"row\">\r\n                        {/* <div class=\"col-lg-8 offset-lg-2 col-md-12 col-12\"> */}\r\n                        <div class=\"cta-content\">\r\n                            <h2 class=\"wow fadeInUp\" data-wow-delay=\".2s\">Contact us\r\n                            </h2>\r\n                            <section id=\"pricing\" class=\"pricing-table section\">\r\n                                <div class=\"container\">\r\n\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-lg-4 col-md-6 col-12\">\r\n\r\n                                            <div class=\"single-table wow fadeInUp\" data-wow-delay=\".2s\">\r\n                                                <div class=\"table-head\">\r\n\r\n                                                    <  MailIcon />\r\n\r\n\r\n                                                    <div class=\"table-head\">\r\n                                                        <h4 class=\"title\">Email Us </h4>\r\n                                                        <p style={{ color: \"black\" }}>sriqr@gmail.com Interactively grow empowered for process-centric total linkage in Digitalization.</p>\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-lg-4 col-md-6 col-12\">\r\n                                            <div class=\"single-table wow fadeInUp\" data-wow-delay=\".2s\">\r\n                                                <div class=\"table-head\">\r\n                                                    <  PhoneIcon />\r\n\r\n                                                    <div class=\"table-head\">\r\n                                                        <h4 class=\"title\">Call Us  </h4>\r\n                                                        <p style={{ color: \"black\" }}>029-00124667 Distinctively disseminate focused solutions clicks-and-mortar ministate.</p>\r\n                                                    </div>\r\n                                                </div>\r\n\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-lg-4 col-md-6 col-12\">\r\n                                            <div class=\"single-table wow fadeInUp\" data-wow-delay=\".2s\">\r\n                                                <div class=\"table-head\">\r\n                                                    <LocationOnIcon />\r\n                                                    <div class=\"table-head\">\r\n                                                        <h4 class=\"title\">Location </h4>\r\n                                                        <p style={{ color: \"black\" }}>\r\n                                                            Srshta Tech Solutions Pvt Ltd #110, Snehapuri, Nacharam, Hyderabad-17 Telagana , INDIA</p>\r\n                                                    </div>\r\n\r\n                                                </div>\r\n\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </section>\r\n\r\n                        </div>\r\n                        {/* </div> */}\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <Footer color=\"primary\" className={classes.copyright}>\r\n                © 2014-{new Date().getFullYear()} <a style={{ textDecoration: 'none', color: 'inherit' }} href=\"https://flatlogic.com\" rel=\"noopener noreferrer\" target=\"_blank\">Flatlogic</a>, LLC. All rights reserved.\r\n            </Footer>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default withRouter(Home);\r\n","C:\\QR-code\\ui\\src\\pages\\home\\styles.js",[],"C:\\QR-code\\ui\\src\\pages\\home\\Header.js",["1351","1352","1353","1354","1355","1356","1357","1358","1359","1360","1361","1362","1363","1364","1365","1366","1367","1368","1369","1370","1371","1372","1373","1374","1375","1376","1377","1378","1379","1380","1381","1382","1383","1384","1385","1386","1387","1388","1389"],"import React, { useState } from \"react\";\r\nimport { Grid, CircularProgress, Typography,Tabs,Tab,TextField,Fade,} from \"@material-ui/core\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport { loginUser } from \"../../context/UserContext\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport useStyles from \"./styles\";\r\nimport SRI from './images/SRI.jpg';\r\nimport Footer from \"../../pages/home/Footer\"\r\nimport CachedIcon from '@material-ui/icons/Cached';\r\nimport PhonelinkLockIcon from '@material-ui/icons/PhonelinkLock';\r\nimport PaymentIcon from '@material-ui/icons/Payment';\r\n// import PaymentsIcon from '@material-ui/icons/Payments';\r\n// import CleaningServicesIcon from '@material-ui/icons/CleaningServices';\r\nimport AcUnitIcon from '@material-ui/icons/AcUnit';\r\nimport phone from './images/phone.png';\r\nimport {Link} from \"react-router-dom\";\r\nimport { useUserDispatch,  } from \"../../context/UserContext\";\r\nimport './styles/bootstrap.min.css';\r\nimport './styles/animate.css';\r\n\r\nimport './styles/tiny-slider.css';\r\n\r\nimport './styles/glightbox.min.css';\r\nimport './styles/main.css';\r\n\r\n\r\n\r\nfunction Header(props) {\r\n\r\n  var classes = useStyles();\r\n  var userDispatch = useUserDispatch();\r\n  var [isLoading, setIsLoading] = useState(false);\r\n  var [error, setError] = useState(null);\r\n  var [activeTabId, setActiveTabId] = useState(0);\r\n  var [loginValue, setLoginValue] = useState(\"\");\r\n  var [passwordValue, setPasswordValue] = useState(\"\");\r\n  var [roleValue, setRoleValue] = useState(\"\");\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n  const toggleNavbar = () => {\r\n    \r\n    setIsOpen(!isOpen);\r\n  };\r\n  const handleOpen = () => {\r\n    props.history.push('/sriqr/login') \r\n};\r\nconst handleChange=()=>{\r\n    props.history.push('/sriqr/profileregistration') \r\n}\r\n  return (\r\n  \r\n    <>\r\n    <header class=\"header navbar-area sticky\">\r\n        <div class=\"container\">\r\n            <div class=\"row align-items-center\">\r\n                <div class=\"col-lg-12\">\r\n                    <div class=\"nav-inner\">\r\n                       \r\n                        <nav class=\"navbar navbar-expand-lg\">\r\n                            <a class=\"navbar-brand\" href=\"index.html\">\r\n                                {/* <img src=\"assets/images/logo/white-logo.svg\" alt=\"Logo\"/> */}\r\n                                <img src={SRI} alt=\"some example image\" style={{height:\"70px\", width:\"70px\"}}/>\r\n                                {/* <img src=\"home/images/SRIQR.COM LOGO JPG.jpg\" alt=\"Sriqr.com\"/> */}\r\n\r\n                            </a>\r\n                            <button class=\"navbar-toggler mobile-menu-btn\" onClick={toggleNavbar} type=\"button\" data-bs-toggle=\"collapse\"\r\n                                data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\r\n                                aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                                <span class=\"toggler-icon\"></span>\r\n                                <span class=\"toggler-icon\"></span>\r\n                                <span class=\"toggler-icon\"></span>\r\n                            </button>\r\n                            {isOpen? <div class=\" navbar-collapse sub-menu-bar\" id=\"navbarSupportedContent\">\r\n                                        <ul id=\"nav\" class=\"navbar-nav ms-auto\">\r\n                                            <li class=\"nav-item\">\r\n                                                <a href=\"#home\" class=\"page-scroll active\"\r\n                                                    aria-label=\"Toggle navigation\">Home</a>\r\n                                            </li>\r\n                                            <li class=\"nav-item\">\r\n                                <a href=\"javascript:void(0)\" onClick={handleOpen} class=\"page-scroll active\"> Admin Login</a>\r\n                            </li>\r\n                            <li class=\"nav-item\">\r\n                                                <a href=\"javascript:void(0)\" onClick={handleChange}  class=\"page-scroll active\"\r\n                                                    aria-label=\"Toggle navigation\">Profile Registration</a>\r\n                                            </li>\r\n                            \r\n                                        </ul>\r\n                                    </div>:<div class=\"collapse navbar-collapse sub-menu-bar\" id=\"navbarSupportedContent\">\r\n                                        <ul id=\"nav\" class=\"navbar-nav ms-auto\">\r\n                                            <div class=\"nav-item\">\r\n                                                <a href=\"#home\" class=\"page-scroll active\"\r\n                                                    aria-label=\"Toggle navigation\">Home</a>\r\n                                            </div>\r\n                                            <div class=\"nav-item\">\r\n                                            <a href=\"javascript:void(0)\" onClick={handleOpen} class=\"page-scroll active\"> Admin Login</a>\r\n                                            </div>\r\n                                            <div class=\"nav-item\">\r\n                                                <a href=\"javascript:void(0)\" onClick={handleChange} class=\"page-scroll active\"\r\n                                                    aria-label=\"Toggle navigation\">Profile Registration</a>\r\n                                            </div>\r\n                                        </ul>\r\n                                    </div>}\r\n                            {/* <div class=\"button add-list-button\">\r\n                                <a href=\"javascript:void(0)\" onClick={handleOpen} class=\"btn\">gg Admin Login</a>\r\n                            </div> */}\r\n                        </nav>\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div> \r\n        </div> \r\n    </header>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default withRouter(Header);","C:\\QR-code\\ui\\src\\pages\\home\\Footer.js",["1390","1391","1392","1393","1394","1395","1396","1397","1398","1399","1400","1401","1402","1403","1404","1405","1406","1407","1408","1409","1410","1411","1412","1413","1414","1415","1416","1417","1418","1419","1420"],"import React, { useState } from \"react\";\r\nimport { Grid, CircularProgress, Typography,Tabs,Tab,TextField,Fade,} from \"@material-ui/core\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport { loginUser } from \"../../context/UserContext\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport useStyles from \"./styles\";\r\nimport SRI from './images/SRI.jpg';\r\nimport CachedIcon from '@material-ui/icons/Cached';\r\nimport PhonelinkLockIcon from '@material-ui/icons/PhonelinkLock';\r\nimport PaymentIcon from '@material-ui/icons/Payment';\r\n// import PaymentsIcon from '@material-ui/icons/Payments';\r\n// import CleaningServicesIcon from '@material-ui/icons/CleaningServices';\r\nimport AcUnitIcon from '@material-ui/icons/AcUnit';\r\nimport phone from './images/phone.png';\r\nimport {Link} from \"react-router-dom\";\r\nimport { useUserDispatch,  } from \"../../context/UserContext\";\r\nimport './styles/bootstrap.min.css';\r\nimport './styles/animate.css';\r\n\r\nimport './styles/tiny-slider.css';\r\n\r\nimport './styles/glightbox.min.css';\r\nimport './styles/main.css';\r\n\r\n\r\n\r\nfunction Footer(props) {\r\n\r\n  var classes = useStyles();\r\n  var userDispatch = useUserDispatch();\r\n  var [isLoading, setIsLoading] = useState(false);\r\n  var [error, setError] = useState(null);\r\n  var [activeTabId, setActiveTabId] = useState(0);\r\n  var [loginValue, setLoginValue] = useState(\"\");\r\n  var [passwordValue, setPasswordValue] = useState(\"\");\r\n  var [roleValue, setRoleValue] = useState(\"\");\r\n  const handleOpen = () => {\r\n    props.history.push('/app/studentregistration/add') \r\n};\r\n  return (\r\n  \r\n    <>\r\n    \r\n    <footer class=\"footer\">\r\n      \r\n        <div class=\"footer-top\">\r\n            <div class=\"container\">\r\n            <p style={{textAlign: \"center\"}}>Copyright © 2012 - 2029 SriQR.com All rights reserved.</p>\r\n            </div>\r\n        </div>\r\n       \r\n    </footer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default withRouter(Footer);\r\n","C:\\QR-code\\ui\\src\\pages\\dashboard\\report.js",["1421","1422","1423","1424","1425","1426","1427","1428","1429","1430","1431"],"import React, { useState } from \"react\";\r\nimport {\r\n    Button, FormControl, InputLabel, MenuItem, TableRow, Table, TableHead,\r\n    TableBody, TableCell\r\n} from \"@material-ui/core\";\r\nimport ParkService from \"../dashboard/Locality/Service/parkService\";\r\nimport { Grid, Card, Box, Select, TextField } from \"@material-ui/core\";\r\nimport { useEffect } from 'react';\r\nimport ticketBookingService from \"./Locality/Service/ticketBookingService\";\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: \"rgb(255, 107, 129)\",\r\n        color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 200,\r\n    },\r\n}));\r\nexport default function Report() {\r\n    //const tableHeaders = [ 'Date'];\r\n    const [tableHeaders, settableHeaders] = useState(['Date']);\r\n    const classes = useStyles();\r\n    const [parkId, setParkId] = useState(\"\");\r\n    const [result, setResult] = useState([]);\r\n    const [reportList, setReportList] = useState([]);\r\n    const [pg, setpg] = React.useState(0);\r\n    const [parkList, setParkList] = useState([]);\r\n    const [rpg, setrpg] = React.useState(5);\r\n    const [startDate1, setStartDate1] = useState('');\r\n    const [endDate1, setEndDate1] = useState('');\r\n    const [age, setAge] = React.useState('');\r\n    const [getReport, setGetReport] = useState([]);\r\n    const [open, setOpen] = React.useState(false);\r\n    const current = new Date();\r\n    const date = `${current.getFullYear()}-0${current.getMonth() + 1}-${current.getDate()}`;\r\n    const [activity, setActivity] = useState({\r\n        classId: '',\r\n        startDate: '',\r\n        endDate: '',\r\n        description: '',\r\n        activityName: '',\r\n        status: '',\r\n    });\r\n\r\n    useEffect(() => {\r\n        // getParkList();\r\n        getProfileId();\r\n        return () => {\r\n            setReportList([]);\r\n            // setParkList([]);\r\n            setGetReport([]);\r\n        }\r\n    }, []);\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setrpg(parseInt(event.target.value, 10));\r\n        setpg(0);\r\n    }\r\n    const getProfileId = () => {\r\n        const userDetails = JSON.parse(localStorage.getItem(\"userDetail\"));\r\n        console.log(userDetails.role)\r\n\r\n        const result = userDetails.role === \"admin\" ? null : userDetails.profileId;\r\n        console.log(result)\r\n        ParkService.addAllProfileId({ profileRegistrationId: result }).then((res) => {\r\n            if (res.length > 0) {\r\n                setParkList(res);\r\n                const firstValue = res[0];\r\n                setParkId(firstValue._id);\r\n                onSubmit(firstValue._id);\r\n            } else {\r\n                setParkList(res);\r\n            }\r\n        }).catch((err) => {\r\n            // setError(err.message);\r\n        });\r\n    }\r\n    const sumFee = (data) => {\r\n        const mergedFeeDetails = {};\r\n        data.forEach((document) => {\r\n            // Iterate through the fee array of each document\r\n            document.fee.forEach((feeDetail) => {\r\n                const name = feeDetail.name;\r\n                const price = feeDetail.price;\r\n                const qty = feeDetail.quantity;\r\n                if (!mergedFeeDetails[name + ' amount']) {\r\n                    // If the name doesn't exist in the merged object, create it\r\n                    // mergedFeeDetails[name] = price;\r\n                    mergedFeeDetails[name + ' amount'] = qty*price;\r\n                    mergedFeeDetails[name + ' Count'] = qty;\r\n                } else {\r\n                    // If the name already exists, add the price to the existing sum\r\n                    mergedFeeDetails[name + ' amount'] += qty*price;\r\n                    mergedFeeDetails[name + ' Count'] += qty;\r\n                    //  mergedFeeDetails[name] += price;\r\n                }\r\n            });\r\n        });\r\n        return mergedFeeDetails;\r\n    }\r\n    const totalSum = (data) => {\r\n        const mergedFeeDetails = {};\r\n        data.forEach((document) => {\r\n            // Iterate through the fee array of each document\r\n            document.fee.forEach((feeDetail) => {\r\n                const name = feeDetail.name;\r\n                const price = feeDetail.price;\r\n                const qty = feeDetail.quantity;\r\n                if (!mergedFeeDetails[name + ' amount']) {\r\n                    // If the name doesn't exist in the merged object, create it\r\n                    // mergedFeeDetails[name] = price;\r\n                    mergedFeeDetails[name + ' amount'] = qty*price;\r\n                } else {\r\n                    // If the name already exists, add the price to the existing sum\r\n                    mergedFeeDetails[name + ' amount'] += qty*price;\r\n                    //  mergedFeeDetails[name] += price;\r\n                }\r\n            });\r\n        });\r\n        const values = Object.values(mergedFeeDetails); // Extract the values into an array\r\n        const sum = values.reduce((acc, currentValue) => acc + currentValue, 0); // Calculate the sum\r\n        return sum;\r\n    }\r\n    const onSubmit = data => {\r\n        const report = JSON.parse(localStorage.getItem(\"userDetail\"));\r\n        let newstartDate1 = startDate1 ? startDate1 : null;\r\n        let newendDate1 = endDate1 ? endDate1 : null;\r\n\r\n        const keys = { \"parkId\": data ? data : parkId, \"startDate\": newstartDate1, \"endDate\": `${newendDate1}T23:59:00.000Z` }\r\n        ticketBookingService.getTicketBookingList(keys).then((res) => {\r\n            if (res.length) {\r\n                const result = res.map(result => {\r\n                    return {\r\n                        Date: result.createdAt,\r\n                        ...sumFee(result.documents),\r\n                        'Total Amount': `₹ ${totalSum(result.documents)}`,\r\n                    }\r\n                });\r\n                debugger\r\n                const headerDetails = Object.keys(result[0]).map(key => key);\r\n                settableHeaders(headerDetails);\r\n                // excelExport(res);\r\n              \r\n                setGetReport(result);\r\n            } else {\r\n                setGetReport([]);\r\n            }\r\n\r\n            // setResult(result);\r\n        }).catch((err) => {\r\n        });\r\n    };\r\n\r\n    // const getStudentList = (event, obj) => {\r\n    //     const userDetails = JSON.parse(localStorage.getItem(\"userDetail\"));\r\n    //     StudentService.getAllStudentById(userDetails.schoolId,\r\n\r\n    //     ).then((res) => {\r\n    //         const studentDetails = res.map(res => {\r\n    //             return { _id: res._id, studentName: `${res.firstName} ${res.lastName}`, status: true };\r\n    //         })\r\n    //         setStudentList(studentDetails);\r\n\r\n    //         if (obj) {\r\n    //             setActivity(obj);\r\n    //         }\r\n    //     }).catch((err) => {\r\n    //         // setError(err.message);\r\n    //     });\r\n    // }\r\n\r\n    const getParkList = () => {\r\n        ParkService.getAllPark().then((res) => {\r\n\r\n            setParkList(res);\r\n\r\n        }).catch((err) => {\r\n            // setError(err.message);\r\n        });\r\n    }\r\n    const handleChangePage = (event, newpage) => {\r\n        setpg(newpage);\r\n    }\r\n    return (\r\n        <>\r\n            <PageTitle title=\"Reports\" />\r\n            <Card sx={{ maxWidth: 345 }}>\r\n                <Box   >\r\n                    <div >\r\n                        <form >\r\n                            <Grid container spacing={2} columns={12} style={{ margin: 10 }}  >\r\n                                <Grid item xs={6} sm={6} md={3} >\r\n                                    <FormControl className={classes.formControl} fullWidth=\"true\"\r\n                                    >\r\n                                        <InputLabel id=\"demo-simple-select-label\">Select Park</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"demo-simple-select-label\"\r\n                                            id=\"demo-simple-select\"\r\n                                            name=\"parkId\"\r\n                                            label=\"Select Park\"\r\n                                            value={parkId}\r\n                                            onChange={(e) => setParkId(e.target.value)}\r\n\r\n                                        // error={formik.touched.parkId && Boolean(formik.errors.parkId)}\r\n                                        // helperText={formik.touched.parkId && formik.errors.parkId}\r\n                                        >\r\n                                            <MenuItem value=\"\">\r\n                                                <em>None</em>\r\n                                            </MenuItem>\r\n\r\n                                            {parkList.map(({ _id, parkName }) => (\r\n                                                <MenuItem key={_id} value={_id}>{parkName}\r\n\r\n                                                </MenuItem>\r\n                                            ))}\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </Grid>\r\n                                <Grid item xs={6} sm={6} md={3}>\r\n                                    <form className={classes.container} noValidate>\r\n                                        <TextField InputProps={{ style: { width: 150 } }}\r\n                                            id=\"dob\"\r\n                                            name=\"dob\"\r\n                                            label=\"Start Date\"\r\n                                            type=\"date\"\r\n                                            min=\"2016-11-10\"\r\n                                            max=\"2022-11-10\"\r\n                                            value={startDate1}\r\n                                            onChange={e => { getParkList(e.target.value); setStartDate1(e.target.value) }}\r\n                                            className={classes.textField}\r\n                                            InputLabelProps={{\r\n                                                shrink: true,\r\n                                            }}\r\n                                        />\r\n                                    </form>\r\n                                </Grid>\r\n                                <Grid item xs={6} sm={6} md={3} >\r\n                                    <TextField InputProps={{ style: { width: 120 } }}\r\n                                        id=\"dob\"\r\n                                        name=\"dob\"\r\n                                        label=\"End Date\"\r\n                                        type=\"date\"\r\n                                        min=\"2016-11-10\"\r\n                                        max=\"2022-11-10\"\r\n                                        value={endDate1}\r\n                                        onChange={e => { setEndDate1(e.target.value) }}\r\n                                        // defaultValue=\"2017-05-24\"\r\n                                        InputLabelProps={{\r\n                                            shrink: true,\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={6} sm={6} md={3} >\r\n                                    <Button style={{ backgroundColor: 'rgb(255 107 129)', color: 'white' }}\r\n                                        type=\"button\" onClick={() => onSubmit()} variant=\"contained\" >\r\n                                        Search</Button>\r\n                                </Grid>\r\n                                {/* <Grid item xs={6} sm={6} md={3}  >\r\n                                <ExportExcel   excelData={result} fileName={'Student Activity'} />\r\n                                </Grid> */}\r\n                            </Grid>\r\n                        </form>\r\n                    </div>\r\n                </Box>\r\n            </Card>\r\n            <Grid container spacing={4}>\r\n                <Grid item xs={12}>\r\n                    <Widget title=\"\" upperTitle noBodyPadding bodyClass={classes.tableOverflow}>\r\n                        {getReport.length > 0 ? (\r\n                            <Table className=\"mb-0\">\r\n                                <TableHead >\r\n                                    <TableRow>\r\n                                        {tableHeaders.map(key => (\r\n                                            <StyledTableCell key={key}>{key}</StyledTableCell>\r\n                                        ))}\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n\r\n                                    {getReport.slice(pg * rpg, pg * rpg + rpg).map((report) => (\r\n                                        <TableRow key={report._id}>\r\n\r\n                                            {tableHeaders.map(key => (\r\n                                                <TableCell className=\"pl-3 fw-normal\" >{report[key] ? report[key] : 0}</TableCell>\r\n                                            ))}\r\n\r\n                                           \r\n                                        </TableRow>\r\n\r\n                                    ))}\r\n                                    {/* ))} */}\r\n                                </TableBody>\r\n                            </Table>\r\n                        ) : (\r\n                            <p style={{ textAlign: \"center\" }}> No data to display.</p>\r\n                        )}\r\n\r\n                        <TablePagination\r\n                            component=\"div\"\r\n                            rowsPerPageOptions={[5, 50, 100, 500, 1000]}\r\n                            count={reportList.length}\r\n                            page={pg}\r\n                            onPageChange={handleChangePage}\r\n                            rowsPerPage={rpg}\r\n                            onRowsPerPageChange={handleChangeRowsPerPage}\r\n                        />\r\n                    </Widget>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n","C:\\QR-code\\ui\\src\\pages\\dashboard\\Success.js",["1432","1433","1434","1435","1436","1437","1438","1439","1440","1441","1442","1443","1444","1445","1446","1447","1448","1449","1450","1451","1452","1453","1454","1455","1456","1457","1458","1459","1460","1461","1462","1463","1464","1465","1466","1467","1468","1469"],"import React, { useState } from \"react\";\r\nimport {\r\n  LinearProgress,\r\n  OutlinedInput,\r\n} from \"@material-ui/core\";\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport {\r\n  Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, FormControl, InputLabel, MenuItem,\r\n  TableRow, Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableCell\r\n} from \"@material-ui/core\";\r\nimport ParkService from \"./Locality/Service/parkService\";\r\n\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport ProfileRegistrationService from \"./Locality/Service/profileRegistrationService\"\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport { Grid, Card, Box, Select, TextField } from \"@material-ui/core\";\r\nimport { useFormik } from 'formik';\r\nimport { useContext, useEffect } from 'react';\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n// styles\r\n// import useStyles from \"./styles\";\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\n// components\r\nimport mock from \"./mock\";\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { Typography } from \"../../components/Wrappers/Wrappers\";\r\nimport Dot from \"../../components/Sidebar/components/Dot\";\r\nimport BigStat from \"./components/BigStat/BigStat\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\n// const useStyles = makeStyles((theme) => ({\r\n//     root: {\r\n//       width: '100%',\r\n//       '& > * + *': {\r\n//         marginTop: theme.spacing(2),\r\n//       },\r\n//     },\r\n//   }));\r\nexport default function Success(props) {\r\n    // const classes = useStyles();\r\n    const { bookingId,parkId } = useParams();\r\n    const [ticketBooking, setTicketBookingList] = useState({ \"status\": 'info',\r\n    \"image\": \"\",\r\n    \"message\": \"\",\r\n    \"id\": \"\"});\r\n \r\n  useEffect(() => {\r\n    getByIdList();\r\n    return () => {\r\n    }\r\n}, []);\r\nconst handleRedirect = () => {\r\n        \r\n    props.history.push(\"/ticketbooking/\" + parkId)\r\n};\r\nconst getByIdList = () => {\r\n\r\n    ParkService.getQRcodebyById({bookingId:bookingId}).then((res) => {\r\n     \r\n      if (res) {\r\n        if(res.status){\r\n            res.status = 'success';\r\n            setTicketBookingList(res);\r\n              \r\n        // const base64Data = res.image.replace(/^data:image\\/\\w+;base64,/, '');\r\n        // const imageBuffer = Buffer.from(base64Data, 'base64');\r\n\r\n        // // Create a blob URL for the binary buffer\r\n        // const blob = new Blob([imageBuffer]);\r\n        // const blobUrl = URL.createObjectURL(blob);\r\n    \r\n        // // Create a link element and trigger the download\r\n        // const link = document.createElement('a');\r\n        // link.href = blobUrl;\r\n        // link.download = mobile+'.png'; // Change the file name and extension\r\n        // link.click();\r\n    \r\n        // // Clean up the blob URL\r\n        // URL.revokeObjectURL(blobUrl);\r\n\r\n    \r\n        }else{\r\n            setTicketBookingList( { \"status\": 'error',\r\n            \"image\": \"\",\r\n            \"message\": res.message,\r\n            \"id\": \"\"})\r\n        }\r\n        \r\n\r\n      }else{\r\n        setTicketBookingList( { \"status\": 'error',\r\n    \"image\": \"\",\r\n    \"message\": res.message,\r\n    \"id\": \"\"})\r\n      }\r\n\r\n\r\n\r\n    }).catch((err) => {\r\n     // setError(err.message);\r\n    });\r\n  }\r\n  return (\r\n\r\n    <>\r\n<div >\r\n<Grid  container  spacing={3}\r\n  direction=\"column\"\r\n  alignItems=\"center\">\r\n<Card >\r\n\r\n<CardHeader/>\r\n<CardContent>\r\n   <div style={{\r\n    'text-align': 'center'\r\n}}>\r\n   <Alert severity={ticketBooking.status}>{ticketBooking.message}</Alert>\r\n   <div>\r\n    <img src={ticketBooking.image}/>\r\n   </div>\r\n   {ticketBooking.status === 'success'? <div>    <a href={ticketBooking.image} download>Download</a>\r\n</div>:''}\r\n  \r\n<div class=\"button wow fadeInLeft\" data-wow-delay=\".8s\">\r\n\r\n<a href=\"javascript:void(0)\" class=\"btn\" onClick={handleRedirect}><i class=\"lni lni-apple\"></i> Book More Tickets</a>\r\n{/* <a href=\"javascript:void(0)\" class=\"btn btn-alt\"><i class=\"lni lni-play-store\"></i> Google\r\nPlay</a> */}\r\n</div>\r\n   </div>\r\n\r\n  \r\n  \r\n</CardContent>\r\n\r\n\r\n</Card>\r\n</Grid>\r\n\r\n\r\n    </div>\r\n          \r\n    </>\r\n  );\r\n}\r\n\r\n\r\n","C:\\QR-code\\ui\\src\\pages\\dashboard\\Getqr.js",["1470","1471","1472","1473","1474","1475","1476","1477","1478","1479","1480","1481","1482","1483","1484","1485","1486","1487","1488","1489","1490","1491","1492","1493","1494","1495","1496","1497","1498","1499","1500","1501","1502","1503","1504","1505","1506","1507","1508","1509","1510"],"import React, { useState } from \"react\";\r\nimport {\r\n    LinearProgress,\r\n    OutlinedInput,\r\n} from \"@material-ui/core\";\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport {\r\n    Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, FormControl, InputLabel, MenuItem,\r\n    TableRow, Table,\r\n    TableHead,\r\n    TableBody,\r\n    TableCell\r\n} from \"@material-ui/core\";\r\nimport ParkService from \"./Locality/Service/parkService\";\r\n\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport ProfileRegistrationService from \"./Locality/Service/profileRegistrationService\"\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport { Grid, Card, Box, Select, TextField } from \"@material-ui/core\";\r\nimport { useFormik } from 'formik';\r\nimport { useContext, useEffect } from 'react';\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n// styles\r\n// import useStyles from \"./styles\";\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Loader from './Loader';\r\n\r\nimport mock from \"./mock\";\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { Typography } from \"../../components/Wrappers/Wrappers\";\r\nimport Dot from \"../../components/Sidebar/components/Dot\";\r\nimport BigStat from \"./components/BigStat/BigStat\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport TicketBookingService from \"./Locality/Service/ticketBookingService\";\r\n// const useStyles = makeStyles((theme) => ({\r\n//     root: {\r\n//       width: '100%',\r\n//       '& > * + *': {\r\n//         marginTop: theme.spacing(2),\r\n//       },\r\n//     },\r\n//   }));\r\nexport default function Getqr(props) {\r\n    // const classes = useStyles();\r\n    const { bookingId, parkId } = useParams();\r\n    const { parkName, setParkName } = useParams();\r\n    const [loading, setLoading] = useState(true);\r\n    var [error, setError] = useState(null);\r\n    const [mobile, setMobile] = useState('');\r\n    const [ticketDetails, setTicketDetails] = useState({ ticketDetails: [], message: '', status: false });\r\n    const [ticketBooking, setTicketBookingList] = useState({\r\n        \"status\": 'info',\r\n        \"image\": \"\",\r\n        \"message\": \"\",\r\n        \"id\": \"\"\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n\r\n        return () => {\r\n        }\r\n    }, []);\r\n    const getQr = () => {\r\n        console.log(mobile)\r\n\r\n    }\r\n    const updateMobile = (event) => {\r\n        setMobile(event.target.value)\r\n    }\r\n    const handleRedirect = () => {\r\n\r\n        props.history.push(`ticketbooking/${parkId}/${parkName}`)\r\n    };\r\n    const getByMobileList = () => {\r\n        const phoneNumberRegex = /^\\d{10}$/;\r\n\r\n        if (!mobile) {\r\n            alert(\"mobile number required\");\r\n            return\r\n        }\r\n          if(!phoneNumberRegex.test(mobile)){\r\n            alert(\"Please enter valid mobile number\");\r\n            return\r\n          }\r\n        TicketBookingService.getQRcodeByMobile({ mobile: mobile, parkId:parkId }).then((res) => {\r\n            res.status = true;\r\n            setTicketDetails(res);\r\n\r\n            // setTicketBooking(res);\r\n\r\n        }).catch((err) => {\r\n            setError(err.message);\r\n        });\r\n    }\r\n    const getByIdList = () => {\r\n\r\n        ParkService.getQRcodebyById({ bookingId: bookingId }).then((res) => {\r\n\r\n\r\n            if (res) {\r\n                if (res.status) {\r\n                    res.status = 'success';\r\n                    setTicketBookingList(res);\r\n\r\n                    // const base64Data = res.image.replace(/^data:image\\/\\w+;base64,/, '');\r\n                    // const imageBuffer = Buffer.from(base64Data, 'base64');\r\n\r\n                    // // Create a blob URL for the binary buffer\r\n                    // const blob = new Blob([imageBuffer]);\r\n                    // const blobUrl = URL.createObjectURL(blob);\r\n\r\n                    // // Create a link element and trigger the download\r\n                    // const link = document.createElement('a');\r\n                    // link.href = blobUrl;\r\n                    // link.download = mobile+'.png'; // Change the file name and extension\r\n                    // link.click();\r\n\r\n                    // // Clean up the blob URL\r\n                    // URL.revokeObjectURL(blobUrl);\r\n\r\n\r\n                } else {\r\n                    setTicketBookingList({\r\n                        \"status\": 'error',\r\n                        \"image\": \"\",\r\n                        \"message\": res.message,\r\n                        \"id\": \"\"\r\n                    })\r\n                }\r\n\r\n\r\n            } else {\r\n                setTicketBookingList({\r\n                    \"status\": 'error',\r\n                    \"image\": \"\",\r\n                    \"message\": res.message,\r\n                    \"id\": \"\"\r\n                })\r\n            }\r\n\r\n\r\n\r\n        }).catch((err) => {\r\n            // setError(err.message);\r\n        });\r\n    }\r\n    return (\r\n\r\n        <>\r\n            <Box   >\r\n                <Grid container\r\n                    spacing={0}\r\n                    direction=\"column\"\r\n                    alignItems=\"center\"\r\n\r\n                    style={{ minHeight: '100vh' }}>\r\n                    <form style={{ width: '70%' }} >\r\n                        <div >\r\n                            <Card >\r\n                                <CardHeader />\r\n\r\n                                <CardContent>\r\n\r\n                                    <Grid item xs={12}>\r\n                                        <TextField\r\n                                            style={{ width: '100%' }}\r\n                                            margin=\"dense\"\r\n                                            id=\"mobile\"\r\n                                            name=\"mobile\"\r\n                                            value={mobile}\r\n                                            onChange={updateMobile}\r\n                                            label=\"Enter Mobile Number\"\r\n                                            type=\"text\"\r\n                                            variant=\"outlined\"\r\n\r\n                                        />\r\n\r\n                                    </Grid>\r\n                                    {ticketDetails.ticketDetails.length ? <Grid container spacing={3}>\r\n\r\n                                        {ticketDetails.ticketDetails.map(({ image }) => (\r\n\r\n                                            <Grid item xs={4}>\r\n                                                <div style={{textAlign:\"center\"}}>\r\n\r\n\r\n                                                    <div >\r\n                                                        <img src={image} />\r\n                                                    </div>\r\n                                                    <div>\r\n                                                        <a href={image} download>Download</a>\r\n                                                    </div>\r\n                                                    </div>\r\n                                            </Grid>\r\n\r\n                                        ))}\r\n                                    </Grid> : ticketDetails.status ? <Alert severity=\"info\">{ticketDetails.message}</Alert> : \"\"\r\n                                    }\r\n\r\n\r\n                                </CardContent>\r\n\r\n                                <div style={{ marginTop: \"2%\" }}>\r\n                                    <Grid item xs={12}>\r\n                                        <div style={{ textAlign: 'center' }}>   \r\n   \r\n                                            <Button style={{ backgroundColor: 'rgb(255, 107, 129)', color: 'white', marginBottom: '20px' }} onClick={getByMobileList} variant=\"contained\" >Get QR</Button>\r\n                                        </div>\r\n                                    </Grid>\r\n                                </div>\r\n                            </Card>\r\n                        </div>\r\n\r\n\r\n                    </form>\r\n                </Grid>\r\n            </Box>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n","C:\\QR-code\\ui\\src\\pages\\dashboard\\Loader.js",[],"C:\\QR-code\\ui\\src\\pages\\dashboard\\Coaching.js",["1511","1512","1513","1514","1515","1516","1517","1518","1519","1520","1521","1522","1523","1524","1525","1526","1527","1528","1529","1530","1531","1532","1533","1534","1535"],"import React, { useState } from \"react\";\r\nimport {\r\n    Button, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, InputLabel, MenuItem,\r\n    TableRow, Table, List, ListItem, Checkbox, FormControlLabel,\r\n    TableHead,\r\n    TableBody, Card,\r\n    TableCell,\r\n    FormLabel, FormGroup, FormHelperText\r\n} from \"@material-ui/core\";\r\nimport ParkService from \"./Locality/Service/parkService\";\r\nimport * as Yup from 'yup';\r\nimport CoachingService from \"./Locality/Service/coachingService\";\r\nimport { Typography } from \"../../components/Wrappers/Wrappers\";\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport { Grid, Select, TextField } from \"@material-ui/core\";\r\nimport { useFormik } from 'formik';\r\nimport { useEffect } from 'react';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: \"rgb(255, 107, 129)\",\r\n        color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 200,\r\n    },\r\n}));\r\nexport default function Coaching() {\r\n    const tableHeaders = ['Batch Number', 'Start Date', 'End Date', 'Start Time', \r\n    'End Time', 'Fee', 'In Take','Edit','Delete','Download'];\r\n    const classes = useStyles();\r\n    const [coachingList, setCoachingList] = useState([]);\r\n    const [getParksList, setParks] = useState([]);\r\n    const [qrCode, setQrCode] = useState([]);\r\n    const [open, setOpen] = React.useState(false);\r\n    const [pg, setpg] = React.useState(0);\r\n    const [rpg, setrpg] = React.useState(5);\r\n    const [ticketBookingList, setTicketBookingList] = useState([]);\r\n    const [coaching, setCoaching] = useState({\r\n        batchName: '',\r\n        startDate: '',\r\n        endDate: '',\r\n        startTime: '',\r\n        endTime: '',\r\n        fee: '',\r\n        inTake: '',\r\n        \r\n    });\r\n  \r\n    const validationSchema = Yup.object().shape({\r\n        batchName: Yup.string().required('batch name is required'),\r\n        startDate: Yup.string().required('start date is required'),\r\n        endDate: Yup.string().required('end date is required'),\r\n        startTime: Yup.string().required('start time is required'),\r\n        endTime: Yup.string().required('end time is required'),\r\n        fee: Yup.string().required('fee is required'),\r\n        inTake: Yup.string().required('in take is required'),\r\n       \r\n    });\r\n    const handleChangePage = (event, newpage) => {\r\n        setpg(newpage);\r\n    }\r\n    const handleCheckboxChange = (event) => {\r\n        const { name, checked } = event.target;\r\n    };\r\n\r\n    const handleHolidaysChange = (event) => {\r\n      \r\n    };\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setrpg(parseInt(event.target.value, 10));\r\n        setpg(0);\r\n    }\r\n  \r\n    useEffect(() => {\r\n       // getParkList();\r\n    //    getParks();\r\n       getProfileId();\r\n       // getQrCode()\r\n        return () => {\r\n            setCoachingList([]);\r\n            setQrCode([]);\r\n           \r\n        }\r\n    }, []);\r\n    \r\n    // const getTicketBookingList = () => {\r\n    //     TicketBookingService.getAllTicketBooking().then((res) => {\r\n    //         setTicketBookingList(res);\r\n    //     }).catch((err) => {\r\n    //         // setError(err.message);\r\n    //     });\r\n    // }\r\n  \r\n \r\n    const getProfileId = ()=>{\r\n        const userDetails = JSON.parse(localStorage.getItem(\"userDetail\"));\r\nconsole.log(userDetails.role)\r\n\r\n   const result = userDetails.role===\"admin\" ? null:userDetails.profileId;\r\n   console.log(result)\r\n   CoachingService.addAllProfileId({profileRegistrationId:result }).then((res) => {\r\n    const updatedData = res.map(item => {\r\n        return { ...item, uistartDate: dateAndTime(item.startDate),\r\n            uiendDate:dateAndTime(item.endDate) };\r\n    });\r\n            setCoachingList(updatedData);\r\n    }).catch((err) => {\r\n        // setError(err.message);\r\n    });\r\n}\r\nconst dateAndTime = (date) => {\r\n\r\n    const systemDate = new Date(date);\r\n    const formattedDateTime = systemDate.toLocaleString('en-US', {\r\n        year: 'numeric',\r\n        month: 'long',\r\n        day: 'numeric',\r\n\r\n    });\r\n    return formattedDateTime;\r\n}\r\n    const getQrCode = (data) => {\r\n       \r\n        CoachingService.qrCode(data._id).then((res) => {\r\n            \r\n            if(res){\r\n                const base64Data = res.image.replace(/^data:image\\/\\w+;base64,/, '');\r\n                const imageBuffer = Buffer.from(base64Data, 'base64');\r\n\r\n                // Create a blob URL for the binary buffer\r\n                const blob = new Blob([imageBuffer]);\r\n                const blobUrl = URL.createObjectURL(blob);\r\n            \r\n                // Create a link element and trigger the download\r\n                const link = document.createElement('a');\r\n                link.href = blobUrl;\r\n                link.download = data.parkName+'.png'; // Change the file name and extension\r\n                link.click();\r\n            \r\n                // Clean up the blob URL\r\n                URL.revokeObjectURL(blobUrl);\r\n\r\n            }\r\n        }).catch((err) => {\r\n            // setError(err.message);\r\n        });\r\n    }\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const onclick = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const onSubmit = data => {\r\n        console.log(JSON.stringify(data, null, 2));\r\n    };\r\n    \r\n    const editCoaching = (coaching) => {\r\n        coaching.startDate=new Date(coaching.startDate);\r\n        debugger\r\n        setCoaching(coaching);\r\n        handleOpen();\r\n    \r\n\r\n    }\r\n \r\n    const deleteCoaching = (coachingdelete) => {\r\n        if (coachingdelete) {\r\n            CoachingService.deleteCoaching(coachingdelete).then((res) => {\r\n                //getParkList();\r\n                getProfileId()\r\n                onSubmit()\r\n            }).catch((err) => {\r\n            });\r\n        }\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues: coaching,\r\n        enableReinitialize: true,\r\n        validationSchema: validationSchema,\r\n        onSubmit: (values, { resetForm }) => {\r\n            const userDetails = JSON.parse(localStorage.getItem(\"userDetail\"));\r\n           \r\n            values.profileRegistrationId = userDetails.profileId;\r\n            if (coaching._id) {\r\n                CoachingService.upadeCoaching(values).then((res) => {\r\n                    handleClose();\r\n                  //  getParkList();\r\n                  getProfileId();\r\n                    resetForm()\r\n                    alert(\"Coaching Updated Successfully.\");\r\n                }).catch((err) => {\r\n                });\r\n            }\r\n            else {\r\n                \r\n                console.log(values)\r\n                // values.holidayDays = holidays;\r\n                            \r\n\r\n                CoachingService.creteCoaching(values).then((res) => {\r\n                    //getParkList();\r\n                    getProfileId();\r\n                    resetForm();\r\n                    handleClose();\r\n                    alert(\" Coaching Added Successfully.\");\r\n                    // props.history.push('/app/vendor');\r\n                })\r\n                    .catch((err) => {\r\n                        alert(err.response.data.message)\r\n                    })\r\n            }\r\n\r\n        },\r\n    });\r\n    return (\r\n        <>\r\n        \r\n            <PageTitle title=\"Batches\" button={<Button\r\n                variant=\"contained\" onClick={handleOpen}\r\n                size=\"medium\"\r\n                color=\"secondary\" style={{ backgroundColor: '#ff6b81' }}> Add Batches\r\n            </Button>} />\r\n            <Grid container spacing={4}>\r\n                <Grid item xs={12}>\r\n                    <Widget title=\"\" upperTitle noBodyPadding bodyClass={classes.tableOverflow}>\r\n                        <Table className=\"mb-0\">\r\n                            <TableHead >\r\n                                <TableRow>\r\n                                    {tableHeaders.map(key => (\r\n                                        <StyledTableCell key={key}>{key}</StyledTableCell>\r\n                                    ))}\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {coachingList.slice(pg * rpg, pg * rpg + rpg).map((coaching) => (\r\n                                    <TableRow key={coaching._id}>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{coaching.batchName}</TableCell>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{coaching.uistartDate}</TableCell>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{coaching.uiendDate}</TableCell>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{coaching.startTime}</TableCell>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{coaching.endTime}</TableCell>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{coaching.fee}</TableCell>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{coaching.inTake}</TableCell>\r\n                                        \r\n                                       \r\n                                        <TableCell>\r\n                                            <EditIcon style={{ cursor: 'pointer' }} onClick={() => editCoaching(coaching)} >\r\n                                            </EditIcon >\r\n                                        </TableCell>\r\n                                        <TableCell>\r\n                                            <DeleteIcon style={{ cursor: 'pointer' }} onClick={() => deleteCoaching(coaching)} />\r\n                                        </TableCell>\r\n                                        <TableCell>\r\n                                        <Button variant=\"contained\" onClick={() => getQrCode(coaching)} size=\"medium\" color=\"secondary\" \r\n                                        style={{ backgroundColor: '#ff6b81' }}> Download </Button>\r\n                                            {/* <QrCodeIcon style={{ cursor: 'pointer' }} onClick={() => getQrCode(park)} /> */}\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                        <TablePagination\r\n                            component=\"div\"\r\n                            rowsPerPageOptions={[5, 100, 1000]}\r\n                            count={coachingList.length}\r\n                            page={pg}\r\n                            onPageChange={handleChangePage}\r\n                            rowsPerPage={rpg}\r\n                            onRowsPerPageChange={handleChangeRowsPerPage}\r\n                        />\r\n                    </Widget>\r\n                </Grid>\r\n            </Grid>\r\n            <Dialog open={open} onClose={handleClose}>\r\n                <DialogTitle>Add orgnaization</DialogTitle>\r\n                <form onSubmit={formik.handleSubmit} >\r\n                    <DialogContent style={{ width: 519 }}>\r\n                        <TextField\r\n                        \r\n                            style={{ width: 423 }}\r\n                            id=\"batchName\"\r\n                            name=\"batchName\"\r\n                            label=\"Batch Number\"\r\n                            type=\"text\"\r\n                            onChange={formik.handleChange}\r\n                            value={formik.values.batchName}\r\n                            error={formik.touched.batchName && Boolean(formik.errors.batchName)}\r\n                            helperText={formik.touched.batchName && formik.errors.batchName}\r\n                        />\r\n                       <TextField\r\n                        style={{ width: 198 }}\r\n                        //  InputProps={{ style: { width: 198 } }}\r\n                                            id=\"startDate\"\r\n                                            name=\"startDate\"\r\n                                            label=\"Start Date\"\r\n                                            type=\"date\"\r\n                                           \r\n                                            value={formik.values.startDate}\r\n                                            onChange={formik.handleChange}\r\n                                            error={formik.touched.startDate && Boolean(formik.errors.startDate)}\r\n                            helperText={formik.touched.startDate && formik.errors.startDate}\r\n                                            className={classes.textField}\r\n                                            InputLabelProps={{\r\n                                                shrink: true,\r\n                                            }}\r\n                                        />\r\n                                         <TextField\r\n                                         style={{ width: 198 }}\r\n                                        //  InputProps={{ style: { width: 198 } }}\r\n                                            id=\"endDate\"\r\n                                            name=\"endDate\"\r\n                                            label=\"End Date\"\r\n                                            type=\"date\"\r\n                                          \r\n                                            value={formik.values.endDate}\r\n                                            onChange={formik.handleChange}\r\n                                            error={formik.touched.endDate && Boolean(formik.errors.endDate)}\r\n                            helperText={formik.touched.endDate && formik.errors.endDate}\r\n                                            className={classes.textField}\r\n                                            InputLabelProps={{\r\n                                                shrink: true,\r\n                                            }}\r\n                                        />\r\n                    \r\n                        <Grid container alignContent=\"center\" alignItems=\"center\" direction=\"row\" xs={12}>\r\n                        <Grid item xs=\"auto\">\r\n                            <form className={classes.container} noValidate>\r\n                                <TextField\r\n                                    id=\"startTime\"\r\n                                    name=\"startTime\"\r\n                                    label=\" Start Timing\"\r\n                                    type=\"time\"\r\n                                    value={formik.values.startTime}\r\n                                    onChange={formik.handleChange}\r\n                                    error={formik.touched.startTime && Boolean(formik.errors.startTime)}\r\n                    helperText={formik.touched.startTime && formik.errors.startTime}\r\n                                   \r\n                                    className={classes.textField}\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    inputProps={{\r\n                                        step: 300, // 5 min\r\n                                    }}\r\n                                />\r\n                            </form>\r\n                        </Grid>\r\n                        <Grid item xs>\r\n                        <form className={classes.container} noValidate>\r\n                                <TextField\r\n                                    id=\"endTime\"\r\n                                    name=\"endTime\"\r\n                                    label=\" End Timing\"\r\n                                    type=\"time\"\r\n                                    value={formik.values.endTime}\r\n                                    onChange={formik.handleChange}\r\n                                    error={formik.touched.endTime && Boolean(formik.errors.endTime)}\r\n                    helperText={formik.touched.endTime && formik.errors.endTime}\r\n                                    className={classes.textField}\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    inputProps={{\r\n                                        step: 300, // 5 min\r\n                                    }}\r\n                                />\r\n                            </form>\r\n                        </Grid>\r\n                        </Grid>\r\n                        <TextField\r\n                            style={{ width: 427 }}\r\n                            id=\"fee\"\r\n                            name=\"fee\"\r\n                            label=\"GST\"\r\n                            type=\"text\"\r\n                            onChange={formik.handleChange}\r\n                            value={formik.values.fee}\r\n                            error={formik.touched.note && Boolean(formik.errors.fee)}\r\n                            helperText={formik.touched.fee && formik.errors.fee}\r\n                        />\r\n                        <TextField\r\n                            style={{ width: 427 }}\r\n                            id=\"inTake\"\r\n                            name=\"inTake\"\r\n                            label=\"No. of student intake\"\r\n                            type=\"text\"\r\n                            onChange={formik.handleChange}\r\n                            value={formik.values.inTake}\r\n                            error={formik.touched.inTake && Boolean(formik.errors.inTake)}\r\n                            helperText={formik.touched.inTake && formik.errors.inTake}\r\n                        />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={handleClose}>Cancel</Button>\r\n                        <Button type=\"submit\" >Add</Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\n\r\n","C:\\QR-code\\ui\\src\\pages\\dashboard\\Locality\\Service\\coachingService.js",[],"C:\\QR-code\\ui\\src\\pages\\dashboard\\CoachingBooking.js",["1536","1537","1538","1539","1540","1541","1542","1543","1544","1545","1546","1547","1548","1549","1550","1551","1552","1553","1554","1555","1556","1557"],"import React, { useState } from \"react\";\r\nimport { Button, Card, Box } from \"@material-ui/core\";\r\nimport CoachingService from \"./Locality/Service/coachingService\";\r\nimport { Grid, TextField } from \"@material-ui/core\";\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { useFormik } from 'formik';\r\nimport { useEffect } from 'react';\r\nimport RemoveIcon from '@material-ui/icons/RemoveCircleOutlineRounded';\r\nimport AddIcon from '@material-ui/icons/AddCircleOutlineRounded';\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport CoachingBookingService from \"./Locality/Service/coachingService\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ConfirmationNumberIcon from '@material-ui/icons/ConfirmationNumber';\r\nimport PaymentIcon from '@material-ui/icons/Payment';\r\nimport Loader from './Loader';\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        minWidth: 275,\r\n    },\r\n    bullet: {\r\n        display: 'inline-block',\r\n        margin: '0 2px',\r\n        transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n        fontSize: 20,\r\n        color: 'rgb(255, 107, 129)',\r\n        fontWeight: 'bold'\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },\r\n});\r\nexport default function CoachingBooking(props) {\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(true);\r\n    const [coachingBooking, setCoachingBooking] = useState({\r\n        coachingName: '',\r\n    });\r\n    const { coachingId } = useParams();\r\n    const [mobile, setMobile] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [coachingBookingList, setCoachingBookingList] = useState([]);\r\n    const [profileRegistrationId, setProfileRegistrationId] = useState('');\r\n    var [error, setError] = useState(null);\r\n    const [items, setItems] = useState([\r\n        { id: 1, price: 50, quantity: 0 },\r\n        // { id: 2, price: 15, quantity: 0 },\r\n        // { id: 3, price: 20, quantity: 0 },\r\n    ]);\r\n    const [fee, setFee] = useState({});\r\n\r\n\r\n    const getDay = () => {\r\n        const currentDate = new Date();\r\n        const currentDayNumber = currentDate.getDay();\r\n\r\n        const daysOfWeek = [\"sun\", \"mon\", \"tue\", \"wed\", \"thu\", \"fri\", \"sat\"];\r\n        const currentDayName = daysOfWeek[currentDayNumber];\r\n        return currentDayName;\r\n    }\r\n    const handleOpen = () => {\r\n        props.history.push('/app/studentregistration/add')\r\n    };\r\n    const handleOpens = () => {\r\n        props.history.push(`/getqr/${coachingId}`)\r\n    };\r\n\r\n\r\n\r\n    const Item = ({ name, price, quantity, onIncrement, onDecrement }) => {\r\n        return (\r\n            <>\r\n                {loading && <Loader />}\r\n                <Grid item xs={4}>\r\n\r\n                    <div>\r\n                        <h4 style={{\r\n                            'overflow': 'hidden',\r\n                            'text-transform': 'uppercase',\r\n                            'text-overflow': 'ellipsis',\r\n                            'white-space': 'break-spaces'\r\n                        }}>{name}</h4>\r\n\r\n                    </div>\r\n                    <div>\r\n                        <span> &#x20b9;{price}</span>\r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                    <div style={{ textAlign: 'center' }}>\r\n                        <RemoveIcon style={{ cursor: 'pointer', width: \"18px\", height: \"18px\", }} onClick={onDecrement} />\r\n                        <span style={{ fontSize: '16px', padding: '5px' }}>{quantity}</span>\r\n                        <AddIcon style={{ cursor: 'pointer', width: \"18px\", height: \"18px\", }} onClick={onIncrement} />\r\n                    </div>\r\n\r\n                    {/* <div>\r\n            <h4> &#x20b9;{price * quantity}</h4>\r\n          </div> */}\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n\r\n\r\n                    <div style={{ textAlign: 'end' }}>\r\n                        <h4> &#x20b9;{price * quantity}</h4>\r\n                    </div>\r\n                </Grid>\r\n            </>\r\n\r\n\r\n\r\n        );\r\n    };\r\n    const pricePerItem = 10;\r\n    useEffect(() => {\r\n        getByIdList();\r\n        //  sumOfTotal();\r\n\r\n        return () => {\r\n\r\n        }\r\n    }, []);\r\n    function getRandomInt(min, max) {\r\n        min = Math.ceil(min);\r\n        max = Math.floor(max);\r\n        return Math.floor(Math.random() * (max - min + 1)) + min;\r\n    }\r\n    // const getProfileIdList = () => {\r\n\r\n    //   const userDetails = JSON.parse(localStorage.getItem(\"userDetail\"));\r\n    //   console.log(userDetails.role)\r\n\r\n    //   const result = userDetails.role === \"admin\" ? null : userDetails.profileId;\r\n    //   console.log(result)\r\n    //   \r\n    //   TicketBookingService.getAllProfileId({ profileRegistrationId: result }).then((res) => {\r\n\r\n    //     setTicketBookingList(res);\r\n\r\n    //   }).catch((err) => {\r\n    //     // setError(err.message);\r\n    //   });\r\n    // }\r\n    function isDate(val) {\r\n        // Cross realm comptatible\r\n        return Object.prototype.toString.call(val) === '[object Date]'\r\n    }\r\n    function isObj(val) {\r\n        return typeof val === 'object'\r\n    }\r\n    function stringifyValue(val) {\r\n        if (isObj(val) && !isDate(val)) {\r\n            return JSON.stringify(val)\r\n        } else {\r\n            return val\r\n        }\r\n    }\r\n    function buildForm({ action, params }) {\r\n        const form = document.createElement('form')\r\n        form.setAttribute('method', 'post')\r\n        form.setAttribute('action', action)\r\n\r\n        Object.keys(params).forEach(key => {\r\n            const input = document.createElement('input')\r\n            input.setAttribute('type', 'hidden')\r\n            input.setAttribute('name', key)\r\n            input.setAttribute('value', stringifyValue(params[key]))\r\n            form.appendChild(input)\r\n        })\r\n\r\n        return form\r\n    }\r\n    function post(details) {\r\n        const form = buildForm(details)\r\n        document.body.appendChild(form)\r\n        form.submit()\r\n        form.remove()\r\n    }\r\n    const payment = (values) => {\r\n        CoachingBookingService.paymentProcess(values).then((response) => {\r\n            var information = {\r\n                action: \"https://securegw-stage.paytm.in/order/process\",\r\n                params: response\r\n            }\r\n            post(information)\r\n        })\r\n    }\r\n    const bookTickets = () => {\r\n\r\n\r\n        const day = getDay();\r\n        const phoneNumberRegex = /^\\d{10}$/;\r\n\r\n\r\n        if (!mobile) {\r\n            alert(\"Please enter mobile number\");\r\n            return\r\n        }\r\n        if (!phoneNumberRegex.test(mobile)) {\r\n            alert(\"Please enter valid mobile number\");\r\n            return\r\n        }\r\n        // if (coachingBooking.holidayDays && coachingBooking.holidayDays.includes(day)) {\r\n        //     alert(\"You cant procced to book the ticket. today is holiday \");\r\n        //     return\r\n        // }\r\n\r\n\r\n        const ticketDetails = {\r\n            // totalAmount: totalSum,\r\n            coachingId: coachingId,\r\n            coachingName: coachingBooking.coachingName,\r\n            mobile: mobile,\r\n            paymentStatus: \"pending\",\r\n            profileRegistrationId: profileRegistrationId,\r\n        }\r\n       \r\n        CoachingBookingService.creteCoaching(ticketDetails).then((res) => {\r\n\r\n            setMobile('');\r\n            // payment({ amount: totalSum, mobile: mobile, id: res.id })\r\n            //getByIdList();\r\n\r\n\r\n\r\n\r\n            // setProfileRegistrationId();\r\n            // getTicketBookingList();\r\n            // resetForm();\r\n            // handleClose();\r\n            // getProfileIdList();\r\n            // alert(\" TicketBooking Added Successfully.\");\r\n\r\n            //   if(res){\r\n            //     const base64Data = res.image.replace(/^data:image\\/\\w+;base64,/, '');\r\n            //     const imageBuffer = Buffer.from(base64Data, 'base64');\r\n\r\n            //     // Create a blob URL for the binary buffer\r\n            //     const blob = new Blob([imageBuffer]);\r\n            //     const blobUrl = URL.createObjectURL(blob);\r\n\r\n            //     // Create a link element and trigger the download\r\n            //     const link = document.createElement('a');\r\n            //     link.href = blobUrl;\r\n            //     link.download = mobile+'.png'; // Change the file name and extension\r\n            //     link.click();\r\n\r\n            //     // Clean up the blob URL\r\n            //     URL.revokeObjectURL(blobUrl);\r\n\r\n            // }\r\n        })\r\n            .catch((err) => {\r\n\r\n                alert(err.response.data.message)\r\n            })\r\n    }\r\n\r\n    const updateMobile = (event) => {\r\n        setMobile(event.target.value)\r\n    }\r\n    const updateEmail = (event) => {\r\n        setEmail(event.target.value)\r\n    }\r\n    const dateAndTime = (date) => {\r\n\r\n        const systemDate = new Date(date);\r\n        const formattedDateTime = systemDate.toLocaleString('en-US', {\r\n            year: 'numeric',\r\n            month: 'long',\r\n            day: 'numeric',\r\n            // hour: 'numeric',\r\n            // minute: 'numeric',\r\n            // second: 'numeric',\r\n            // hour12: true,\r\n\r\n        });\r\n        return formattedDateTime;\r\n    }\r\n    const getByIdList = () => {\r\n\r\n        CoachingService.getCoachingById(coachingId).then((res) => {\r\n            const coaching = [];\r\n            if (res) {\r\n\r\n                setLoading(false);\r\n                // date: dateAndTime(item.createdAt)\r\n                res.startDate = dateAndTime(res.startDate)\r\n                res.endDate = dateAndTime(res.endDate)\r\n                //  res.startTime = dateAndTime(res.startTime)\r\n                //  res.endTime = dateAndTime(res.endTime)\r\n                setFee(res);\r\n                // setTicketBooking(res);\r\n\r\n            }\r\n\r\n\r\n\r\n        }).catch((err) => {\r\n            setError(err.message);\r\n        });\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues: coachingBooking,\r\n        enableReinitialize: true,\r\n        // validationSchema: validationSchema,\r\n        onSubmit: (values, { resetForm }) => {\r\n            //   SchooleRegistrationService.creteSchooleRegistration(values).then((res) => {\r\n\r\n            //     alert(\" Registration Successfully.\");\r\n            //     props.history.push('/montessori/login');\r\n            //   })\r\n            //     .catch((err) => {\r\n            //       alert(err.response.data.message);\r\n            //     })\r\n        },\r\n    });\r\n\r\n    // const totalSum = gst.reduce((sum, item) => sum + item.price * item.quantity, 0);\r\n\r\n    return (\r\n        <>\r\n\r\n\r\n\r\n            <Box   >\r\n                <Grid container\r\n                    spacing={0}\r\n                    direction=\"column\"\r\n                    alignItems=\"center\"\r\n\r\n                    style={{ minHeight: '100vh' }}>\r\n                    <form onSubmit={formik.handleSubmit} style={{ width: '70%' }} >\r\n                        <div >\r\n                            <Card >\r\n                                <CardHeader\r\n                                    avatar={\r\n\r\n                                        <LocationOnIcon style={{ color: 'rgb(255, 107, 129)', fontSize: 25 }} />\r\n\r\n                                    }\r\n\r\n\r\n                                    // action={\r\n                                    //   <IconButton aria-label=\"settings\">\r\n\r\n                                    //   </IconButton>\r\n                                    // }\r\n                                    // titleTypographyProps={{variant:'h6' }}\r\n\r\n                                    classes={{\r\n                                        title: classes.title\r\n                                    }}\r\n                                    title=\"Booking For\"\r\n\r\n                                />\r\n                                {/* <Grid item xs={12}>\r\n                    <PageTitle title=\"Ticket Booking\" />\r\n                  </Grid> */}\r\n                                <CardContent>\r\n                                    {(coachingBooking?.isCloakRoom || coachingBooking?.isHolidays || coachingBooking?.holidayDays) ? <Grid item xs={12}>\r\n                                        <h4> Note: <span style={{\r\n                                            'color': \"#0a88e4\",\r\n                                            'font-size': \"13px\"\r\n                                        }}>\r\n                                            {coachingBooking?.isCloakRoom ? <span>1.Cloak room Avilable</span> : ''},{coachingBooking?.isHolidays ? <span>2.Holidays on {coachingBooking?.holidayDays}</span> : ''}\r\n                                        </span></h4>\r\n\r\n                                    </Grid> : ''}\r\n\r\n                                    <Grid item xs={12} >\r\n                                        <TextField\r\n                                            autoFocus\r\n                                            margin=\"dense\"\r\n                                            id=\"studentName\"\r\n                                            name=\"studentName\"\r\n                                            value={coachingBooking.studentName}\r\n                                            label=\"Name Of The Student\"\r\n                                            type=\"text\"\r\n                                            variant=\"outlined\"\r\n                                            style={{ width: '100%' }}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <TextField\r\n                                            style={{ width: '100%' }}\r\n                                            margin=\"dense\"\r\n                                            id=\"mobile\"\r\n                                            name=\"mobile\"\r\n                                            value={mobile}\r\n                                            onChange={updateMobile}\r\n                                            label=\"Enter Mobile Number\"\r\n                                            type=\"text\"\r\n                                            variant=\"outlined\"\r\n\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <TextField\r\n                                            style={{ width: '100%' }}\r\n                                            margin=\"dense\"\r\n                                            id=\"email\"\r\n                                            name=\"email\"\r\n                                            label=\"Email ID \"\r\n                                            type=\"Email ID\"\r\n                                            value={email}\r\n                                            onChange={updateEmail}\r\n                                            variant=\"outlined\"\r\n\r\n                                        />\r\n                                    </Grid>\r\n                                </CardContent>\r\n\r\n\r\n                            </Card>\r\n                        </div>\r\n                        <div style={{ marginTop: \"2%\" }}>\r\n                            <Card >\r\n\r\n                                <CardHeader\r\n                                    avatar={\r\n\r\n                                        <ConfirmationNumberIcon style={{ color: 'rgb(255, 107, 129)', fontSize: 25 }} />\r\n\r\n                                    }\r\n                                    classes={{\r\n                                        title: classes.title\r\n                                    }}\r\n                                    title=\"Timings\"\r\n\r\n                                />\r\n                                <CardContent>\r\n                                    <Grid container spacing={3}>\r\n                                        <Grid item xs={4}>\r\n\r\n                                            <div>\r\n                                                <h6>Batch Number:{fee?.batchName}</h6>\r\n                                                <div>\r\n                                                <h6 style={{\r\n                                                    'overflow': 'hidden',\r\n                                                    \r\n                                                    'text-overflow': 'ellipsis',\r\n                                                    'white-space': 'break-spaces'\r\n                                                }}>Start Date:{fee?.startDate}</h6>\r\n</div>\r\n                                            </div>\r\n                                            <div>\r\n                                                <h6>End Date:{fee?.endDate}</h6> \r\n                                            </div>\r\n                                        </Grid>\r\n                                        <Grid item xs={4}>\r\n                                            <h6>Start Timings:{fee?.startTime}</h6>\r\n                                            \r\n\r\n                                            {/* <div>\r\n<h4> &#x20b9;{price * quantity}</h4>\r\n</div> */}\r\n                                        </Grid>\r\n                                        <Grid item xs={4}>\r\n\r\n\r\n                                            <div style={{ textAlign: 'end' }}>\r\n                                            <h6>End Timings:{fee?.endTime}</h6>\r\n                                            </div>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </CardContent>\r\n\r\n\r\n                            </Card>\r\n                        </div>\r\n                        <div style={{ marginTop: \"2%\" }}>\r\n                            <Card >\r\n\r\n                                <CardHeader\r\n                                    avatar={\r\n\r\n                                        <PaymentIcon style={{ color: 'rgb(255, 107, 129)', fontSize: 25 }} />\r\n\r\n                                    }\r\n                                    classes={{\r\n                                        title: classes.title\r\n                                    }}\r\n                                    title=\"Summary\"\r\n\r\n                                />\r\n                                <CardContent>\r\n                                    <Grid container spacing={3}>\r\n                                        <Grid item xs={6}>\r\n                                            <h4> GST:</h4>\r\n                                        </Grid>\r\n                                        <Grid item xs={6}>\r\n                                            <div style={{ textAlign: 'end' }}>\r\n                                                <h3>{fee?.fee}  &#x20b9;  00</h3>\r\n                                            </div>\r\n\r\n                                        </Grid>\r\n                                    </Grid>\r\n\r\n\r\n\r\n                                </CardContent>\r\n                            </Card>\r\n                        </div>\r\n                        <div style={{ marginTop: \"2%\" }}>\r\n                            <Grid item xs={12}>\r\n                                <div style={{ textAlign: 'left' }}>\r\n                                    {/* <a href=\"javascript:void(0)\" class=\"btn\" ><i class=\"lni lni-apple\"></i> Book More Tickets</a> */}\r\n                                    {/* <PublicRoute path=\"/ticketbooking/:parkId\" component={TicketBooking} /> */}\r\n\r\n                                    <a style={{ fontWeight: 'bold', color: '#ff6b81', fontSize: 'large' }} href=\"javascript:void(0)\" onClick={handleOpens} class=\"page-scroll active\"> Get QR</a>\r\n                                </div>\r\n                            </Grid>\r\n                        </div>\r\n\r\n                        <div style={{ marginTop: \"2%\" }}>\r\n                            <Grid item xs={12}>\r\n                                <div style={{ textAlign: 'center' }}>\r\n                                    <Button style={{ backgroundColor: 'rgb(255, 107, 129)', color: 'white', marginBottom: '20px' }} onClick={bookTickets} variant=\"contained\" >Book</Button>\r\n                                </div>\r\n                            </Grid>\r\n                        </div>\r\n                    </form>\r\n                </Grid>\r\n            </Box>\r\n\r\n\r\n\r\n\r\n\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n",{"ruleId":"1558","replacedBy":"1559"},{"ruleId":"1560","replacedBy":"1561"},{"ruleId":"1562","severity":1,"message":"1563","line":10,"column":14,"nodeType":"1564","messageId":"1565","endLine":10,"endColumn":24},{"ruleId":"1562","severity":1,"message":"1566","line":10,"column":26,"nodeType":"1564","messageId":"1565","endLine":10,"endColumn":30},{"ruleId":"1562","severity":1,"message":"1567","line":11,"column":8,"nodeType":"1564","messageId":"1565","endLine":11,"endColumn":12},{"ruleId":"1562","severity":1,"message":"1568","line":22,"column":18,"nodeType":"1564","messageId":"1565","endLine":22,"endColumn":30},{"ruleId":"1562","severity":1,"message":"1569","line":23,"column":17,"nodeType":"1564","messageId":"1565","endLine":23,"endColumn":28},{"ruleId":"1562","severity":1,"message":"1570","line":24,"column":16,"nodeType":"1564","messageId":"1565","endLine":24,"endColumn":26},{"ruleId":"1562","severity":1,"message":"1571","line":31,"column":8,"nodeType":"1564","messageId":"1565","endLine":31,"endColumn":14},{"ruleId":"1562","severity":1,"message":"1572","line":32,"column":8,"nodeType":"1564","messageId":"1565","endLine":32,"endColumn":15},{"ruleId":"1562","severity":1,"message":"1573","line":35,"column":8,"nodeType":"1564","messageId":"1565","endLine":35,"endColumn":17},{"ruleId":"1562","severity":1,"message":"1574","line":36,"column":8,"nodeType":"1564","messageId":"1565","endLine":36,"endColumn":18},{"ruleId":"1562","severity":1,"message":"1575","line":37,"column":8,"nodeType":"1564","messageId":"1565","endLine":37,"endColumn":21},{"ruleId":"1562","severity":1,"message":"1576","line":38,"column":8,"nodeType":"1564","messageId":"1565","endLine":38,"endColumn":12},{"ruleId":"1562","severity":1,"message":"1577","line":41,"column":8,"nodeType":"1564","messageId":"1565","endLine":41,"endColumn":13},{"ruleId":"1562","severity":1,"message":"1578","line":42,"column":8,"nodeType":"1564","messageId":"1565","endLine":42,"endColumn":14},{"ruleId":"1562","severity":1,"message":"1579","line":46,"column":10,"nodeType":"1564","messageId":"1565","endLine":46,"endColumn":18},{"ruleId":"1562","severity":1,"message":"1563","line":26,"column":14,"nodeType":"1564","messageId":"1565","endLine":26,"endColumn":24},{"ruleId":"1562","severity":1,"message":"1566","line":26,"column":26,"nodeType":"1564","messageId":"1565","endLine":26,"endColumn":30},{"ruleId":"1562","severity":1,"message":"1567","line":27,"column":8,"nodeType":"1564","messageId":"1565","endLine":27,"endColumn":12},{"ruleId":"1562","severity":1,"message":"1568","line":29,"column":18,"nodeType":"1564","messageId":"1565","endLine":29,"endColumn":30},{"ruleId":"1562","severity":1,"message":"1569","line":30,"column":17,"nodeType":"1564","messageId":"1565","endLine":30,"endColumn":28},{"ruleId":"1562","severity":1,"message":"1570","line":31,"column":16,"nodeType":"1564","messageId":"1565","endLine":31,"endColumn":26},{"ruleId":"1562","severity":1,"message":"1576","line":43,"column":8,"nodeType":"1564","messageId":"1565","endLine":43,"endColumn":12},{"ruleId":"1562","severity":1,"message":"1579","line":48,"column":10,"nodeType":"1564","messageId":"1565","endLine":48,"endColumn":18},{"ruleId":"1562","severity":1,"message":"1563","line":5,"column":3,"nodeType":"1564","messageId":"1565","endLine":5,"endColumn":13},{"ruleId":"1562","severity":1,"message":"1580","line":6,"column":3,"nodeType":"1564","messageId":"1565","endLine":6,"endColumn":12},{"ruleId":"1562","severity":1,"message":"1581","line":8,"column":3,"nodeType":"1564","messageId":"1565","endLine":8,"endColumn":11},{"ruleId":"1562","severity":1,"message":"1582","line":9,"column":3,"nodeType":"1564","messageId":"1565","endLine":9,"endColumn":6},{"ruleId":"1562","severity":1,"message":"1583","line":11,"column":3,"nodeType":"1564","messageId":"1565","endLine":11,"endColumn":9},{"ruleId":"1562","severity":1,"message":"1584","line":13,"column":10,"nodeType":"1564","messageId":"1565","endLine":13,"endColumn":14},{"ruleId":"1562","severity":1,"message":"1585","line":13,"column":16,"nodeType":"1564","messageId":"1565","endLine":13,"endColumn":20},{"ruleId":"1562","severity":1,"message":"1586","line":13,"column":22,"nodeType":"1564","messageId":"1565","endLine":13,"endColumn":25},{"ruleId":"1562","severity":1,"message":"1587","line":13,"column":27,"nodeType":"1564","messageId":"1565","endLine":13,"endColumn":38},{"ruleId":"1562","severity":1,"message":"1588","line":13,"column":40,"nodeType":"1564","messageId":"1565","endLine":13,"endColumn":46},{"ruleId":"1562","severity":1,"message":"1589","line":13,"column":48,"nodeType":"1564","messageId":"1565","endLine":13,"endColumn":58},{"ruleId":"1562","severity":1,"message":"1590","line":13,"column":60,"nodeType":"1564","messageId":"1565","endLine":13,"endColumn":69},{"ruleId":"1562","severity":1,"message":"1591","line":14,"column":8,"nodeType":"1564","messageId":"1565","endLine":14,"endColumn":13},{"ruleId":"1562","severity":1,"message":"1566","line":17,"column":3,"nodeType":"1564","messageId":"1565","endLine":17,"endColumn":7},{"ruleId":"1562","severity":1,"message":"1592","line":19,"column":10,"nodeType":"1564","messageId":"1565","endLine":19,"endColumn":23},{"ruleId":"1562","severity":1,"message":"1593","line":19,"column":25,"nodeType":"1564","messageId":"1565","endLine":19,"endColumn":31},{"ruleId":"1562","severity":1,"message":"1594","line":19,"column":33,"nodeType":"1564","messageId":"1565","endLine":19,"endColumn":38},{"ruleId":"1562","severity":1,"message":"1595","line":22,"column":11,"nodeType":"1564","messageId":"1565","endLine":22,"endColumn":19},{"ruleId":"1562","severity":1,"message":"1596","line":25,"column":11,"nodeType":"1564","messageId":"1565","endLine":25,"endColumn":19},{"ruleId":"1562","severity":1,"message":"1597","line":26,"column":16,"nodeType":"1564","messageId":"1565","endLine":26,"endColumn":29},{"ruleId":"1562","severity":1,"message":"1598","line":28,"column":10,"nodeType":"1564","messageId":"1565","endLine":28,"endColumn":14},{"ruleId":"1562","severity":1,"message":"1599","line":29,"column":8,"nodeType":"1564","messageId":"1565","endLine":29,"endColumn":18},{"ruleId":"1562","severity":1,"message":"1600","line":31,"column":10,"nodeType":"1564","messageId":"1565","endLine":31,"endColumn":15},{"ruleId":"1562","severity":1,"message":"1601","line":33,"column":8,"nodeType":"1564","messageId":"1565","endLine":33,"endColumn":18},{"ruleId":"1562","severity":1,"message":"1602","line":35,"column":7,"nodeType":"1564","messageId":"1565","endLine":35,"endColumn":15},{"ruleId":"1562","severity":1,"message":"1587","line":3,"column":64,"nodeType":"1564","messageId":"1565","endLine":3,"endColumn":75},{"ruleId":"1562","severity":1,"message":"1589","line":3,"column":77,"nodeType":"1564","messageId":"1565","endLine":3,"endColumn":87},{"ruleId":"1562","severity":1,"message":"1581","line":3,"column":89,"nodeType":"1564","messageId":"1565","endLine":3,"endColumn":97},{"ruleId":"1562","severity":1,"message":"1588","line":12,"column":16,"nodeType":"1564","messageId":"1565","endLine":12,"endColumn":22},{"ruleId":"1562","severity":1,"message":"1603","line":42,"column":11,"nodeType":"1564","messageId":"1565","endLine":42,"endColumn":23},{"ruleId":"1562","severity":1,"message":"1604","line":52,"column":12,"nodeType":"1564","messageId":"1565","endLine":52,"endColumn":15},{"ruleId":"1562","severity":1,"message":"1605","line":53,"column":10,"nodeType":"1564","messageId":"1565","endLine":53,"endColumn":15},{"ruleId":"1562","severity":1,"message":"1606","line":53,"column":17,"nodeType":"1564","messageId":"1565","endLine":53,"endColumn":25},{"ruleId":"1562","severity":1,"message":"1607","line":54,"column":12,"nodeType":"1564","messageId":"1565","endLine":54,"endColumn":23},{"ruleId":"1562","severity":1,"message":"1608","line":54,"column":25,"nodeType":"1564","messageId":"1565","endLine":54,"endColumn":39},{"ruleId":"1562","severity":1,"message":"1609","line":87,"column":11,"nodeType":"1564","messageId":"1565","endLine":87,"endColumn":18},{"ruleId":"1562","severity":1,"message":"1610","line":93,"column":11,"nodeType":"1564","messageId":"1565","endLine":93,"endColumn":23},{"ruleId":"1562","severity":1,"message":"1611","line":96,"column":11,"nodeType":"1564","messageId":"1565","endLine":96,"endColumn":19},{"ruleId":"1562","severity":1,"message":"1587","line":3,"column":64,"nodeType":"1564","messageId":"1565","endLine":3,"endColumn":75},{"ruleId":"1562","severity":1,"message":"1589","line":3,"column":77,"nodeType":"1564","messageId":"1565","endLine":3,"endColumn":87},{"ruleId":"1562","severity":1,"message":"1581","line":3,"column":89,"nodeType":"1564","messageId":"1565","endLine":3,"endColumn":97},{"ruleId":"1562","severity":1,"message":"1588","line":12,"column":16,"nodeType":"1564","messageId":"1565","endLine":12,"endColumn":22},{"ruleId":"1562","severity":1,"message":"1612","line":42,"column":11,"nodeType":"1564","messageId":"1565","endLine":42,"endColumn":23},{"ruleId":"1562","severity":1,"message":"1604","line":53,"column":12,"nodeType":"1564","messageId":"1565","endLine":53,"endColumn":15},{"ruleId":"1562","severity":1,"message":"1605","line":54,"column":10,"nodeType":"1564","messageId":"1565","endLine":54,"endColumn":15},{"ruleId":"1562","severity":1,"message":"1606","line":54,"column":17,"nodeType":"1564","messageId":"1565","endLine":54,"endColumn":25},{"ruleId":"1562","severity":1,"message":"1607","line":55,"column":12,"nodeType":"1564","messageId":"1565","endLine":55,"endColumn":23},{"ruleId":"1562","severity":1,"message":"1608","line":55,"column":25,"nodeType":"1564","messageId":"1565","endLine":55,"endColumn":39},{"ruleId":"1562","severity":1,"message":"1609","line":90,"column":11,"nodeType":"1564","messageId":"1565","endLine":90,"endColumn":18},{"ruleId":"1562","severity":1,"message":"1610","line":96,"column":11,"nodeType":"1564","messageId":"1565","endLine":96,"endColumn":23},{"ruleId":"1562","severity":1,"message":"1611","line":99,"column":11,"nodeType":"1564","messageId":"1565","endLine":99,"endColumn":19},{"ruleId":"1562","severity":1,"message":"1587","line":3,"column":64,"nodeType":"1564","messageId":"1565","endLine":3,"endColumn":75},{"ruleId":"1562","severity":1,"message":"1589","line":3,"column":77,"nodeType":"1564","messageId":"1565","endLine":3,"endColumn":87},{"ruleId":"1562","severity":1,"message":"1581","line":3,"column":89,"nodeType":"1564","messageId":"1565","endLine":3,"endColumn":97},{"ruleId":"1562","severity":1,"message":"1588","line":12,"column":16,"nodeType":"1564","messageId":"1565","endLine":12,"endColumn":22},{"ruleId":"1562","severity":1,"message":"1604","line":44,"column":12,"nodeType":"1564","messageId":"1565","endLine":44,"endColumn":15},{"ruleId":"1562","severity":1,"message":"1605","line":45,"column":10,"nodeType":"1564","messageId":"1565","endLine":45,"endColumn":15},{"ruleId":"1562","severity":1,"message":"1606","line":45,"column":17,"nodeType":"1564","messageId":"1565","endLine":45,"endColumn":25},{"ruleId":"1562","severity":1,"message":"1607","line":46,"column":12,"nodeType":"1564","messageId":"1565","endLine":46,"endColumn":23},{"ruleId":"1562","severity":1,"message":"1608","line":46,"column":25,"nodeType":"1564","messageId":"1565","endLine":46,"endColumn":39},{"ruleId":"1562","severity":1,"message":"1609","line":81,"column":11,"nodeType":"1564","messageId":"1565","endLine":81,"endColumn":18},{"ruleId":"1562","severity":1,"message":"1610","line":87,"column":11,"nodeType":"1564","messageId":"1565","endLine":87,"endColumn":23},{"ruleId":"1562","severity":1,"message":"1611","line":90,"column":11,"nodeType":"1564","messageId":"1565","endLine":90,"endColumn":19},{"ruleId":"1562","severity":1,"message":"1613","line":3,"column":13,"nodeType":"1564","messageId":"1565","endLine":3,"endColumn":19},{"ruleId":"1562","severity":1,"message":"1614","line":3,"column":21,"nodeType":"1564","messageId":"1565","endLine":3,"endColumn":34},{"ruleId":"1562","severity":1,"message":"1615","line":3,"column":36,"nodeType":"1564","messageId":"1565","endLine":3,"endColumn":49},{"ruleId":"1562","severity":1,"message":"1616","line":3,"column":51,"nodeType":"1564","messageId":"1565","endLine":3,"endColumn":62},{"ruleId":"1562","severity":1,"message":"1617","line":15,"column":8,"nodeType":"1564","messageId":"1565","endLine":15,"endColumn":20},{"ruleId":"1562","severity":1,"message":"1590","line":19,"column":24,"nodeType":"1564","messageId":"1565","endLine":19,"endColumn":33},{"ruleId":"1562","severity":1,"message":"1618","line":20,"column":10,"nodeType":"1564","messageId":"1565","endLine":20,"endColumn":19},{"ruleId":"1562","severity":1,"message":"1619","line":22,"column":8,"nodeType":"1564","messageId":"1565","endLine":22,"endColumn":18},{"ruleId":"1562","severity":1,"message":"1620","line":23,"column":8,"nodeType":"1564","messageId":"1565","endLine":23,"endColumn":16},{"ruleId":"1562","severity":1,"message":"1621","line":54,"column":12,"nodeType":"1564","messageId":"1565","endLine":54,"endColumn":21},{"ruleId":"1562","severity":1,"message":"1622","line":55,"column":12,"nodeType":"1564","messageId":"1565","endLine":55,"endColumn":21},{"ruleId":"1562","severity":1,"message":"1623","line":55,"column":23,"nodeType":"1564","messageId":"1565","endLine":55,"endColumn":35},{"ruleId":"1562","severity":1,"message":"1604","line":56,"column":12,"nodeType":"1564","messageId":"1565","endLine":56,"endColumn":15},{"ruleId":"1562","severity":1,"message":"1624","line":56,"column":17,"nodeType":"1564","messageId":"1565","endLine":56,"endColumn":23},{"ruleId":"1562","severity":1,"message":"1625","line":58,"column":19,"nodeType":"1564","messageId":"1565","endLine":58,"endColumn":29},{"ruleId":"1562","severity":1,"message":"1626","line":59,"column":19,"nodeType":"1564","messageId":"1565","endLine":59,"endColumn":29},{"ruleId":"1562","severity":1,"message":"1605","line":60,"column":10,"nodeType":"1564","messageId":"1565","endLine":60,"endColumn":15},{"ruleId":"1562","severity":1,"message":"1607","line":62,"column":12,"nodeType":"1564","messageId":"1565","endLine":62,"endColumn":23},{"ruleId":"1562","severity":1,"message":"1608","line":62,"column":25,"nodeType":"1564","messageId":"1565","endLine":62,"endColumn":39},{"ruleId":"1562","severity":1,"message":"1627","line":63,"column":12,"nodeType":"1564","messageId":"1565","endLine":63,"endColumn":16},{"ruleId":"1562","severity":1,"message":"1628","line":63,"column":18,"nodeType":"1564","messageId":"1565","endLine":63,"endColumn":25},{"ruleId":"1562","severity":1,"message":"1629","line":66,"column":12,"nodeType":"1564","messageId":"1565","endLine":66,"endColumn":26},{"ruleId":"1562","severity":1,"message":"1630","line":66,"column":28,"nodeType":"1564","messageId":"1565","endLine":66,"endColumn":45},{"ruleId":"1562","severity":1,"message":"1631","line":67,"column":12,"nodeType":"1564","messageId":"1565","endLine":67,"endColumn":19},{"ruleId":"1562","severity":1,"message":"1632","line":67,"column":21,"nodeType":"1564","messageId":"1565","endLine":67,"endColumn":31},{"ruleId":"1562","severity":1,"message":"1633","line":74,"column":11,"nodeType":"1564","messageId":"1565","endLine":74,"endColumn":27},{"ruleId":"1562","severity":1,"message":"1613","line":3,"column":13,"nodeType":"1564","messageId":"1565","endLine":3,"endColumn":19},{"ruleId":"1562","severity":1,"message":"1614","line":3,"column":21,"nodeType":"1564","messageId":"1565","endLine":3,"endColumn":34},{"ruleId":"1562","severity":1,"message":"1615","line":3,"column":36,"nodeType":"1564","messageId":"1565","endLine":3,"endColumn":49},{"ruleId":"1562","severity":1,"message":"1616","line":3,"column":51,"nodeType":"1564","messageId":"1565","endLine":3,"endColumn":62},{"ruleId":"1562","severity":1,"message":"1617","line":15,"column":8,"nodeType":"1564","messageId":"1565","endLine":15,"endColumn":20},{"ruleId":"1562","severity":1,"message":"1590","line":19,"column":24,"nodeType":"1564","messageId":"1565","endLine":19,"endColumn":33},{"ruleId":"1562","severity":1,"message":"1618","line":20,"column":10,"nodeType":"1564","messageId":"1565","endLine":20,"endColumn":19},{"ruleId":"1562","severity":1,"message":"1619","line":22,"column":8,"nodeType":"1564","messageId":"1565","endLine":22,"endColumn":18},{"ruleId":"1562","severity":1,"message":"1620","line":23,"column":8,"nodeType":"1564","messageId":"1565","endLine":23,"endColumn":16},{"ruleId":"1562","severity":1,"message":"1621","line":55,"column":12,"nodeType":"1564","messageId":"1565","endLine":55,"endColumn":21},{"ruleId":"1562","severity":1,"message":"1622","line":56,"column":12,"nodeType":"1564","messageId":"1565","endLine":56,"endColumn":21},{"ruleId":"1562","severity":1,"message":"1623","line":56,"column":23,"nodeType":"1564","messageId":"1565","endLine":56,"endColumn":35},{"ruleId":"1562","severity":1,"message":"1604","line":57,"column":12,"nodeType":"1564","messageId":"1565","endLine":57,"endColumn":15},{"ruleId":"1562","severity":1,"message":"1625","line":59,"column":19,"nodeType":"1564","messageId":"1565","endLine":59,"endColumn":29},{"ruleId":"1562","severity":1,"message":"1626","line":60,"column":19,"nodeType":"1564","messageId":"1565","endLine":60,"endColumn":29},{"ruleId":"1562","severity":1,"message":"1605","line":61,"column":10,"nodeType":"1564","messageId":"1565","endLine":61,"endColumn":15},{"ruleId":"1562","severity":1,"message":"1607","line":63,"column":12,"nodeType":"1564","messageId":"1565","endLine":63,"endColumn":23},{"ruleId":"1562","severity":1,"message":"1608","line":63,"column":25,"nodeType":"1564","messageId":"1565","endLine":63,"endColumn":39},{"ruleId":"1562","severity":1,"message":"1627","line":64,"column":12,"nodeType":"1564","messageId":"1565","endLine":64,"endColumn":16},{"ruleId":"1562","severity":1,"message":"1629","line":67,"column":12,"nodeType":"1564","messageId":"1565","endLine":67,"endColumn":26},{"ruleId":"1562","severity":1,"message":"1630","line":67,"column":28,"nodeType":"1564","messageId":"1565","endLine":67,"endColumn":45},{"ruleId":"1562","severity":1,"message":"1634","line":68,"column":12,"nodeType":"1564","messageId":"1565","endLine":68,"endColumn":31},{"ruleId":"1562","severity":1,"message":"1635","line":68,"column":33,"nodeType":"1564","messageId":"1565","endLine":68,"endColumn":55},{"ruleId":"1562","severity":1,"message":"1633","line":75,"column":11,"nodeType":"1564","messageId":"1565","endLine":75,"endColumn":27},{"ruleId":"1562","severity":1,"message":"1636","line":126,"column":11,"nodeType":"1564","messageId":"1565","endLine":126,"endColumn":21},{"ruleId":"1562","severity":1,"message":"1609","line":129,"column":11,"nodeType":"1564","messageId":"1565","endLine":129,"endColumn":18},{"ruleId":"1562","severity":1,"message":"1637","line":132,"column":11,"nodeType":"1564","messageId":"1565","endLine":132,"endColumn":22},{"ruleId":"1562","severity":1,"message":"1610","line":135,"column":11,"nodeType":"1564","messageId":"1565","endLine":135,"endColumn":23},{"ruleId":"1562","severity":1,"message":"1604","line":46,"column":12,"nodeType":"1564","messageId":"1565","endLine":46,"endColumn":15},{"ruleId":"1562","severity":1,"message":"1605","line":47,"column":10,"nodeType":"1564","messageId":"1565","endLine":47,"endColumn":15},{"ruleId":"1562","severity":1,"message":"1607","line":48,"column":12,"nodeType":"1564","messageId":"1565","endLine":48,"endColumn":23},{"ruleId":"1562","severity":1,"message":"1608","line":48,"column":25,"nodeType":"1564","messageId":"1565","endLine":48,"endColumn":39},{"ruleId":"1562","severity":1,"message":"1609","line":105,"column":11,"nodeType":"1564","messageId":"1565","endLine":105,"endColumn":18},{"ruleId":"1562","severity":1,"message":"1610","line":111,"column":11,"nodeType":"1564","messageId":"1565","endLine":111,"endColumn":23},{"ruleId":"1562","severity":1,"message":"1611","line":114,"column":11,"nodeType":"1564","messageId":"1565","endLine":114,"endColumn":19},{"ruleId":"1562","severity":1,"message":"1638","line":116,"column":15,"nodeType":"1564","messageId":"1565","endLine":116,"endColumn":39},{"ruleId":"1562","severity":1,"message":"1639","line":138,"column":11,"nodeType":"1564","messageId":"1565","endLine":138,"endColumn":26},{"ruleId":"1562","severity":1,"message":"1640","line":151,"column":11,"nodeType":"1564","messageId":"1565","endLine":151,"endColumn":25},{"ruleId":"1562","severity":1,"message":"1641","line":160,"column":11,"nodeType":"1564","messageId":"1565","endLine":160,"endColumn":29},{"ruleId":"1562","severity":1,"message":"1642","line":3,"column":3,"nodeType":"1564","messageId":"1565","endLine":3,"endColumn":17},{"ruleId":"1562","severity":1,"message":"1643","line":4,"column":3,"nodeType":"1564","messageId":"1565","endLine":4,"endColumn":16},{"ruleId":"1562","severity":1,"message":"1644","line":6,"column":8,"nodeType":"1564","messageId":"1565","endLine":6,"endColumn":22},{"ruleId":"1562","severity":1,"message":"1613","line":8,"column":11,"nodeType":"1564","messageId":"1565","endLine":8,"endColumn":17},{"ruleId":"1562","severity":1,"message":"1614","line":8,"column":19,"nodeType":"1564","messageId":"1565","endLine":8,"endColumn":32},{"ruleId":"1562","severity":1,"message":"1615","line":8,"column":34,"nodeType":"1564","messageId":"1565","endLine":8,"endColumn":47},{"ruleId":"1562","severity":1,"message":"1645","line":8,"column":49,"nodeType":"1564","messageId":"1565","endLine":8,"endColumn":66},{"ruleId":"1562","severity":1,"message":"1616","line":8,"column":68,"nodeType":"1564","messageId":"1565","endLine":8,"endColumn":79},{"ruleId":"1562","severity":1,"message":"1646","line":9,"column":3,"nodeType":"1564","messageId":"1565","endLine":9,"endColumn":11},{"ruleId":"1562","severity":1,"message":"1647","line":9,"column":13,"nodeType":"1564","messageId":"1565","endLine":9,"endColumn":18},{"ruleId":"1562","severity":1,"message":"1648","line":10,"column":3,"nodeType":"1564","messageId":"1565","endLine":10,"endColumn":12},{"ruleId":"1562","severity":1,"message":"1649","line":11,"column":3,"nodeType":"1564","messageId":"1565","endLine":11,"endColumn":12},{"ruleId":"1562","severity":1,"message":"1650","line":12,"column":3,"nodeType":"1564","messageId":"1565","endLine":12,"endColumn":12},{"ruleId":"1562","severity":1,"message":"1651","line":18,"column":8,"nodeType":"1564","messageId":"1565","endLine":18,"endColumn":13},{"ruleId":"1562","severity":1,"message":"1652","line":19,"column":8,"nodeType":"1564","messageId":"1565","endLine":19,"endColumn":18},{"ruleId":"1562","severity":1,"message":"1653","line":20,"column":8,"nodeType":"1564","messageId":"1565","endLine":20,"endColumn":24},{"ruleId":"1562","severity":1,"message":"1654","line":21,"column":8,"nodeType":"1564","messageId":"1565","endLine":21,"endColumn":17},{"ruleId":"1562","severity":1,"message":"1655","line":24,"column":10,"nodeType":"1564","messageId":"1565","endLine":24,"endColumn":20},{"ruleId":"1562","severity":1,"message":"1656","line":25,"column":10,"nodeType":"1564","messageId":"1565","endLine":25,"endColumn":18},{"ruleId":"1562","severity":1,"message":"1657","line":27,"column":3,"nodeType":"1564","messageId":"1565","endLine":27,"endColumn":22},{"ruleId":"1562","severity":1,"message":"1658","line":28,"column":3,"nodeType":"1564","messageId":"1565","endLine":28,"endColumn":16},{"ruleId":"1562","severity":1,"message":"1659","line":29,"column":3,"nodeType":"1564","messageId":"1565","endLine":29,"endColumn":12},{"ruleId":"1562","severity":1,"message":"1660","line":30,"column":3,"nodeType":"1564","messageId":"1565","endLine":30,"endColumn":12},{"ruleId":"1562","severity":1,"message":"1661","line":31,"column":3,"nodeType":"1564","messageId":"1565","endLine":31,"endColumn":7},{"ruleId":"1562","severity":1,"message":"1662","line":32,"column":3,"nodeType":"1564","messageId":"1565","endLine":32,"endColumn":7},{"ruleId":"1562","severity":1,"message":"1663","line":33,"column":3,"nodeType":"1564","messageId":"1565","endLine":33,"endColumn":11},{"ruleId":"1562","severity":1,"message":"1664","line":34,"column":3,"nodeType":"1564","messageId":"1565","endLine":34,"endColumn":6},{"ruleId":"1562","severity":1,"message":"1665","line":35,"column":3,"nodeType":"1564","messageId":"1565","endLine":35,"endColumn":7},{"ruleId":"1562","severity":1,"message":"1666","line":36,"column":3,"nodeType":"1564","messageId":"1565","endLine":36,"endColumn":8},{"ruleId":"1562","severity":1,"message":"1667","line":37,"column":3,"nodeType":"1564","messageId":"1565","endLine":37,"endColumn":8},{"ruleId":"1562","severity":1,"message":"1668","line":39,"column":10,"nodeType":"1564","messageId":"1565","endLine":39,"endColumn":21},{"ruleId":"1562","severity":1,"message":"1669","line":45,"column":8,"nodeType":"1564","messageId":"1565","endLine":45,"endColumn":12},{"ruleId":"1562","severity":1,"message":"1670","line":46,"column":8,"nodeType":"1564","messageId":"1565","endLine":46,"endColumn":14},{"ruleId":"1562","severity":1,"message":"1574","line":48,"column":10,"nodeType":"1564","messageId":"1565","endLine":48,"endColumn":20},{"ruleId":"1562","severity":1,"message":"1671","line":49,"column":8,"nodeType":"1564","messageId":"1565","endLine":49,"endColumn":11},{"ruleId":"1562","severity":1,"message":"1672","line":50,"column":8,"nodeType":"1564","messageId":"1565","endLine":50,"endColumn":15},{"ruleId":"1562","severity":1,"message":"1673","line":51,"column":10,"nodeType":"1564","messageId":"1565","endLine":51,"endColumn":20},{"ruleId":"1562","severity":1,"message":"1674","line":53,"column":9,"nodeType":"1564","messageId":"1565","endLine":53,"endColumn":16},{"ruleId":"1562","severity":1,"message":"1604","line":54,"column":10,"nodeType":"1564","messageId":"1565","endLine":54,"endColumn":13},{"ruleId":"1562","severity":1,"message":"1605","line":55,"column":8,"nodeType":"1564","messageId":"1565","endLine":55,"endColumn":13},{"ruleId":"1562","severity":1,"message":"1675","line":58,"column":10,"nodeType":"1564","messageId":"1565","endLine":58,"endColumn":33},{"ruleId":"1562","severity":1,"message":"1627","line":59,"column":10,"nodeType":"1564","messageId":"1565","endLine":59,"endColumn":14},{"ruleId":"1562","severity":1,"message":"1676","line":61,"column":31,"nodeType":"1564","messageId":"1565","endLine":61,"endColumn":53},{"ruleId":"1562","severity":1,"message":"1610","line":71,"column":9,"nodeType":"1564","messageId":"1565","endLine":71,"endColumn":21},{"ruleId":"1562","severity":1,"message":"1637","line":74,"column":9,"nodeType":"1564","messageId":"1565","endLine":74,"endColumn":20},{"ruleId":"1562","severity":1,"message":"1677","line":90,"column":9,"nodeType":"1564","messageId":"1565","endLine":90,"endColumn":35},{"ruleId":"1562","severity":1,"message":"1636","line":97,"column":9,"nodeType":"1564","messageId":"1565","endLine":97,"endColumn":19},{"ruleId":"1562","severity":1,"message":"1678","line":3,"column":8,"nodeType":"1564","messageId":"1565","endLine":3,"endColumn":24},{"ruleId":"1562","severity":1,"message":"1679","line":6,"column":24,"nodeType":"1564","messageId":"1565","endLine":6,"endColumn":41},{"ruleId":"1562","severity":1,"message":"1680","line":7,"column":17,"nodeType":"1564","messageId":"1565","endLine":7,"endColumn":31},{"ruleId":"1681","severity":1,"message":"1682","line":8,"column":3,"nodeType":"1683","messageId":"1684","endLine":8,"endColumn":19,"fix":"1685"},{"ruleId":"1681","severity":1,"message":"1686","line":9,"column":3,"nodeType":"1683","messageId":"1684","endLine":9,"endColumn":23,"fix":"1687"},{"ruleId":"1562","severity":1,"message":"1688","line":11,"column":16,"nodeType":"1564","messageId":"1565","endLine":11,"endColumn":25},{"ruleId":"1562","severity":1,"message":"1689","line":12,"column":21,"nodeType":"1564","messageId":"1565","endLine":12,"endColumn":32},{"ruleId":"1681","severity":1,"message":"1690","line":16,"column":3,"nodeType":"1683","messageId":"1684","endLine":16,"endColumn":39,"fix":"1691"},{"ruleId":"1562","severity":1,"message":"1692","line":16,"column":23,"nodeType":"1564","messageId":"1565","endLine":16,"endColumn":39},{"ruleId":"1681","severity":1,"message":"1693","line":17,"column":3,"nodeType":"1683","messageId":"1684","endLine":17,"endColumn":33,"fix":"1694"},{"ruleId":"1562","severity":1,"message":"1695","line":17,"column":20,"nodeType":"1564","messageId":"1565","endLine":17,"endColumn":33},{"ruleId":"1681","severity":1,"message":"1696","line":18,"column":3,"nodeType":"1683","messageId":"1684","endLine":18,"endColumn":39,"fix":"1697"},{"ruleId":"1681","severity":1,"message":"1698","line":19,"column":3,"nodeType":"1683","messageId":"1684","endLine":19,"endColumn":19,"fix":"1699"},{"ruleId":"1562","severity":1,"message":"1700","line":19,"column":13,"nodeType":"1564","messageId":"1565","endLine":19,"endColumn":19},{"ruleId":"1562","severity":1,"message":"1701","line":20,"column":3,"nodeType":"1564","messageId":"1565","endLine":20,"endColumn":23},{"ruleId":"1562","severity":1,"message":"1702","line":23,"column":3,"nodeType":"1564","messageId":"1565","endLine":23,"endColumn":12},{"ruleId":"1562","severity":1,"message":"1671","line":33,"column":8,"nodeType":"1564","messageId":"1565","endLine":33,"endColumn":11},{"ruleId":"1562","severity":1,"message":"1703","line":218,"column":7,"nodeType":"1564","messageId":"1565","endLine":218,"endColumn":14},{"ruleId":"1704","severity":1,"message":"1705","line":232,"column":15,"nodeType":"1564","messageId":"1706","endLine":232,"endColumn":24},{"ruleId":"1562","severity":1,"message":"1604","line":50,"column":12,"nodeType":"1564","messageId":"1565","endLine":50,"endColumn":15},{"ruleId":"1562","severity":1,"message":"1605","line":51,"column":10,"nodeType":"1564","messageId":"1565","endLine":51,"endColumn":15},{"ruleId":"1562","severity":1,"message":"1607","line":52,"column":12,"nodeType":"1564","messageId":"1565","endLine":52,"endColumn":23},{"ruleId":"1562","severity":1,"message":"1608","line":52,"column":25,"nodeType":"1564","messageId":"1565","endLine":52,"endColumn":39},{"ruleId":"1707","severity":1,"message":"1708","line":68,"column":9,"nodeType":"1709","messageId":"1710","endLine":68,"endColumn":14},{"ruleId":"1562","severity":1,"message":"1609","line":116,"column":11,"nodeType":"1564","messageId":"1565","endLine":116,"endColumn":18},{"ruleId":"1562","severity":1,"message":"1610","line":122,"column":11,"nodeType":"1564","messageId":"1565","endLine":122,"endColumn":23},{"ruleId":"1562","severity":1,"message":"1611","line":125,"column":11,"nodeType":"1564","messageId":"1565","endLine":125,"endColumn":19},{"ruleId":"1562","severity":1,"message":"1638","line":127,"column":15,"nodeType":"1564","messageId":"1565","endLine":127,"endColumn":39},{"ruleId":"1562","severity":1,"message":"1605","line":52,"column":10,"nodeType":"1564","messageId":"1565","endLine":52,"endColumn":15},{"ruleId":"1562","severity":1,"message":"1604","line":49,"column":12,"nodeType":"1564","messageId":"1565","endLine":49,"endColumn":15},{"ruleId":"1562","severity":1,"message":"1624","line":49,"column":17,"nodeType":"1564","messageId":"1565","endLine":49,"endColumn":23},{"ruleId":"1562","severity":1,"message":"1605","line":50,"column":10,"nodeType":"1564","messageId":"1565","endLine":50,"endColumn":15},{"ruleId":"1562","severity":1,"message":"1617","line":16,"column":8,"nodeType":"1564","messageId":"1565","endLine":16,"endColumn":20},{"ruleId":"1562","severity":1,"message":"1604","line":59,"column":12,"nodeType":"1564","messageId":"1565","endLine":59,"endColumn":15},{"ruleId":"1562","severity":1,"message":"1605","line":60,"column":10,"nodeType":"1564","messageId":"1565","endLine":60,"endColumn":15},{"ruleId":"1562","severity":1,"message":"1607","line":61,"column":12,"nodeType":"1564","messageId":"1565","endLine":61,"endColumn":23},{"ruleId":"1562","severity":1,"message":"1608","line":61,"column":25,"nodeType":"1564","messageId":"1565","endLine":61,"endColumn":39},{"ruleId":"1562","severity":1,"message":"1609","line":140,"column":11,"nodeType":"1564","messageId":"1565","endLine":140,"endColumn":18},{"ruleId":"1562","severity":1,"message":"1610","line":146,"column":11,"nodeType":"1564","messageId":"1565","endLine":146,"endColumn":23},{"ruleId":"1562","severity":1,"message":"1611","line":149,"column":11,"nodeType":"1564","messageId":"1565","endLine":149,"endColumn":19},{"ruleId":"1562","severity":1,"message":"1566","line":10,"column":3,"nodeType":"1564","messageId":"1565","endLine":10,"endColumn":7},{"ruleId":"1562","severity":1,"message":"1711","line":18,"column":3,"nodeType":"1564","messageId":"1565","endLine":18,"endColumn":15},{"ruleId":"1562","severity":1,"message":"1583","line":26,"column":23,"nodeType":"1564","messageId":"1565","endLine":26,"endColumn":29},{"ruleId":"1562","severity":1,"message":"1712","line":101,"column":8,"nodeType":"1564","messageId":"1565","endLine":101,"endColumn":21},{"ruleId":"1562","severity":1,"message":"1713","line":103,"column":8,"nodeType":"1564","messageId":"1565","endLine":103,"endColumn":29},{"ruleId":"1562","severity":1,"message":"1617","line":16,"column":8,"nodeType":"1564","messageId":"1565","endLine":16,"endColumn":20},{"ruleId":"1562","severity":1,"message":"1604","line":66,"column":12,"nodeType":"1564","messageId":"1565","endLine":66,"endColumn":15},{"ruleId":"1562","severity":1,"message":"1605","line":67,"column":10,"nodeType":"1564","messageId":"1565","endLine":67,"endColumn":15},{"ruleId":"1562","severity":1,"message":"1607","line":68,"column":12,"nodeType":"1564","messageId":"1565","endLine":68,"endColumn":23},{"ruleId":"1562","severity":1,"message":"1608","line":68,"column":25,"nodeType":"1564","messageId":"1565","endLine":68,"endColumn":39},{"ruleId":"1562","severity":1,"message":"1609","line":147,"column":11,"nodeType":"1564","messageId":"1565","endLine":147,"endColumn":18},{"ruleId":"1562","severity":1,"message":"1610","line":153,"column":11,"nodeType":"1564","messageId":"1565","endLine":153,"endColumn":23},{"ruleId":"1562","severity":1,"message":"1611","line":156,"column":11,"nodeType":"1564","messageId":"1565","endLine":156,"endColumn":19},{"ruleId":"1562","severity":1,"message":"1605","line":62,"column":10,"nodeType":"1564","messageId":"1565","endLine":62,"endColumn":15},{"ruleId":"1562","severity":1,"message":"1714","line":70,"column":12,"nodeType":"1564","messageId":"1565","endLine":70,"endColumn":23},{"ruleId":"1562","severity":1,"message":"1715","line":71,"column":12,"nodeType":"1564","messageId":"1565","endLine":71,"endColumn":23},{"ruleId":"1716","severity":1,"message":"1717","line":123,"column":8,"nodeType":"1718","endLine":123,"endColumn":10,"suggestions":"1719"},{"ruleId":"1562","severity":1,"message":"1720","line":5,"column":3,"nodeType":"1564","messageId":"1565","endLine":5,"endColumn":7},{"ruleId":"1562","severity":1,"message":"1581","line":6,"column":3,"nodeType":"1564","messageId":"1565","endLine":6,"endColumn":11},{"ruleId":"1562","severity":1,"message":"1721","line":9,"column":22,"nodeType":"1564","messageId":"1565","endLine":9,"endColumn":30},{"ruleId":"1562","severity":1,"message":"1722","line":31,"column":8,"nodeType":"1564","messageId":"1565","endLine":31,"endColumn":21},{"ruleId":"1562","severity":1,"message":"1723","line":32,"column":8,"nodeType":"1564","messageId":"1565","endLine":32,"endColumn":22},{"ruleId":"1724","severity":1,"message":"1725","line":27,"column":1,"nodeType":"1726","messageId":"1727","endLine":37,"endColumn":2},{"ruleId":"1562","severity":1,"message":"1728","line":1,"column":17,"nodeType":"1564","messageId":"1565","endLine":1,"endColumn":25},{"ruleId":"1562","severity":1,"message":"1729","line":3,"column":13,"nodeType":"1564","messageId":"1565","endLine":3,"endColumn":22},{"ruleId":"1562","severity":1,"message":"1730","line":10,"column":11,"nodeType":"1564","messageId":"1565","endLine":10,"endColumn":19},{"ruleId":"1562","severity":1,"message":"1731","line":11,"column":11,"nodeType":"1564","messageId":"1565","endLine":11,"endColumn":24},{"ruleId":"1707","severity":1,"message":"1732","line":27,"column":3,"nodeType":"1709","messageId":"1710","endLine":27,"endColumn":30},{"ruleId":"1562","severity":1,"message":"1733","line":53,"column":12,"nodeType":"1564","messageId":"1565","endLine":53,"endColumn":17},{"ruleId":"1562","severity":1,"message":"1604","line":54,"column":12,"nodeType":"1564","messageId":"1565","endLine":54,"endColumn":15},{"ruleId":"1562","severity":1,"message":"1605","line":55,"column":10,"nodeType":"1564","messageId":"1565","endLine":55,"endColumn":15},{"ruleId":"1562","severity":1,"message":"1607","line":56,"column":12,"nodeType":"1564","messageId":"1565","endLine":56,"endColumn":23},{"ruleId":"1562","severity":1,"message":"1608","line":56,"column":25,"nodeType":"1564","messageId":"1565","endLine":56,"endColumn":39},{"ruleId":"1707","severity":1,"message":"1734","line":77,"column":9,"nodeType":"1709","messageId":"1710","endLine":77,"endColumn":21},{"ruleId":"1562","severity":1,"message":"1609","line":151,"column":11,"nodeType":"1564","messageId":"1565","endLine":151,"endColumn":18},{"ruleId":"1562","severity":1,"message":"1610","line":157,"column":11,"nodeType":"1564","messageId":"1565","endLine":157,"endColumn":23},{"ruleId":"1562","severity":1,"message":"1611","line":160,"column":11,"nodeType":"1564","messageId":"1565","endLine":160,"endColumn":19},{"ruleId":"1562","severity":1,"message":"1638","line":162,"column":15,"nodeType":"1564","messageId":"1565","endLine":162,"endColumn":39},{"ruleId":"1562","severity":1,"message":"1642","line":3,"column":3,"nodeType":"1564","messageId":"1565","endLine":3,"endColumn":17},{"ruleId":"1562","severity":1,"message":"1643","line":4,"column":3,"nodeType":"1564","messageId":"1565","endLine":4,"endColumn":16},{"ruleId":"1562","severity":1,"message":"1645","line":8,"column":56,"nodeType":"1564","messageId":"1565","endLine":8,"endColumn":73},{"ruleId":"1562","severity":1,"message":"1590","line":8,"column":88,"nodeType":"1564","messageId":"1565","endLine":8,"endColumn":97},{"ruleId":"1562","severity":1,"message":"1587","line":8,"column":99,"nodeType":"1564","messageId":"1565","endLine":8,"endColumn":110},{"ruleId":"1562","severity":1,"message":"1589","line":8,"column":112,"nodeType":"1564","messageId":"1565","endLine":8,"endColumn":122},{"ruleId":"1562","severity":1,"message":"1588","line":8,"column":124,"nodeType":"1564","messageId":"1565","endLine":8,"endColumn":130},{"ruleId":"1562","severity":1,"message":"1581","line":8,"column":132,"nodeType":"1564","messageId":"1565","endLine":8,"endColumn":140},{"ruleId":"1562","severity":1,"message":"1655","line":15,"column":10,"nodeType":"1564","messageId":"1565","endLine":15,"endColumn":20},{"ruleId":"1562","severity":1,"message":"1657","line":18,"column":3,"nodeType":"1564","messageId":"1565","endLine":18,"endColumn":22},{"ruleId":"1562","severity":1,"message":"1658","line":19,"column":3,"nodeType":"1564","messageId":"1565","endLine":19,"endColumn":16},{"ruleId":"1562","severity":1,"message":"1659","line":20,"column":3,"nodeType":"1564","messageId":"1565","endLine":20,"endColumn":12},{"ruleId":"1562","severity":1,"message":"1660","line":21,"column":3,"nodeType":"1564","messageId":"1565","endLine":21,"endColumn":12},{"ruleId":"1562","severity":1,"message":"1661","line":22,"column":3,"nodeType":"1564","messageId":"1565","endLine":22,"endColumn":7},{"ruleId":"1562","severity":1,"message":"1662","line":23,"column":3,"nodeType":"1564","messageId":"1565","endLine":23,"endColumn":7},{"ruleId":"1562","severity":1,"message":"1663","line":24,"column":3,"nodeType":"1564","messageId":"1565","endLine":24,"endColumn":11},{"ruleId":"1562","severity":1,"message":"1664","line":25,"column":3,"nodeType":"1564","messageId":"1565","endLine":25,"endColumn":6},{"ruleId":"1562","severity":1,"message":"1665","line":26,"column":3,"nodeType":"1564","messageId":"1565","endLine":26,"endColumn":7},{"ruleId":"1562","severity":1,"message":"1666","line":27,"column":3,"nodeType":"1564","messageId":"1565","endLine":27,"endColumn":8},{"ruleId":"1562","severity":1,"message":"1667","line":28,"column":3,"nodeType":"1564","messageId":"1565","endLine":28,"endColumn":8},{"ruleId":"1562","severity":1,"message":"1669","line":35,"column":8,"nodeType":"1564","messageId":"1565","endLine":35,"endColumn":12},{"ruleId":"1562","severity":1,"message":"1671","line":39,"column":8,"nodeType":"1564","messageId":"1565","endLine":39,"endColumn":11},{"ruleId":"1562","severity":1,"message":"1672","line":41,"column":8,"nodeType":"1564","messageId":"1565","endLine":41,"endColumn":15},{"ruleId":"1562","severity":1,"message":"1735","line":53,"column":7,"nodeType":"1564","messageId":"1565","endLine":53,"endColumn":21},{"ruleId":"1562","severity":1,"message":"1736","line":62,"column":7,"nodeType":"1564","messageId":"1565","endLine":62,"endColumn":20},{"ruleId":"1562","severity":1,"message":"1737","line":68,"column":7,"nodeType":"1564","messageId":"1565","endLine":68,"endColumn":12},{"ruleId":"1562","severity":1,"message":"1738","line":71,"column":8,"nodeType":"1564","messageId":"1565","endLine":71,"endColumn":22},{"ruleId":"1562","severity":1,"message":"1739","line":71,"column":24,"nodeType":"1564","messageId":"1565","endLine":71,"endColumn":41},{"ruleId":"1558","replacedBy":"1740"},{"ruleId":"1560","replacedBy":"1741"},{"ruleId":"1562","severity":1,"message":"1742","line":53,"column":12,"nodeType":"1564","messageId":"1565","endLine":53,"endColumn":23},{"ruleId":"1743","severity":1,"message":"1744","line":54,"column":10,"nodeType":"1564","messageId":"1745","endLine":54,"endColumn":24},{"ruleId":"1743","severity":1,"message":"1746","line":54,"column":26,"nodeType":"1564","messageId":"1745","endLine":54,"endColumn":43},{"ruleId":"1562","severity":1,"message":"1605","line":55,"column":10,"nodeType":"1564","messageId":"1565","endLine":55,"endColumn":15},{"ruleId":"1747","severity":1,"message":"1748","line":132,"column":32,"nodeType":"1749","messageId":"1750","endLine":132,"endColumn":52,"fix":"1751"},{"ruleId":"1562","severity":1,"message":"1583","line":3,"column":5,"nodeType":"1564","messageId":"1565","endLine":3,"endColumn":11},{"ruleId":"1562","severity":1,"message":"1613","line":3,"column":13,"nodeType":"1564","messageId":"1565","endLine":3,"endColumn":19},{"ruleId":"1562","severity":1,"message":"1614","line":3,"column":21,"nodeType":"1564","messageId":"1565","endLine":3,"endColumn":34},{"ruleId":"1562","severity":1,"message":"1615","line":3,"column":36,"nodeType":"1564","messageId":"1565","endLine":3,"endColumn":49},{"ruleId":"1562","severity":1,"message":"1616","line":3,"column":51,"nodeType":"1564","messageId":"1565","endLine":3,"endColumn":62},{"ruleId":"1562","severity":1,"message":"1587","line":3,"column":64,"nodeType":"1564","messageId":"1565","endLine":3,"endColumn":75},{"ruleId":"1562","severity":1,"message":"1589","line":3,"column":77,"nodeType":"1564","messageId":"1565","endLine":3,"endColumn":87},{"ruleId":"1562","severity":1,"message":"1581","line":3,"column":89,"nodeType":"1564","messageId":"1565","endLine":3,"endColumn":97},{"ruleId":"1562","severity":1,"message":"1585","line":8,"column":5,"nodeType":"1564","messageId":"1565","endLine":8,"endColumn":9},{"ruleId":"1562","severity":1,"message":"1752","line":10,"column":8,"nodeType":"1564","messageId":"1565","endLine":10,"endColumn":19},{"ruleId":"1562","severity":1,"message":"1586","line":11,"column":10,"nodeType":"1564","messageId":"1565","endLine":11,"endColumn":13},{"ruleId":"1562","severity":1,"message":"1588","line":20,"column":16,"nodeType":"1564","messageId":"1565","endLine":20,"endColumn":22},{"ruleId":"1562","severity":1,"message":"1590","line":20,"column":24,"nodeType":"1564","messageId":"1565","endLine":20,"endColumn":33},{"ruleId":"1562","severity":1,"message":"1753","line":23,"column":8,"nodeType":"1564","messageId":"1565","endLine":23,"endColumn":15},{"ruleId":"1562","severity":1,"message":"1619","line":24,"column":8,"nodeType":"1564","messageId":"1565","endLine":24,"endColumn":18},{"ruleId":"1562","severity":1,"message":"1620","line":25,"column":8,"nodeType":"1564","messageId":"1565","endLine":25,"endColumn":16},{"ruleId":"1562","severity":1,"message":"1754","line":54,"column":12,"nodeType":"1564","messageId":"1565","endLine":54,"endColumn":24},{"ruleId":"1562","severity":1,"message":"1755","line":55,"column":12,"nodeType":"1564","messageId":"1565","endLine":55,"endColumn":21},{"ruleId":"1562","severity":1,"message":"1756","line":56,"column":12,"nodeType":"1564","messageId":"1565","endLine":56,"endColumn":21},{"ruleId":"1562","severity":1,"message":"1757","line":57,"column":12,"nodeType":"1564","messageId":"1565","endLine":57,"endColumn":28},{"ruleId":"1562","severity":1,"message":"1742","line":58,"column":12,"nodeType":"1564","messageId":"1565","endLine":58,"endColumn":23},{"ruleId":"1562","severity":1,"message":"1605","line":60,"column":10,"nodeType":"1564","messageId":"1565","endLine":60,"endColumn":15},{"ruleId":"1562","severity":1,"message":"1627","line":61,"column":12,"nodeType":"1564","messageId":"1565","endLine":61,"endColumn":16},{"ruleId":"1562","severity":1,"message":"1758","line":62,"column":12,"nodeType":"1564","messageId":"1565","endLine":62,"endColumn":22},{"ruleId":"1562","severity":1,"message":"1626","line":65,"column":19,"nodeType":"1564","messageId":"1565","endLine":65,"endColumn":29},{"ruleId":"1562","severity":1,"message":"1625","line":66,"column":19,"nodeType":"1564","messageId":"1565","endLine":66,"endColumn":29},{"ruleId":"1562","severity":1,"message":"1759","line":67,"column":12,"nodeType":"1564","messageId":"1565","endLine":67,"endColumn":18},{"ruleId":"1562","severity":1,"message":"1714","line":68,"column":12,"nodeType":"1564","messageId":"1565","endLine":68,"endColumn":23},{"ruleId":"1562","severity":1,"message":"1715","line":69,"column":12,"nodeType":"1564","messageId":"1565","endLine":69,"endColumn":23},{"ruleId":"1562","severity":1,"message":"1760","line":70,"column":12,"nodeType":"1564","messageId":"1565","endLine":70,"endColumn":20},{"ruleId":"1562","severity":1,"message":"1761","line":70,"column":22,"nodeType":"1564","messageId":"1565","endLine":70,"endColumn":33},{"ruleId":"1716","severity":1,"message":"1717","line":120,"column":8,"nodeType":"1718","endLine":120,"endColumn":10,"suggestions":"1762"},{"ruleId":"1562","severity":1,"message":"1763","line":136,"column":11,"nodeType":"1564","messageId":"1565","endLine":136,"endColumn":25},{"ruleId":"1562","severity":1,"message":"1764","line":215,"column":11,"nodeType":"1564","messageId":"1565","endLine":215,"endColumn":24},{"ruleId":"1562","severity":1,"message":"1765","line":227,"column":11,"nodeType":"1564","messageId":"1565","endLine":227,"endColumn":26},{"ruleId":"1562","severity":1,"message":"1766","line":236,"column":11,"nodeType":"1564","messageId":"1565","endLine":236,"endColumn":20},{"ruleId":"1562","severity":1,"message":"1767","line":248,"column":11,"nodeType":"1564","messageId":"1565","endLine":248,"endColumn":29},{"ruleId":"1562","severity":1,"message":"1768","line":256,"column":11,"nodeType":"1564","messageId":"1565","endLine":256,"endColumn":17},{"ruleId":"1562","severity":1,"message":"1769","line":286,"column":11,"nodeType":"1564","messageId":"1565","endLine":286,"endColumn":29},{"ruleId":"1562","severity":1,"message":"1770","line":295,"column":13,"nodeType":"1564","messageId":"1565","endLine":295,"endColumn":24},{"ruleId":"1562","severity":1,"message":"1587","line":3,"column":64,"nodeType":"1564","messageId":"1565","endLine":3,"endColumn":75},{"ruleId":"1562","severity":1,"message":"1589","line":3,"column":77,"nodeType":"1564","messageId":"1565","endLine":3,"endColumn":87},{"ruleId":"1562","severity":1,"message":"1581","line":3,"column":89,"nodeType":"1564","messageId":"1565","endLine":3,"endColumn":97},{"ruleId":"1562","severity":1,"message":"1771","line":15,"column":8,"nodeType":"1564","messageId":"1565","endLine":15,"endColumn":20},{"ruleId":"1562","severity":1,"message":"1588","line":19,"column":16,"nodeType":"1564","messageId":"1565","endLine":19,"endColumn":22},{"ruleId":"1562","severity":1,"message":"1619","line":22,"column":8,"nodeType":"1564","messageId":"1565","endLine":22,"endColumn":18},{"ruleId":"1562","severity":1,"message":"1620","line":23,"column":8,"nodeType":"1564","messageId":"1565","endLine":23,"endColumn":16},{"ruleId":"1562","severity":1,"message":"1754","line":50,"column":12,"nodeType":"1564","messageId":"1565","endLine":50,"endColumn":24},{"ruleId":"1562","severity":1,"message":"1757","line":51,"column":12,"nodeType":"1564","messageId":"1565","endLine":51,"endColumn":28},{"ruleId":"1562","severity":1,"message":"1742","line":52,"column":12,"nodeType":"1564","messageId":"1565","endLine":52,"endColumn":23},{"ruleId":"1562","severity":1,"message":"1621","line":53,"column":12,"nodeType":"1564","messageId":"1565","endLine":53,"endColumn":21},{"ruleId":"1562","severity":1,"message":"1622","line":55,"column":12,"nodeType":"1564","messageId":"1565","endLine":55,"endColumn":21},{"ruleId":"1562","severity":1,"message":"1772","line":56,"column":12,"nodeType":"1564","messageId":"1565","endLine":56,"endColumn":25},{"ruleId":"1562","severity":1,"message":"1604","line":58,"column":12,"nodeType":"1564","messageId":"1565","endLine":58,"endColumn":15},{"ruleId":"1562","severity":1,"message":"1605","line":59,"column":10,"nodeType":"1564","messageId":"1565","endLine":59,"endColumn":15},{"ruleId":"1562","severity":1,"message":"1607","line":60,"column":12,"nodeType":"1564","messageId":"1565","endLine":60,"endColumn":23},{"ruleId":"1562","severity":1,"message":"1608","line":60,"column":25,"nodeType":"1564","messageId":"1565","endLine":60,"endColumn":39},{"ruleId":"1562","severity":1,"message":"1609","line":156,"column":11,"nodeType":"1564","messageId":"1565","endLine":156,"endColumn":18},{"ruleId":"1562","severity":1,"message":"1610","line":162,"column":11,"nodeType":"1564","messageId":"1565","endLine":162,"endColumn":23},{"ruleId":"1562","severity":1,"message":"1611","line":165,"column":11,"nodeType":"1564","messageId":"1565","endLine":165,"endColumn":19},{"ruleId":"1562","severity":1,"message":"1638","line":167,"column":15,"nodeType":"1564","messageId":"1565","endLine":167,"endColumn":39},{"ruleId":"1562","severity":1,"message":"1773","line":186,"column":11,"nodeType":"1564","messageId":"1565","endLine":186,"endColumn":20},{"ruleId":"1562","severity":1,"message":"1774","line":212,"column":19,"nodeType":"1564","messageId":"1565","endLine":212,"endColumn":30},{"ruleId":"1558","replacedBy":"1775"},{"ruleId":"1560","replacedBy":"1776"},{"ruleId":"1562","severity":1,"message":"1777","line":3,"column":8,"nodeType":"1564","messageId":"1565","endLine":3,"endColumn":27},{"ruleId":"1562","severity":1,"message":"1591","line":10,"column":8,"nodeType":"1564","messageId":"1565","endLine":10,"endColumn":13},{"ruleId":"1562","severity":1,"message":"1778","line":5,"column":3,"nodeType":"1564","messageId":"1565","endLine":5,"endColumn":11},{"ruleId":"1562","severity":1,"message":"1563","line":10,"column":14,"nodeType":"1564","messageId":"1565","endLine":10,"endColumn":24},{"ruleId":"1562","severity":1,"message":"1566","line":10,"column":26,"nodeType":"1564","messageId":"1565","endLine":10,"endColumn":30},{"ruleId":"1562","severity":1,"message":"1567","line":11,"column":8,"nodeType":"1564","messageId":"1565","endLine":11,"endColumn":12},{"ruleId":"1562","severity":1,"message":"1568","line":15,"column":18,"nodeType":"1564","messageId":"1565","endLine":15,"endColumn":30},{"ruleId":"1562","severity":1,"message":"1569","line":16,"column":17,"nodeType":"1564","messageId":"1565","endLine":16,"endColumn":28},{"ruleId":"1562","severity":1,"message":"1570","line":17,"column":16,"nodeType":"1564","messageId":"1565","endLine":17,"endColumn":26},{"ruleId":"1562","severity":1,"message":"1572","line":25,"column":8,"nodeType":"1564","messageId":"1565","endLine":25,"endColumn":15},{"ruleId":"1562","severity":1,"message":"1574","line":29,"column":8,"nodeType":"1564","messageId":"1565","endLine":29,"endColumn":18},{"ruleId":"1562","severity":1,"message":"1575","line":30,"column":8,"nodeType":"1564","messageId":"1565","endLine":30,"endColumn":21},{"ruleId":"1562","severity":1,"message":"1576","line":31,"column":8,"nodeType":"1564","messageId":"1565","endLine":31,"endColumn":12},{"ruleId":"1562","severity":1,"message":"1577","line":34,"column":8,"nodeType":"1564","messageId":"1565","endLine":34,"endColumn":13},{"ruleId":"1562","severity":1,"message":"1578","line":35,"column":8,"nodeType":"1564","messageId":"1565","endLine":35,"endColumn":14},{"ruleId":"1562","severity":1,"message":"1579","line":39,"column":10,"nodeType":"1564","messageId":"1565","endLine":39,"endColumn":18},{"ruleId":"1562","severity":1,"message":"1779","line":41,"column":8,"nodeType":"1564","messageId":"1565","endLine":41,"endColumn":19},{"ruleId":"1562","severity":1,"message":"1563","line":16,"column":14,"nodeType":"1564","messageId":"1565","endLine":16,"endColumn":24},{"ruleId":"1562","severity":1,"message":"1566","line":16,"column":26,"nodeType":"1564","messageId":"1565","endLine":16,"endColumn":30},{"ruleId":"1562","severity":1,"message":"1567","line":17,"column":8,"nodeType":"1564","messageId":"1565","endLine":17,"endColumn":12},{"ruleId":"1562","severity":1,"message":"1568","line":19,"column":18,"nodeType":"1564","messageId":"1565","endLine":19,"endColumn":30},{"ruleId":"1562","severity":1,"message":"1569","line":20,"column":17,"nodeType":"1564","messageId":"1565","endLine":20,"endColumn":28},{"ruleId":"1562","severity":1,"message":"1570","line":21,"column":16,"nodeType":"1564","messageId":"1565","endLine":21,"endColumn":26},{"ruleId":"1562","severity":1,"message":"1576","line":33,"column":8,"nodeType":"1564","messageId":"1565","endLine":33,"endColumn":12},{"ruleId":"1562","severity":1,"message":"1579","line":38,"column":10,"nodeType":"1564","messageId":"1565","endLine":38,"endColumn":18},{"ruleId":"1562","severity":1,"message":"1780","line":9,"column":8,"nodeType":"1564","messageId":"1565","endLine":9,"endColumn":14},{"ruleId":"1562","severity":1,"message":"1636","line":11,"column":9,"nodeType":"1564","messageId":"1565","endLine":11,"endColumn":19},{"ruleId":"1562","severity":1,"message":"1781","line":21,"column":19,"nodeType":"1564","messageId":"1565","endLine":21,"endColumn":31},{"ruleId":"1562","severity":1,"message":"1563","line":5,"column":3,"nodeType":"1564","messageId":"1565","endLine":5,"endColumn":13},{"ruleId":"1562","severity":1,"message":"1580","line":6,"column":3,"nodeType":"1564","messageId":"1565","endLine":6,"endColumn":12},{"ruleId":"1562","severity":1,"message":"1581","line":8,"column":3,"nodeType":"1564","messageId":"1565","endLine":8,"endColumn":11},{"ruleId":"1562","severity":1,"message":"1582","line":9,"column":3,"nodeType":"1564","messageId":"1565","endLine":9,"endColumn":6},{"ruleId":"1562","severity":1,"message":"1583","line":11,"column":3,"nodeType":"1564","messageId":"1565","endLine":11,"endColumn":9},{"ruleId":"1562","severity":1,"message":"1584","line":13,"column":10,"nodeType":"1564","messageId":"1565","endLine":13,"endColumn":14},{"ruleId":"1562","severity":1,"message":"1585","line":13,"column":16,"nodeType":"1564","messageId":"1565","endLine":13,"endColumn":20},{"ruleId":"1562","severity":1,"message":"1586","line":13,"column":22,"nodeType":"1564","messageId":"1565","endLine":13,"endColumn":25},{"ruleId":"1562","severity":1,"message":"1587","line":13,"column":27,"nodeType":"1564","messageId":"1565","endLine":13,"endColumn":38},{"ruleId":"1562","severity":1,"message":"1588","line":13,"column":40,"nodeType":"1564","messageId":"1565","endLine":13,"endColumn":46},{"ruleId":"1562","severity":1,"message":"1589","line":13,"column":48,"nodeType":"1564","messageId":"1565","endLine":13,"endColumn":58},{"ruleId":"1562","severity":1,"message":"1590","line":13,"column":60,"nodeType":"1564","messageId":"1565","endLine":13,"endColumn":69},{"ruleId":"1562","severity":1,"message":"1591","line":14,"column":8,"nodeType":"1564","messageId":"1565","endLine":14,"endColumn":13},{"ruleId":"1562","severity":1,"message":"1566","line":17,"column":3,"nodeType":"1564","messageId":"1565","endLine":17,"endColumn":7},{"ruleId":"1562","severity":1,"message":"1592","line":19,"column":10,"nodeType":"1564","messageId":"1565","endLine":19,"endColumn":23},{"ruleId":"1562","severity":1,"message":"1593","line":19,"column":25,"nodeType":"1564","messageId":"1565","endLine":19,"endColumn":31},{"ruleId":"1562","severity":1,"message":"1594","line":19,"column":33,"nodeType":"1564","messageId":"1565","endLine":19,"endColumn":38},{"ruleId":"1562","severity":1,"message":"1595","line":22,"column":11,"nodeType":"1564","messageId":"1565","endLine":22,"endColumn":19},{"ruleId":"1562","severity":1,"message":"1596","line":25,"column":11,"nodeType":"1564","messageId":"1565","endLine":25,"endColumn":19},{"ruleId":"1562","severity":1,"message":"1597","line":26,"column":16,"nodeType":"1564","messageId":"1565","endLine":26,"endColumn":29},{"ruleId":"1562","severity":1,"message":"1598","line":28,"column":10,"nodeType":"1564","messageId":"1565","endLine":28,"endColumn":14},{"ruleId":"1562","severity":1,"message":"1599","line":29,"column":8,"nodeType":"1564","messageId":"1565","endLine":29,"endColumn":18},{"ruleId":"1562","severity":1,"message":"1600","line":31,"column":10,"nodeType":"1564","messageId":"1565","endLine":31,"endColumn":15},{"ruleId":"1562","severity":1,"message":"1601","line":33,"column":8,"nodeType":"1564","messageId":"1565","endLine":33,"endColumn":18},{"ruleId":"1562","severity":1,"message":"1602","line":35,"column":7,"nodeType":"1564","messageId":"1565","endLine":35,"endColumn":15},{"ruleId":"1562","severity":1,"message":"1720","line":5,"column":3,"nodeType":"1564","messageId":"1565","endLine":5,"endColumn":7},{"ruleId":"1562","severity":1,"message":"1581","line":6,"column":3,"nodeType":"1564","messageId":"1565","endLine":6,"endColumn":11},{"ruleId":"1562","severity":1,"message":"1721","line":9,"column":22,"nodeType":"1564","messageId":"1565","endLine":9,"endColumn":30},{"ruleId":"1562","severity":1,"message":"1722","line":31,"column":8,"nodeType":"1564","messageId":"1565","endLine":31,"endColumn":21},{"ruleId":"1562","severity":1,"message":"1723","line":32,"column":8,"nodeType":"1564","messageId":"1565","endLine":32,"endColumn":22},{"ruleId":"1562","severity":1,"message":"1678","line":3,"column":8,"nodeType":"1564","messageId":"1565","endLine":3,"endColumn":24},{"ruleId":"1562","severity":1,"message":"1679","line":6,"column":24,"nodeType":"1564","messageId":"1565","endLine":6,"endColumn":41},{"ruleId":"1562","severity":1,"message":"1680","line":7,"column":17,"nodeType":"1564","messageId":"1565","endLine":7,"endColumn":31},{"ruleId":"1681","severity":1,"message":"1682","line":8,"column":3,"nodeType":"1683","messageId":"1684","endLine":8,"endColumn":19,"fix":"1782"},{"ruleId":"1681","severity":1,"message":"1686","line":9,"column":3,"nodeType":"1683","messageId":"1684","endLine":9,"endColumn":23,"fix":"1783"},{"ruleId":"1562","severity":1,"message":"1784","line":9,"column":15,"nodeType":"1564","messageId":"1565","endLine":9,"endColumn":23},{"ruleId":"1562","severity":1,"message":"1785","line":10,"column":17,"nodeType":"1564","messageId":"1565","endLine":10,"endColumn":31},{"ruleId":"1562","severity":1,"message":"1688","line":11,"column":16,"nodeType":"1564","messageId":"1565","endLine":11,"endColumn":25},{"ruleId":"1562","severity":1,"message":"1689","line":12,"column":21,"nodeType":"1564","messageId":"1565","endLine":12,"endColumn":32},{"ruleId":"1562","severity":1,"message":"1786","line":13,"column":19,"nodeType":"1564","messageId":"1565","endLine":13,"endColumn":30},{"ruleId":"1562","severity":1,"message":"1787","line":14,"column":18,"nodeType":"1564","messageId":"1565","endLine":14,"endColumn":25},{"ruleId":"1681","severity":1,"message":"1690","line":16,"column":3,"nodeType":"1683","messageId":"1684","endLine":16,"endColumn":39,"fix":"1788"},{"ruleId":"1562","severity":1,"message":"1692","line":16,"column":23,"nodeType":"1564","messageId":"1565","endLine":16,"endColumn":39},{"ruleId":"1681","severity":1,"message":"1693","line":17,"column":3,"nodeType":"1683","messageId":"1684","endLine":17,"endColumn":33,"fix":"1789"},{"ruleId":"1562","severity":1,"message":"1695","line":17,"column":20,"nodeType":"1564","messageId":"1565","endLine":17,"endColumn":33},{"ruleId":"1681","severity":1,"message":"1696","line":18,"column":3,"nodeType":"1683","messageId":"1684","endLine":18,"endColumn":39,"fix":"1790"},{"ruleId":"1562","severity":1,"message":"1791","line":18,"column":23,"nodeType":"1564","messageId":"1565","endLine":18,"endColumn":39},{"ruleId":"1681","severity":1,"message":"1698","line":19,"column":3,"nodeType":"1683","messageId":"1684","endLine":19,"endColumn":19,"fix":"1792"},{"ruleId":"1562","severity":1,"message":"1700","line":19,"column":13,"nodeType":"1564","messageId":"1565","endLine":19,"endColumn":19},{"ruleId":"1562","severity":1,"message":"1793","line":22,"column":3,"nodeType":"1564","messageId":"1565","endLine":22,"endColumn":15},{"ruleId":"1562","severity":1,"message":"1702","line":23,"column":3,"nodeType":"1564","messageId":"1565","endLine":23,"endColumn":12},{"ruleId":"1562","severity":1,"message":"1794","line":24,"column":3,"nodeType":"1564","messageId":"1565","endLine":24,"endColumn":12},{"ruleId":"1562","severity":1,"message":"1671","line":33,"column":8,"nodeType":"1564","messageId":"1565","endLine":33,"endColumn":11},{"ruleId":"1562","severity":1,"message":"1580","line":6,"column":3,"nodeType":"1564","messageId":"1565","endLine":6,"endColumn":12},{"ruleId":"1562","severity":1,"message":"1566","line":10,"column":3,"nodeType":"1564","messageId":"1565","endLine":10,"endColumn":7},{"ruleId":"1562","severity":1,"message":"1795","line":15,"column":13,"nodeType":"1564","messageId":"1565","endLine":15,"endColumn":23},{"ruleId":"1562","severity":1,"message":"1711","line":18,"column":3,"nodeType":"1564","messageId":"1565","endLine":18,"endColumn":15},{"ruleId":"1562","severity":1,"message":"1583","line":26,"column":23,"nodeType":"1564","messageId":"1565","endLine":26,"endColumn":29},{"ruleId":"1562","severity":1,"message":"1712","line":101,"column":8,"nodeType":"1564","messageId":"1565","endLine":101,"endColumn":21},{"ruleId":"1562","severity":1,"message":"1713","line":103,"column":8,"nodeType":"1564","messageId":"1565","endLine":103,"endColumn":29},{"ruleId":"1562","severity":1,"message":"1796","line":105,"column":8,"nodeType":"1564","messageId":"1565","endLine":105,"endColumn":20},{"ruleId":"1562","severity":1,"message":"1797","line":105,"column":22,"nodeType":"1564","messageId":"1565","endLine":105,"endColumn":35},{"ruleId":"1562","severity":1,"message":"1642","line":3,"column":3,"nodeType":"1564","messageId":"1565","endLine":3,"endColumn":17},{"ruleId":"1562","severity":1,"message":"1643","line":4,"column":3,"nodeType":"1564","messageId":"1565","endLine":4,"endColumn":16},{"ruleId":"1562","severity":1,"message":"1645","line":8,"column":56,"nodeType":"1564","messageId":"1565","endLine":8,"endColumn":73},{"ruleId":"1562","severity":1,"message":"1590","line":8,"column":88,"nodeType":"1564","messageId":"1565","endLine":8,"endColumn":97},{"ruleId":"1562","severity":1,"message":"1587","line":8,"column":99,"nodeType":"1564","messageId":"1565","endLine":8,"endColumn":110},{"ruleId":"1562","severity":1,"message":"1589","line":8,"column":112,"nodeType":"1564","messageId":"1565","endLine":8,"endColumn":122},{"ruleId":"1562","severity":1,"message":"1588","line":8,"column":124,"nodeType":"1564","messageId":"1565","endLine":8,"endColumn":130},{"ruleId":"1562","severity":1,"message":"1581","line":8,"column":132,"nodeType":"1564","messageId":"1565","endLine":8,"endColumn":140},{"ruleId":"1562","severity":1,"message":"1655","line":15,"column":10,"nodeType":"1564","messageId":"1565","endLine":15,"endColumn":20},{"ruleId":"1562","severity":1,"message":"1657","line":18,"column":3,"nodeType":"1564","messageId":"1565","endLine":18,"endColumn":22},{"ruleId":"1562","severity":1,"message":"1658","line":19,"column":3,"nodeType":"1564","messageId":"1565","endLine":19,"endColumn":16},{"ruleId":"1562","severity":1,"message":"1659","line":20,"column":3,"nodeType":"1564","messageId":"1565","endLine":20,"endColumn":12},{"ruleId":"1562","severity":1,"message":"1660","line":21,"column":3,"nodeType":"1564","messageId":"1565","endLine":21,"endColumn":12},{"ruleId":"1562","severity":1,"message":"1661","line":22,"column":3,"nodeType":"1564","messageId":"1565","endLine":22,"endColumn":7},{"ruleId":"1562","severity":1,"message":"1662","line":23,"column":3,"nodeType":"1564","messageId":"1565","endLine":23,"endColumn":7},{"ruleId":"1562","severity":1,"message":"1663","line":24,"column":3,"nodeType":"1564","messageId":"1565","endLine":24,"endColumn":11},{"ruleId":"1562","severity":1,"message":"1664","line":25,"column":3,"nodeType":"1564","messageId":"1565","endLine":25,"endColumn":6},{"ruleId":"1562","severity":1,"message":"1665","line":26,"column":3,"nodeType":"1564","messageId":"1565","endLine":26,"endColumn":7},{"ruleId":"1562","severity":1,"message":"1666","line":27,"column":3,"nodeType":"1564","messageId":"1565","endLine":27,"endColumn":8},{"ruleId":"1562","severity":1,"message":"1667","line":28,"column":3,"nodeType":"1564","messageId":"1565","endLine":28,"endColumn":8},{"ruleId":"1562","severity":1,"message":"1669","line":35,"column":8,"nodeType":"1564","messageId":"1565","endLine":35,"endColumn":12},{"ruleId":"1562","severity":1,"message":"1671","line":39,"column":8,"nodeType":"1564","messageId":"1565","endLine":39,"endColumn":11},{"ruleId":"1562","severity":1,"message":"1672","line":41,"column":8,"nodeType":"1564","messageId":"1565","endLine":41,"endColumn":15},{"ruleId":"1562","severity":1,"message":"1735","line":53,"column":7,"nodeType":"1564","messageId":"1565","endLine":53,"endColumn":21},{"ruleId":"1562","severity":1,"message":"1736","line":62,"column":7,"nodeType":"1564","messageId":"1565","endLine":62,"endColumn":20},{"ruleId":"1562","severity":1,"message":"1737","line":68,"column":7,"nodeType":"1564","messageId":"1565","endLine":68,"endColumn":12},{"ruleId":"1562","severity":1,"message":"1738","line":71,"column":8,"nodeType":"1564","messageId":"1565","endLine":71,"endColumn":22},{"ruleId":"1562","severity":1,"message":"1739","line":71,"column":24,"nodeType":"1564","messageId":"1565","endLine":71,"endColumn":41},{"ruleId":"1558","replacedBy":"1798"},{"ruleId":"1560","replacedBy":"1799"},{"ruleId":"1562","severity":1,"message":"1589","line":3,"column":77,"nodeType":"1564","messageId":"1565","endLine":3,"endColumn":87},{"ruleId":"1562","severity":1,"message":"1581","line":3,"column":89,"nodeType":"1564","messageId":"1565","endLine":3,"endColumn":97},{"ruleId":"1562","severity":1,"message":"1800","line":4,"column":22,"nodeType":"1564","messageId":"1565","endLine":4,"endColumn":26},{"ruleId":"1562","severity":1,"message":"1801","line":4,"column":28,"nodeType":"1564","messageId":"1565","endLine":4,"endColumn":36},{"ruleId":"1562","severity":1,"message":"1585","line":6,"column":16,"nodeType":"1564","messageId":"1565","endLine":6,"endColumn":20},{"ruleId":"1562","severity":1,"message":"1802","line":8,"column":27,"nodeType":"1564","messageId":"1565","endLine":8,"endColumn":41},{"ruleId":"1562","severity":1,"message":"1574","line":13,"column":10,"nodeType":"1564","messageId":"1565","endLine":13,"endColumn":20},{"ruleId":"1562","severity":1,"message":"1588","line":15,"column":16,"nodeType":"1564","messageId":"1565","endLine":15,"endColumn":22},{"ruleId":"1803","severity":1,"message":"1804","line":44,"column":26,"nodeType":"1718","messageId":"1805","endLine":46,"endColumn":68},{"ruleId":"1562","severity":1,"message":"1806","line":49,"column":12,"nodeType":"1564","messageId":"1565","endLine":49,"endColumn":24},{"ruleId":"1562","severity":1,"message":"1807","line":49,"column":26,"nodeType":"1564","messageId":"1565","endLine":49,"endColumn":34},{"ruleId":"1562","severity":1,"message":"1808","line":50,"column":12,"nodeType":"1564","messageId":"1565","endLine":50,"endColumn":18},{"ruleId":"1562","severity":1,"message":"1809","line":54,"column":12,"nodeType":"1564","messageId":"1565","endLine":54,"endColumn":29},{"ruleId":"1562","severity":1,"message":"1810","line":55,"column":12,"nodeType":"1564","messageId":"1565","endLine":55,"endColumn":17},{"ruleId":"1562","severity":1,"message":"1811","line":55,"column":19,"nodeType":"1564","messageId":"1565","endLine":55,"endColumn":27},{"ruleId":"1562","severity":1,"message":"1812","line":95,"column":12,"nodeType":"1564","messageId":"1565","endLine":95,"endColumn":22},{"ruleId":"1562","severity":1,"message":"1813","line":135,"column":11,"nodeType":"1564","messageId":"1565","endLine":135,"endColumn":31},{"ruleId":"1562","severity":1,"message":"1814","line":166,"column":11,"nodeType":"1564","messageId":"1565","endLine":166,"endColumn":31},{"ruleId":"1562","severity":1,"message":"1609","line":214,"column":11,"nodeType":"1564","messageId":"1565","endLine":214,"endColumn":18},{"ruleId":"1562","severity":1,"message":"1809","line":46,"column":10,"nodeType":"1564","messageId":"1565","endLine":46,"endColumn":27},{"ruleId":"1562","severity":1,"message":"1815","line":46,"column":29,"nodeType":"1564","messageId":"1565","endLine":46,"endColumn":49},{"ruleId":"1562","severity":1,"message":"1605","line":48,"column":8,"nodeType":"1564","messageId":"1565","endLine":48,"endColumn":13},{"ruleId":"1562","severity":1,"message":"1816","line":80,"column":9,"nodeType":"1564","messageId":"1565","endLine":80,"endColumn":19},{"ruleId":"1562","severity":1,"message":"1817","line":130,"column":9,"nodeType":"1564","messageId":"1565","endLine":130,"endColumn":21},{"ruleId":"1716","severity":1,"message":"1818","line":138,"column":6,"nodeType":"1718","endLine":138,"endColumn":8,"suggestions":"1819"},{"ruleId":"1820","severity":1,"message":"1821","line":254,"column":34,"nodeType":"1822","messageId":"1823","endLine":254,"endColumn":36},{"ruleId":"1824","severity":1,"message":"1825","line":485,"column":19,"nodeType":"1826","endLine":485,"endColumn":165},{"ruleId":"1827","severity":1,"message":"1828","line":485,"column":95,"nodeType":"1829","messageId":"1830","endLine":485,"endColumn":115},{"ruleId":"1562","severity":1,"message":"1583","line":3,"column":5,"nodeType":"1564","messageId":"1565","endLine":3,"endColumn":11},{"ruleId":"1562","severity":1,"message":"1613","line":3,"column":13,"nodeType":"1564","messageId":"1565","endLine":3,"endColumn":19},{"ruleId":"1562","severity":1,"message":"1614","line":3,"column":21,"nodeType":"1564","messageId":"1565","endLine":3,"endColumn":34},{"ruleId":"1562","severity":1,"message":"1615","line":3,"column":36,"nodeType":"1564","messageId":"1565","endLine":3,"endColumn":49},{"ruleId":"1562","severity":1,"message":"1616","line":3,"column":51,"nodeType":"1564","messageId":"1565","endLine":3,"endColumn":62},{"ruleId":"1562","severity":1,"message":"1587","line":3,"column":64,"nodeType":"1564","messageId":"1565","endLine":3,"endColumn":75},{"ruleId":"1562","severity":1,"message":"1589","line":3,"column":77,"nodeType":"1564","messageId":"1565","endLine":3,"endColumn":87},{"ruleId":"1562","severity":1,"message":"1581","line":3,"column":89,"nodeType":"1564","messageId":"1565","endLine":3,"endColumn":97},{"ruleId":"1562","severity":1,"message":"1800","line":4,"column":22,"nodeType":"1564","messageId":"1565","endLine":4,"endColumn":26},{"ruleId":"1562","severity":1,"message":"1801","line":4,"column":28,"nodeType":"1564","messageId":"1565","endLine":4,"endColumn":36},{"ruleId":"1562","severity":1,"message":"1831","line":4,"column":38,"nodeType":"1564","messageId":"1565","endLine":4,"endColumn":46},{"ruleId":"1562","severity":1,"message":"1653","line":4,"column":48,"nodeType":"1564","messageId":"1565","endLine":4,"endColumn":64},{"ruleId":"1562","severity":1,"message":"1585","line":6,"column":16,"nodeType":"1564","messageId":"1565","endLine":6,"endColumn":20},{"ruleId":"1562","severity":1,"message":"1654","line":8,"column":5,"nodeType":"1564","messageId":"1565","endLine":8,"endColumn":14},{"ruleId":"1562","severity":1,"message":"1832","line":8,"column":16,"nodeType":"1564","messageId":"1565","endLine":8,"endColumn":25},{"ruleId":"1562","severity":1,"message":"1802","line":8,"column":27,"nodeType":"1564","messageId":"1565","endLine":8,"endColumn":41},{"ruleId":"1562","severity":1,"message":"1833","line":10,"column":8,"nodeType":"1564","messageId":"1565","endLine":10,"endColumn":19},{"ruleId":"1562","severity":1,"message":"1574","line":13,"column":10,"nodeType":"1564","messageId":"1565","endLine":13,"endColumn":20},{"ruleId":"1562","severity":1,"message":"1588","line":15,"column":16,"nodeType":"1564","messageId":"1565","endLine":15,"endColumn":22},{"ruleId":"1562","severity":1,"message":"1590","line":15,"column":24,"nodeType":"1564","messageId":"1565","endLine":15,"endColumn":33},{"ruleId":"1562","severity":1,"message":"1618","line":16,"column":10,"nodeType":"1564","messageId":"1565","endLine":16,"endColumn":19},{"ruleId":"1562","severity":1,"message":"1619","line":18,"column":8,"nodeType":"1564","messageId":"1565","endLine":18,"endColumn":18},{"ruleId":"1562","severity":1,"message":"1620","line":19,"column":8,"nodeType":"1564","messageId":"1565","endLine":19,"endColumn":16},{"ruleId":"1562","severity":1,"message":"1834","line":46,"column":12,"nodeType":"1564","messageId":"1565","endLine":46,"endColumn":25},{"ruleId":"1562","severity":1,"message":"1835","line":46,"column":27,"nodeType":"1564","messageId":"1565","endLine":46,"endColumn":43},{"ruleId":"1562","severity":1,"message":"1836","line":47,"column":12,"nodeType":"1564","messageId":"1565","endLine":47,"endColumn":20},{"ruleId":"1562","severity":1,"message":"1837","line":47,"column":22,"nodeType":"1564","messageId":"1565","endLine":47,"endColumn":33},{"ruleId":"1562","severity":1,"message":"1808","line":48,"column":12,"nodeType":"1564","messageId":"1565","endLine":48,"endColumn":18},{"ruleId":"1562","severity":1,"message":"1838","line":48,"column":20,"nodeType":"1564","messageId":"1565","endLine":48,"endColumn":29},{"ruleId":"1562","severity":1,"message":"1627","line":49,"column":12,"nodeType":"1564","messageId":"1565","endLine":49,"endColumn":16},{"ruleId":"1562","severity":1,"message":"1810","line":54,"column":12,"nodeType":"1564","messageId":"1565","endLine":54,"endColumn":17},{"ruleId":"1562","severity":1,"message":"1811","line":54,"column":19,"nodeType":"1564","messageId":"1565","endLine":54,"endColumn":27},{"ruleId":"1562","severity":1,"message":"1839","line":60,"column":12,"nodeType":"1564","messageId":"1565","endLine":60,"endColumn":16},{"ruleId":"1562","severity":1,"message":"1840","line":60,"column":18,"nodeType":"1564","messageId":"1565","endLine":60,"endColumn":25},{"ruleId":"1562","severity":1,"message":"1812","line":94,"column":12,"nodeType":"1564","messageId":"1565","endLine":94,"endColumn":22},{"ruleId":"1562","severity":1,"message":"1633","line":106,"column":11,"nodeType":"1564","messageId":"1565","endLine":106,"endColumn":27},{"ruleId":"1562","severity":1,"message":"1813","line":134,"column":11,"nodeType":"1564","messageId":"1565","endLine":134,"endColumn":31},{"ruleId":"1562","severity":1,"message":"1841","line":142,"column":11,"nodeType":"1564","messageId":"1565","endLine":142,"endColumn":31},{"ruleId":"1562","severity":1,"message":"1814","line":161,"column":11,"nodeType":"1564","messageId":"1565","endLine":161,"endColumn":31},{"ruleId":"1562","severity":1,"message":"1636","line":183,"column":11,"nodeType":"1564","messageId":"1565","endLine":183,"endColumn":21},{"ruleId":"1562","severity":1,"message":"1609","line":186,"column":11,"nodeType":"1564","messageId":"1565","endLine":186,"endColumn":18},{"ruleId":"1562","severity":1,"message":"1637","line":189,"column":11,"nodeType":"1564","messageId":"1565","endLine":189,"endColumn":22},{"ruleId":"1562","severity":1,"message":"1611","line":192,"column":11,"nodeType":"1564","messageId":"1565","endLine":192,"endColumn":19},{"ruleId":"1562","severity":1,"message":"1642","line":3,"column":3,"nodeType":"1564","messageId":"1565","endLine":3,"endColumn":17},{"ruleId":"1562","severity":1,"message":"1643","line":4,"column":3,"nodeType":"1564","messageId":"1565","endLine":4,"endColumn":16},{"ruleId":"1562","severity":1,"message":"1644","line":6,"column":8,"nodeType":"1564","messageId":"1565","endLine":6,"endColumn":22},{"ruleId":"1562","severity":1,"message":"1613","line":8,"column":11,"nodeType":"1564","messageId":"1565","endLine":8,"endColumn":17},{"ruleId":"1562","severity":1,"message":"1614","line":8,"column":19,"nodeType":"1564","messageId":"1565","endLine":8,"endColumn":32},{"ruleId":"1562","severity":1,"message":"1615","line":8,"column":34,"nodeType":"1564","messageId":"1565","endLine":8,"endColumn":47},{"ruleId":"1562","severity":1,"message":"1645","line":8,"column":49,"nodeType":"1564","messageId":"1565","endLine":8,"endColumn":66},{"ruleId":"1562","severity":1,"message":"1616","line":8,"column":68,"nodeType":"1564","messageId":"1565","endLine":8,"endColumn":79},{"ruleId":"1562","severity":1,"message":"1589","line":8,"column":94,"nodeType":"1564","messageId":"1565","endLine":8,"endColumn":104},{"ruleId":"1562","severity":1,"message":"1581","line":8,"column":106,"nodeType":"1564","messageId":"1565","endLine":8,"endColumn":114},{"ruleId":"1562","severity":1,"message":"1646","line":9,"column":3,"nodeType":"1564","messageId":"1565","endLine":9,"endColumn":11},{"ruleId":"1562","severity":1,"message":"1647","line":9,"column":13,"nodeType":"1564","messageId":"1565","endLine":9,"endColumn":18},{"ruleId":"1562","severity":1,"message":"1648","line":10,"column":3,"nodeType":"1564","messageId":"1565","endLine":10,"endColumn":12},{"ruleId":"1562","severity":1,"message":"1649","line":11,"column":3,"nodeType":"1564","messageId":"1565","endLine":11,"endColumn":12},{"ruleId":"1562","severity":1,"message":"1650","line":12,"column":3,"nodeType":"1564","messageId":"1565","endLine":12,"endColumn":12},{"ruleId":"1562","severity":1,"message":"1588","line":19,"column":27,"nodeType":"1564","messageId":"1565","endLine":19,"endColumn":33},{"ruleId":"1562","severity":1,"message":"1655","line":21,"column":10,"nodeType":"1564","messageId":"1565","endLine":21,"endColumn":20},{"ruleId":"1562","severity":1,"message":"1656","line":22,"column":10,"nodeType":"1564","messageId":"1565","endLine":22,"endColumn":18},{"ruleId":"1562","severity":1,"message":"1657","line":24,"column":3,"nodeType":"1564","messageId":"1565","endLine":24,"endColumn":22},{"ruleId":"1562","severity":1,"message":"1658","line":25,"column":3,"nodeType":"1564","messageId":"1565","endLine":25,"endColumn":16},{"ruleId":"1562","severity":1,"message":"1659","line":26,"column":3,"nodeType":"1564","messageId":"1565","endLine":26,"endColumn":12},{"ruleId":"1562","severity":1,"message":"1660","line":27,"column":3,"nodeType":"1564","messageId":"1565","endLine":27,"endColumn":12},{"ruleId":"1562","severity":1,"message":"1661","line":28,"column":3,"nodeType":"1564","messageId":"1565","endLine":28,"endColumn":7},{"ruleId":"1562","severity":1,"message":"1662","line":29,"column":3,"nodeType":"1564","messageId":"1565","endLine":29,"endColumn":7},{"ruleId":"1562","severity":1,"message":"1663","line":30,"column":3,"nodeType":"1564","messageId":"1565","endLine":30,"endColumn":11},{"ruleId":"1562","severity":1,"message":"1664","line":31,"column":3,"nodeType":"1564","messageId":"1565","endLine":31,"endColumn":6},{"ruleId":"1562","severity":1,"message":"1665","line":32,"column":3,"nodeType":"1564","messageId":"1565","endLine":32,"endColumn":7},{"ruleId":"1562","severity":1,"message":"1666","line":33,"column":3,"nodeType":"1564","messageId":"1565","endLine":33,"endColumn":8},{"ruleId":"1562","severity":1,"message":"1667","line":34,"column":3,"nodeType":"1564","messageId":"1565","endLine":34,"endColumn":8},{"ruleId":"1562","severity":1,"message":"1668","line":36,"column":10,"nodeType":"1564","messageId":"1565","endLine":36,"endColumn":21},{"ruleId":"1562","severity":1,"message":"1669","line":42,"column":8,"nodeType":"1564","messageId":"1565","endLine":42,"endColumn":12},{"ruleId":"1562","severity":1,"message":"1670","line":43,"column":8,"nodeType":"1564","messageId":"1565","endLine":43,"endColumn":14},{"ruleId":"1562","severity":1,"message":"1574","line":45,"column":10,"nodeType":"1564","messageId":"1565","endLine":45,"endColumn":20},{"ruleId":"1562","severity":1,"message":"1671","line":46,"column":8,"nodeType":"1564","messageId":"1565","endLine":46,"endColumn":11},{"ruleId":"1562","severity":1,"message":"1672","line":47,"column":8,"nodeType":"1564","messageId":"1565","endLine":47,"endColumn":15},{"ruleId":"1562","severity":1,"message":"1673","line":48,"column":10,"nodeType":"1564","messageId":"1565","endLine":48,"endColumn":20},{"ruleId":"1562","severity":1,"message":"1674","line":50,"column":9,"nodeType":"1564","messageId":"1565","endLine":50,"endColumn":16},{"ruleId":"1562","severity":1,"message":"1604","line":51,"column":10,"nodeType":"1564","messageId":"1565","endLine":51,"endColumn":13},{"ruleId":"1562","severity":1,"message":"1605","line":53,"column":8,"nodeType":"1564","messageId":"1565","endLine":53,"endColumn":13},{"ruleId":"1562","severity":1,"message":"1757","line":54,"column":10,"nodeType":"1564","messageId":"1565","endLine":54,"endColumn":26},{"ruleId":"1562","severity":1,"message":"1842","line":54,"column":28,"nodeType":"1564","messageId":"1565","endLine":54,"endColumn":47},{"ruleId":"1562","severity":1,"message":"1756","line":55,"column":10,"nodeType":"1564","messageId":"1565","endLine":55,"endColumn":19},{"ruleId":"1562","severity":1,"message":"1843","line":55,"column":21,"nodeType":"1564","messageId":"1565","endLine":55,"endColumn":33},{"ruleId":"1562","severity":1,"message":"1675","line":56,"column":10,"nodeType":"1564","messageId":"1565","endLine":56,"endColumn":33},{"ruleId":"1562","severity":1,"message":"1627","line":57,"column":10,"nodeType":"1564","messageId":"1565","endLine":57,"endColumn":14},{"ruleId":"1562","severity":1,"message":"1754","line":58,"column":10,"nodeType":"1564","messageId":"1565","endLine":58,"endColumn":22},{"ruleId":"1562","severity":1,"message":"1844","line":58,"column":24,"nodeType":"1564","messageId":"1565","endLine":58,"endColumn":39},{"ruleId":"1562","severity":1,"message":"1845","line":59,"column":10,"nodeType":"1564","messageId":"1565","endLine":59,"endColumn":18},{"ruleId":"1562","severity":1,"message":"1846","line":60,"column":10,"nodeType":"1564","messageId":"1565","endLine":60,"endColumn":23},{"ruleId":"1562","severity":1,"message":"1847","line":60,"column":25,"nodeType":"1564","messageId":"1565","endLine":60,"endColumn":41},{"ruleId":"1562","severity":1,"message":"1676","line":61,"column":31,"nodeType":"1564","messageId":"1565","endLine":61,"endColumn":53},{"ruleId":"1562","severity":1,"message":"1610","line":71,"column":9,"nodeType":"1564","messageId":"1565","endLine":71,"endColumn":21},{"ruleId":"1562","severity":1,"message":"1848","line":90,"column":9,"nodeType":"1564","messageId":"1565","endLine":90,"endColumn":29},{"ruleId":"1562","severity":1,"message":"1849","line":96,"column":9,"nodeType":"1564","messageId":"1565","endLine":96,"endColumn":25},{"ruleId":"1562","severity":1,"message":"1677","line":100,"column":9,"nodeType":"1564","messageId":"1565","endLine":100,"endColumn":35},{"ruleId":"1562","severity":1,"message":"1636","line":107,"column":9,"nodeType":"1564","messageId":"1565","endLine":107,"endColumn":19},{"ruleId":"1562","severity":1,"message":"1850","line":2,"column":16,"nodeType":"1564","messageId":"1565","endLine":2,"endColumn":32},{"ruleId":"1562","severity":1,"message":"1574","line":2,"column":34,"nodeType":"1564","messageId":"1565","endLine":2,"endColumn":44},{"ruleId":"1562","severity":1,"message":"1851","line":2,"column":46,"nodeType":"1564","messageId":"1565","endLine":2,"endColumn":50},{"ruleId":"1562","severity":1,"message":"1852","line":2,"column":52,"nodeType":"1564","messageId":"1565","endLine":2,"endColumn":55},{"ruleId":"1562","severity":1,"message":"1590","line":2,"column":57,"nodeType":"1564","messageId":"1565","endLine":2,"endColumn":66},{"ruleId":"1562","severity":1,"message":"1853","line":2,"column":68,"nodeType":"1564","messageId":"1565","endLine":2,"endColumn":72},{"ruleId":"1562","severity":1,"message":"1583","line":3,"column":10,"nodeType":"1564","messageId":"1565","endLine":3,"endColumn":16},{"ruleId":"1562","severity":1,"message":"1854","line":4,"column":10,"nodeType":"1564","messageId":"1565","endLine":4,"endColumn":19},{"ruleId":"1562","severity":1,"message":"1613","line":11,"column":5,"nodeType":"1564","messageId":"1565","endLine":11,"endColumn":11},{"ruleId":"1562","severity":1,"message":"1614","line":11,"column":13,"nodeType":"1564","messageId":"1565","endLine":11,"endColumn":26},{"ruleId":"1562","severity":1,"message":"1615","line":11,"column":28,"nodeType":"1564","messageId":"1565","endLine":11,"endColumn":41},{"ruleId":"1562","severity":1,"message":"1645","line":11,"column":43,"nodeType":"1564","messageId":"1565","endLine":11,"endColumn":60},{"ruleId":"1562","severity":1,"message":"1616","line":11,"column":62,"nodeType":"1564","messageId":"1565","endLine":11,"endColumn":73},{"ruleId":"1562","severity":1,"message":"1646","line":12,"column":5,"nodeType":"1564","messageId":"1565","endLine":12,"endColumn":13},{"ruleId":"1562","severity":1,"message":"1647","line":12,"column":15,"nodeType":"1564","messageId":"1565","endLine":12,"endColumn":20},{"ruleId":"1562","severity":1,"message":"1648","line":13,"column":5,"nodeType":"1564","messageId":"1565","endLine":13,"endColumn":14},{"ruleId":"1562","severity":1,"message":"1649","line":14,"column":5,"nodeType":"1564","messageId":"1565","endLine":14,"endColumn":14},{"ruleId":"1562","severity":1,"message":"1650","line":15,"column":5,"nodeType":"1564","messageId":"1565","endLine":15,"endColumn":14},{"ruleId":"1562","severity":1,"message":"1585","line":18,"column":10,"nodeType":"1564","messageId":"1565","endLine":18,"endColumn":14},{"ruleId":"1562","severity":1,"message":"1586","line":18,"column":16,"nodeType":"1564","messageId":"1565","endLine":18,"endColumn":19},{"ruleId":"1562","severity":1,"message":"1653","line":20,"column":8,"nodeType":"1564","messageId":"1565","endLine":20,"endColumn":24},{"ruleId":"1562","severity":1,"message":"1654","line":21,"column":8,"nodeType":"1564","messageId":"1565","endLine":21,"endColumn":17},{"ruleId":"1562","severity":1,"message":"1566","line":31,"column":10,"nodeType":"1564","messageId":"1565","endLine":31,"endColumn":14},{"ruleId":"1562","severity":1,"message":"1655","line":35,"column":10,"nodeType":"1564","messageId":"1565","endLine":35,"endColumn":20},{"ruleId":"1562","severity":1,"message":"1604","line":54,"column":12,"nodeType":"1564","messageId":"1565","endLine":54,"endColumn":15},{"ruleId":"1562","severity":1,"message":"1624","line":54,"column":17,"nodeType":"1564","messageId":"1565","endLine":54,"endColumn":23},{"ruleId":"1562","severity":1,"message":"1855","line":56,"column":9,"nodeType":"1564","messageId":"1565","endLine":56,"endColumn":21},{"ruleId":"1562","severity":1,"message":"1856","line":60,"column":10,"nodeType":"1564","messageId":"1565","endLine":60,"endColumn":19},{"ruleId":"1562","severity":1,"message":"1857","line":60,"column":21,"nodeType":"1564","messageId":"1565","endLine":60,"endColumn":33},{"ruleId":"1562","severity":1,"message":"1605","line":61,"column":10,"nodeType":"1564","messageId":"1565","endLine":61,"endColumn":15},{"ruleId":"1562","severity":1,"message":"1606","line":61,"column":17,"nodeType":"1564","messageId":"1565","endLine":61,"endColumn":25},{"ruleId":"1562","severity":1,"message":"1858","line":62,"column":10,"nodeType":"1564","messageId":"1565","endLine":62,"endColumn":21},{"ruleId":"1562","severity":1,"message":"1859","line":62,"column":23,"nodeType":"1564","messageId":"1565","endLine":62,"endColumn":37},{"ruleId":"1562","severity":1,"message":"1860","line":63,"column":10,"nodeType":"1564","messageId":"1565","endLine":63,"endColumn":20},{"ruleId":"1562","severity":1,"message":"1861","line":63,"column":22,"nodeType":"1564","messageId":"1565","endLine":63,"endColumn":35},{"ruleId":"1562","severity":1,"message":"1862","line":64,"column":10,"nodeType":"1564","messageId":"1565","endLine":64,"endColumn":23},{"ruleId":"1562","severity":1,"message":"1863","line":64,"column":25,"nodeType":"1564","messageId":"1565","endLine":64,"endColumn":41},{"ruleId":"1562","severity":1,"message":"1864","line":65,"column":10,"nodeType":"1564","messageId":"1565","endLine":65,"endColumn":19},{"ruleId":"1562","severity":1,"message":"1781","line":65,"column":21,"nodeType":"1564","messageId":"1565","endLine":65,"endColumn":33},{"ruleId":"1865","severity":1,"message":"1866","line":107,"column":41,"nodeType":"1826","endLine":107,"endColumn":125},{"ruleId":"1824","severity":1,"message":"1825","line":125,"column":49,"nodeType":"1826","endLine":126,"endColumn":84},{"ruleId":"1824","severity":1,"message":"1825","line":129,"column":33,"nodeType":"1826","endLine":129,"endColumn":110},{"ruleId":"1827","severity":1,"message":"1828","line":129,"column":41,"nodeType":"1829","messageId":"1830","endLine":129,"endColumn":61},{"ruleId":"1824","severity":1,"message":"1825","line":139,"column":45,"nodeType":"1826","endLine":139,"endColumn":122},{"ruleId":"1827","severity":1,"message":"1828","line":139,"column":53,"nodeType":"1829","messageId":"1830","endLine":139,"endColumn":73},{"ruleId":"1824","severity":1,"message":"1825","line":142,"column":49,"nodeType":"1826","endLine":143,"endColumn":84},{"ruleId":"1827","severity":1,"message":"1828","line":142,"column":57,"nodeType":"1829","messageId":"1830","endLine":142,"endColumn":77},{"ruleId":"1824","severity":1,"message":"1825","line":201,"column":37,"nodeType":"1826","endLine":201,"endColumn":103},{"ruleId":"1827","severity":1,"message":"1828","line":201,"column":45,"nodeType":"1829","messageId":"1830","endLine":201,"endColumn":65},{"ruleId":"1865","severity":1,"message":"1866","line":210,"column":33,"nodeType":"1826","endLine":210,"endColumn":98},{"ruleId":"1824","severity":1,"message":"1825","line":366,"column":41,"nodeType":"1826","endLine":366,"endColumn":82},{"ruleId":"1827","severity":1,"message":"1828","line":366,"column":49,"nodeType":"1829","messageId":"1830","endLine":366,"endColumn":69},{"ruleId":"1824","severity":1,"message":"1825","line":391,"column":41,"nodeType":"1826","endLine":391,"endColumn":82},{"ruleId":"1827","severity":1,"message":"1828","line":391,"column":49,"nodeType":"1829","messageId":"1830","endLine":391,"endColumn":69},{"ruleId":"1824","severity":1,"message":"1825","line":416,"column":41,"nodeType":"1826","endLine":416,"endColumn":82},{"ruleId":"1827","severity":1,"message":"1828","line":416,"column":49,"nodeType":"1829","messageId":"1830","endLine":416,"endColumn":69},{"ruleId":"1824","severity":1,"message":"1825","line":440,"column":41,"nodeType":"1826","endLine":440,"endColumn":82},{"ruleId":"1827","severity":1,"message":"1828","line":440,"column":49,"nodeType":"1829","messageId":"1830","endLine":440,"endColumn":69},{"ruleId":"1824","severity":1,"message":"1825","line":468,"column":41,"nodeType":"1826","endLine":468,"endColumn":82},{"ruleId":"1827","severity":1,"message":"1828","line":468,"column":49,"nodeType":"1829","messageId":"1830","endLine":468,"endColumn":69},{"ruleId":"1824","severity":1,"message":"1825","line":494,"column":41,"nodeType":"1826","endLine":494,"endColumn":82},{"ruleId":"1827","severity":1,"message":"1828","line":494,"column":49,"nodeType":"1829","messageId":"1830","endLine":494,"endColumn":69},{"ruleId":"1824","severity":1,"message":"1825","line":519,"column":41,"nodeType":"1826","endLine":519,"endColumn":82},{"ruleId":"1827","severity":1,"message":"1828","line":519,"column":49,"nodeType":"1829","messageId":"1830","endLine":519,"endColumn":69},{"ruleId":"1562","severity":1,"message":"1584","line":2,"column":10,"nodeType":"1564","messageId":"1565","endLine":2,"endColumn":14},{"ruleId":"1562","severity":1,"message":"1850","line":2,"column":16,"nodeType":"1564","messageId":"1565","endLine":2,"endColumn":32},{"ruleId":"1562","severity":1,"message":"1574","line":2,"column":34,"nodeType":"1564","messageId":"1565","endLine":2,"endColumn":44},{"ruleId":"1562","severity":1,"message":"1851","line":2,"column":45,"nodeType":"1564","messageId":"1565","endLine":2,"endColumn":49},{"ruleId":"1562","severity":1,"message":"1852","line":2,"column":50,"nodeType":"1564","messageId":"1565","endLine":2,"endColumn":53},{"ruleId":"1562","severity":1,"message":"1590","line":2,"column":54,"nodeType":"1564","messageId":"1565","endLine":2,"endColumn":63},{"ruleId":"1562","severity":1,"message":"1853","line":2,"column":64,"nodeType":"1564","messageId":"1565","endLine":2,"endColumn":68},{"ruleId":"1562","severity":1,"message":"1583","line":3,"column":9,"nodeType":"1564","messageId":"1565","endLine":3,"endColumn":15},{"ruleId":"1562","severity":1,"message":"1854","line":4,"column":10,"nodeType":"1564","messageId":"1565","endLine":4,"endColumn":19},{"ruleId":"1562","severity":1,"message":"1780","line":8,"column":8,"nodeType":"1564","messageId":"1565","endLine":8,"endColumn":14},{"ruleId":"1562","severity":1,"message":"1867","line":9,"column":8,"nodeType":"1564","messageId":"1565","endLine":9,"endColumn":18},{"ruleId":"1562","severity":1,"message":"1868","line":10,"column":8,"nodeType":"1564","messageId":"1565","endLine":10,"endColumn":25},{"ruleId":"1562","severity":1,"message":"1869","line":11,"column":8,"nodeType":"1564","messageId":"1565","endLine":11,"endColumn":19},{"ruleId":"1562","severity":1,"message":"1870","line":14,"column":8,"nodeType":"1564","messageId":"1565","endLine":14,"endColumn":18},{"ruleId":"1562","severity":1,"message":"1871","line":15,"column":8,"nodeType":"1564","messageId":"1565","endLine":15,"endColumn":13},{"ruleId":"1562","severity":1,"message":"1566","line":16,"column":9,"nodeType":"1564","messageId":"1565","endLine":16,"endColumn":13},{"ruleId":"1562","severity":1,"message":"1674","line":30,"column":7,"nodeType":"1564","messageId":"1565","endLine":30,"endColumn":14},{"ruleId":"1562","severity":1,"message":"1855","line":31,"column":7,"nodeType":"1564","messageId":"1565","endLine":31,"endColumn":19},{"ruleId":"1562","severity":1,"message":"1856","line":32,"column":8,"nodeType":"1564","messageId":"1565","endLine":32,"endColumn":17},{"ruleId":"1562","severity":1,"message":"1857","line":32,"column":19,"nodeType":"1564","messageId":"1565","endLine":32,"endColumn":31},{"ruleId":"1562","severity":1,"message":"1605","line":33,"column":8,"nodeType":"1564","messageId":"1565","endLine":33,"endColumn":13},{"ruleId":"1562","severity":1,"message":"1606","line":33,"column":15,"nodeType":"1564","messageId":"1565","endLine":33,"endColumn":23},{"ruleId":"1562","severity":1,"message":"1858","line":34,"column":8,"nodeType":"1564","messageId":"1565","endLine":34,"endColumn":19},{"ruleId":"1562","severity":1,"message":"1859","line":34,"column":21,"nodeType":"1564","messageId":"1565","endLine":34,"endColumn":35},{"ruleId":"1562","severity":1,"message":"1860","line":35,"column":8,"nodeType":"1564","messageId":"1565","endLine":35,"endColumn":18},{"ruleId":"1562","severity":1,"message":"1861","line":35,"column":20,"nodeType":"1564","messageId":"1565","endLine":35,"endColumn":33},{"ruleId":"1562","severity":1,"message":"1862","line":36,"column":8,"nodeType":"1564","messageId":"1565","endLine":36,"endColumn":21},{"ruleId":"1562","severity":1,"message":"1863","line":36,"column":23,"nodeType":"1564","messageId":"1565","endLine":36,"endColumn":39},{"ruleId":"1562","severity":1,"message":"1864","line":37,"column":8,"nodeType":"1564","messageId":"1565","endLine":37,"endColumn":17},{"ruleId":"1562","severity":1,"message":"1781","line":37,"column":19,"nodeType":"1564","messageId":"1565","endLine":37,"endColumn":31},{"ruleId":"1865","severity":1,"message":"1866","line":61,"column":33,"nodeType":"1826","endLine":61,"endColumn":112},{"ruleId":"1824","severity":1,"message":"1825","line":79,"column":33,"nodeType":"1826","endLine":79,"endColumn":110},{"ruleId":"1827","severity":1,"message":"1828","line":79,"column":41,"nodeType":"1829","messageId":"1830","endLine":79,"endColumn":61},{"ruleId":"1824","severity":1,"message":"1825","line":82,"column":49,"nodeType":"1826","endLine":83,"endColumn":84},{"ruleId":"1827","severity":1,"message":"1828","line":82,"column":57,"nodeType":"1829","messageId":"1830","endLine":82,"endColumn":77},{"ruleId":"1824","severity":1,"message":"1825","line":94,"column":45,"nodeType":"1826","endLine":94,"endColumn":122},{"ruleId":"1827","severity":1,"message":"1828","line":94,"column":53,"nodeType":"1829","messageId":"1830","endLine":94,"endColumn":73},{"ruleId":"1824","severity":1,"message":"1825","line":97,"column":49,"nodeType":"1826","endLine":98,"endColumn":84},{"ruleId":"1827","severity":1,"message":"1828","line":97,"column":57,"nodeType":"1829","messageId":"1830","endLine":97,"endColumn":77},{"ruleId":"1562","severity":1,"message":"1584","line":2,"column":10,"nodeType":"1564","messageId":"1565","endLine":2,"endColumn":14},{"ruleId":"1562","severity":1,"message":"1850","line":2,"column":16,"nodeType":"1564","messageId":"1565","endLine":2,"endColumn":32},{"ruleId":"1562","severity":1,"message":"1574","line":2,"column":34,"nodeType":"1564","messageId":"1565","endLine":2,"endColumn":44},{"ruleId":"1562","severity":1,"message":"1851","line":2,"column":45,"nodeType":"1564","messageId":"1565","endLine":2,"endColumn":49},{"ruleId":"1562","severity":1,"message":"1852","line":2,"column":50,"nodeType":"1564","messageId":"1565","endLine":2,"endColumn":53},{"ruleId":"1562","severity":1,"message":"1590","line":2,"column":54,"nodeType":"1564","messageId":"1565","endLine":2,"endColumn":63},{"ruleId":"1562","severity":1,"message":"1853","line":2,"column":64,"nodeType":"1564","messageId":"1565","endLine":2,"endColumn":68},{"ruleId":"1562","severity":1,"message":"1583","line":3,"column":9,"nodeType":"1564","messageId":"1565","endLine":3,"endColumn":15},{"ruleId":"1562","severity":1,"message":"1854","line":4,"column":10,"nodeType":"1564","messageId":"1565","endLine":4,"endColumn":19},{"ruleId":"1562","severity":1,"message":"1872","line":7,"column":8,"nodeType":"1564","messageId":"1565","endLine":7,"endColumn":11},{"ruleId":"1562","severity":1,"message":"1867","line":8,"column":8,"nodeType":"1564","messageId":"1565","endLine":8,"endColumn":18},{"ruleId":"1562","severity":1,"message":"1868","line":9,"column":8,"nodeType":"1564","messageId":"1565","endLine":9,"endColumn":25},{"ruleId":"1562","severity":1,"message":"1869","line":10,"column":8,"nodeType":"1564","messageId":"1565","endLine":10,"endColumn":19},{"ruleId":"1562","severity":1,"message":"1870","line":13,"column":8,"nodeType":"1564","messageId":"1565","endLine":13,"endColumn":18},{"ruleId":"1562","severity":1,"message":"1871","line":14,"column":8,"nodeType":"1564","messageId":"1565","endLine":14,"endColumn":13},{"ruleId":"1562","severity":1,"message":"1566","line":15,"column":9,"nodeType":"1564","messageId":"1565","endLine":15,"endColumn":13},{"ruleId":"1562","severity":1,"message":"1674","line":29,"column":7,"nodeType":"1564","messageId":"1565","endLine":29,"endColumn":14},{"ruleId":"1562","severity":1,"message":"1855","line":30,"column":7,"nodeType":"1564","messageId":"1565","endLine":30,"endColumn":19},{"ruleId":"1562","severity":1,"message":"1856","line":31,"column":8,"nodeType":"1564","messageId":"1565","endLine":31,"endColumn":17},{"ruleId":"1562","severity":1,"message":"1857","line":31,"column":19,"nodeType":"1564","messageId":"1565","endLine":31,"endColumn":31},{"ruleId":"1562","severity":1,"message":"1605","line":32,"column":8,"nodeType":"1564","messageId":"1565","endLine":32,"endColumn":13},{"ruleId":"1562","severity":1,"message":"1606","line":32,"column":15,"nodeType":"1564","messageId":"1565","endLine":32,"endColumn":23},{"ruleId":"1562","severity":1,"message":"1858","line":33,"column":8,"nodeType":"1564","messageId":"1565","endLine":33,"endColumn":19},{"ruleId":"1562","severity":1,"message":"1859","line":33,"column":21,"nodeType":"1564","messageId":"1565","endLine":33,"endColumn":35},{"ruleId":"1562","severity":1,"message":"1860","line":34,"column":8,"nodeType":"1564","messageId":"1565","endLine":34,"endColumn":18},{"ruleId":"1562","severity":1,"message":"1861","line":34,"column":20,"nodeType":"1564","messageId":"1565","endLine":34,"endColumn":33},{"ruleId":"1562","severity":1,"message":"1862","line":35,"column":8,"nodeType":"1564","messageId":"1565","endLine":35,"endColumn":21},{"ruleId":"1562","severity":1,"message":"1863","line":35,"column":23,"nodeType":"1564","messageId":"1565","endLine":35,"endColumn":39},{"ruleId":"1562","severity":1,"message":"1864","line":36,"column":8,"nodeType":"1564","messageId":"1565","endLine":36,"endColumn":17},{"ruleId":"1562","severity":1,"message":"1781","line":36,"column":19,"nodeType":"1564","messageId":"1565","endLine":36,"endColumn":31},{"ruleId":"1562","severity":1,"message":"1636","line":37,"column":9,"nodeType":"1564","messageId":"1565","endLine":37,"endColumn":19},{"ruleId":"1562","severity":1,"message":"1759","line":39,"column":12,"nodeType":"1564","messageId":"1565","endLine":39,"endColumn":18},{"ruleId":"1562","severity":1,"message":"1873","line":39,"column":20,"nodeType":"1564","messageId":"1565","endLine":39,"endColumn":29},{"ruleId":"1562","severity":1,"message":"1604","line":46,"column":12,"nodeType":"1564","messageId":"1565","endLine":46,"endColumn":15},{"ruleId":"1562","severity":1,"message":"1624","line":46,"column":17,"nodeType":"1564","messageId":"1565","endLine":46,"endColumn":23},{"ruleId":"1562","severity":1,"message":"1627","line":48,"column":12,"nodeType":"1564","messageId":"1565","endLine":48,"endColumn":16},{"ruleId":"1562","severity":1,"message":"1628","line":48,"column":18,"nodeType":"1564","messageId":"1565","endLine":48,"endColumn":25},{"ruleId":"1562","severity":1,"message":"1874","line":50,"column":11,"nodeType":"1564","messageId":"1565","endLine":50,"endColumn":15},{"ruleId":"1562","severity":1,"message":"1875","line":51,"column":12,"nodeType":"1564","messageId":"1565","endLine":51,"endColumn":20},{"ruleId":"1562","severity":1,"message":"1876","line":51,"column":22,"nodeType":"1564","messageId":"1565","endLine":51,"endColumn":33},{"ruleId":"1716","severity":1,"message":"1877","line":68,"column":8,"nodeType":"1718","endLine":68,"endColumn":10,"suggestions":"1878"},{"ruleId":"1562","severity":1,"message":"1879","line":139,"column":15,"nodeType":"1564","messageId":"1565","endLine":139,"endColumn":21},{"ruleId":"1562","severity":1,"message":"1642","line":3,"column":3,"nodeType":"1564","messageId":"1565","endLine":3,"endColumn":17},{"ruleId":"1562","severity":1,"message":"1643","line":4,"column":3,"nodeType":"1564","messageId":"1565","endLine":4,"endColumn":16},{"ruleId":"1562","severity":1,"message":"1644","line":6,"column":8,"nodeType":"1564","messageId":"1565","endLine":6,"endColumn":22},{"ruleId":"1562","severity":1,"message":"1583","line":8,"column":3,"nodeType":"1564","messageId":"1565","endLine":8,"endColumn":9},{"ruleId":"1562","severity":1,"message":"1613","line":8,"column":11,"nodeType":"1564","messageId":"1565","endLine":8,"endColumn":17},{"ruleId":"1562","severity":1,"message":"1614","line":8,"column":19,"nodeType":"1564","messageId":"1565","endLine":8,"endColumn":32},{"ruleId":"1562","severity":1,"message":"1615","line":8,"column":34,"nodeType":"1564","messageId":"1565","endLine":8,"endColumn":47},{"ruleId":"1562","severity":1,"message":"1645","line":8,"column":49,"nodeType":"1564","messageId":"1565","endLine":8,"endColumn":66},{"ruleId":"1562","severity":1,"message":"1616","line":8,"column":68,"nodeType":"1564","messageId":"1565","endLine":8,"endColumn":79},{"ruleId":"1562","severity":1,"message":"1587","line":8,"column":81,"nodeType":"1564","messageId":"1565","endLine":8,"endColumn":92},{"ruleId":"1562","severity":1,"message":"1589","line":8,"column":94,"nodeType":"1564","messageId":"1565","endLine":8,"endColumn":104},{"ruleId":"1562","severity":1,"message":"1581","line":8,"column":106,"nodeType":"1564","messageId":"1565","endLine":8,"endColumn":114},{"ruleId":"1562","severity":1,"message":"1646","line":9,"column":3,"nodeType":"1564","messageId":"1565","endLine":9,"endColumn":11},{"ruleId":"1562","severity":1,"message":"1647","line":9,"column":13,"nodeType":"1564","messageId":"1565","endLine":9,"endColumn":18},{"ruleId":"1562","severity":1,"message":"1648","line":10,"column":3,"nodeType":"1564","messageId":"1565","endLine":10,"endColumn":12},{"ruleId":"1562","severity":1,"message":"1649","line":11,"column":3,"nodeType":"1564","messageId":"1565","endLine":11,"endColumn":12},{"ruleId":"1562","severity":1,"message":"1650","line":12,"column":3,"nodeType":"1564","messageId":"1565","endLine":12,"endColumn":12},{"ruleId":"1562","severity":1,"message":"1880","line":18,"column":8,"nodeType":"1564","messageId":"1565","endLine":18,"endColumn":34},{"ruleId":"1562","severity":1,"message":"1651","line":19,"column":8,"nodeType":"1564","messageId":"1565","endLine":19,"endColumn":13},{"ruleId":"1562","severity":1,"message":"1652","line":20,"column":8,"nodeType":"1564","messageId":"1565","endLine":20,"endColumn":18},{"ruleId":"1562","severity":1,"message":"1653","line":21,"column":8,"nodeType":"1564","messageId":"1565","endLine":21,"endColumn":24},{"ruleId":"1562","severity":1,"message":"1654","line":22,"column":8,"nodeType":"1564","messageId":"1565","endLine":22,"endColumn":17},{"ruleId":"1562","severity":1,"message":"1586","line":23,"column":22,"nodeType":"1564","messageId":"1565","endLine":23,"endColumn":25},{"ruleId":"1562","severity":1,"message":"1588","line":23,"column":27,"nodeType":"1564","messageId":"1565","endLine":23,"endColumn":33},{"ruleId":"1562","severity":1,"message":"1590","line":23,"column":35,"nodeType":"1564","messageId":"1565","endLine":23,"endColumn":44},{"ruleId":"1562","severity":1,"message":"1618","line":24,"column":10,"nodeType":"1564","messageId":"1565","endLine":24,"endColumn":19},{"ruleId":"1562","severity":1,"message":"1655","line":25,"column":10,"nodeType":"1564","messageId":"1565","endLine":25,"endColumn":20},{"ruleId":"1562","severity":1,"message":"1669","line":33,"column":8,"nodeType":"1564","messageId":"1565","endLine":33,"endColumn":12},{"ruleId":"1562","severity":1,"message":"1670","line":34,"column":8,"nodeType":"1564","messageId":"1565","endLine":34,"endColumn":14},{"ruleId":"1562","severity":1,"message":"1881","line":35,"column":8,"nodeType":"1564","messageId":"1565","endLine":35,"endColumn":17},{"ruleId":"1562","severity":1,"message":"1574","line":36,"column":10,"nodeType":"1564","messageId":"1565","endLine":36,"endColumn":20},{"ruleId":"1562","severity":1,"message":"1671","line":37,"column":8,"nodeType":"1564","messageId":"1565","endLine":37,"endColumn":11},{"ruleId":"1562","severity":1,"message":"1672","line":38,"column":8,"nodeType":"1564","messageId":"1565","endLine":38,"endColumn":15},{"ruleId":"1562","severity":1,"message":"1673","line":39,"column":10,"nodeType":"1564","messageId":"1565","endLine":39,"endColumn":20},{"ruleId":"1716","severity":1,"message":"1818","line":60,"column":4,"nodeType":"1718","endLine":60,"endColumn":6,"suggestions":"1882"},{"ruleId":"1883","severity":1,"message":"1884","line":128,"column":5,"nodeType":"1826","endLine":128,"endColumn":37},{"ruleId":"1824","severity":1,"message":"1825","line":135,"column":1,"nodeType":"1826","endLine":135,"endColumn":67},{"ruleId":"1827","severity":1,"message":"1828","line":135,"column":9,"nodeType":"1829","messageId":"1830","endLine":135,"endColumn":29},{"ruleId":"1562","severity":1,"message":"1642","line":3,"column":5,"nodeType":"1564","messageId":"1565","endLine":3,"endColumn":19},{"ruleId":"1562","severity":1,"message":"1643","line":4,"column":5,"nodeType":"1564","messageId":"1565","endLine":4,"endColumn":18},{"ruleId":"1562","severity":1,"message":"1644","line":6,"column":8,"nodeType":"1564","messageId":"1565","endLine":6,"endColumn":22},{"ruleId":"1562","severity":1,"message":"1613","line":8,"column":13,"nodeType":"1564","messageId":"1565","endLine":8,"endColumn":19},{"ruleId":"1562","severity":1,"message":"1614","line":8,"column":21,"nodeType":"1564","messageId":"1565","endLine":8,"endColumn":34},{"ruleId":"1562","severity":1,"message":"1615","line":8,"column":36,"nodeType":"1564","messageId":"1565","endLine":8,"endColumn":49},{"ruleId":"1562","severity":1,"message":"1645","line":8,"column":51,"nodeType":"1564","messageId":"1565","endLine":8,"endColumn":68},{"ruleId":"1562","severity":1,"message":"1616","line":8,"column":70,"nodeType":"1564","messageId":"1565","endLine":8,"endColumn":81},{"ruleId":"1562","severity":1,"message":"1587","line":8,"column":83,"nodeType":"1564","messageId":"1565","endLine":8,"endColumn":94},{"ruleId":"1562","severity":1,"message":"1589","line":8,"column":96,"nodeType":"1564","messageId":"1565","endLine":8,"endColumn":106},{"ruleId":"1562","severity":1,"message":"1581","line":8,"column":108,"nodeType":"1564","messageId":"1565","endLine":8,"endColumn":116},{"ruleId":"1562","severity":1,"message":"1646","line":9,"column":5,"nodeType":"1564","messageId":"1565","endLine":9,"endColumn":13},{"ruleId":"1562","severity":1,"message":"1647","line":9,"column":15,"nodeType":"1564","messageId":"1565","endLine":9,"endColumn":20},{"ruleId":"1562","severity":1,"message":"1648","line":10,"column":5,"nodeType":"1564","messageId":"1565","endLine":10,"endColumn":14},{"ruleId":"1562","severity":1,"message":"1649","line":11,"column":5,"nodeType":"1564","messageId":"1565","endLine":11,"endColumn":14},{"ruleId":"1562","severity":1,"message":"1650","line":12,"column":5,"nodeType":"1564","messageId":"1565","endLine":12,"endColumn":14},{"ruleId":"1562","severity":1,"message":"1880","line":18,"column":8,"nodeType":"1564","messageId":"1565","endLine":18,"endColumn":34},{"ruleId":"1562","severity":1,"message":"1651","line":19,"column":8,"nodeType":"1564","messageId":"1565","endLine":19,"endColumn":13},{"ruleId":"1562","severity":1,"message":"1652","line":20,"column":8,"nodeType":"1564","messageId":"1565","endLine":20,"endColumn":18},{"ruleId":"1562","severity":1,"message":"1653","line":21,"column":8,"nodeType":"1564","messageId":"1565","endLine":21,"endColumn":24},{"ruleId":"1562","severity":1,"message":"1654","line":22,"column":8,"nodeType":"1564","messageId":"1565","endLine":22,"endColumn":17},{"ruleId":"1562","severity":1,"message":"1588","line":23,"column":27,"nodeType":"1564","messageId":"1565","endLine":23,"endColumn":33},{"ruleId":"1562","severity":1,"message":"1618","line":24,"column":10,"nodeType":"1564","messageId":"1565","endLine":24,"endColumn":19},{"ruleId":"1562","severity":1,"message":"1655","line":25,"column":10,"nodeType":"1564","messageId":"1565","endLine":25,"endColumn":20},{"ruleId":"1562","severity":1,"message":"1885","line":31,"column":8,"nodeType":"1564","messageId":"1565","endLine":31,"endColumn":14},{"ruleId":"1562","severity":1,"message":"1669","line":33,"column":8,"nodeType":"1564","messageId":"1565","endLine":33,"endColumn":12},{"ruleId":"1562","severity":1,"message":"1670","line":34,"column":8,"nodeType":"1564","messageId":"1565","endLine":34,"endColumn":14},{"ruleId":"1562","severity":1,"message":"1881","line":35,"column":8,"nodeType":"1564","messageId":"1565","endLine":35,"endColumn":17},{"ruleId":"1562","severity":1,"message":"1574","line":36,"column":10,"nodeType":"1564","messageId":"1565","endLine":36,"endColumn":20},{"ruleId":"1562","severity":1,"message":"1671","line":37,"column":8,"nodeType":"1564","messageId":"1565","endLine":37,"endColumn":11},{"ruleId":"1562","severity":1,"message":"1672","line":38,"column":8,"nodeType":"1564","messageId":"1565","endLine":38,"endColumn":15},{"ruleId":"1562","severity":1,"message":"1673","line":39,"column":10,"nodeType":"1564","messageId":"1565","endLine":39,"endColumn":20},{"ruleId":"1562","severity":1,"message":"1886","line":52,"column":23,"nodeType":"1564","messageId":"1565","endLine":52,"endColumn":34},{"ruleId":"1562","severity":1,"message":"1887","line":53,"column":12,"nodeType":"1564","messageId":"1565","endLine":53,"endColumn":19},{"ruleId":"1562","severity":1,"message":"1888","line":53,"column":21,"nodeType":"1564","messageId":"1565","endLine":53,"endColumn":31},{"ruleId":"1562","severity":1,"message":"1605","line":54,"column":10,"nodeType":"1564","messageId":"1565","endLine":54,"endColumn":15},{"ruleId":"1562","severity":1,"message":"1834","line":57,"column":12,"nodeType":"1564","messageId":"1565","endLine":57,"endColumn":25},{"ruleId":"1562","severity":1,"message":"1889","line":70,"column":11,"nodeType":"1564","messageId":"1565","endLine":70,"endColumn":16},{"ruleId":"1562","severity":1,"message":"1890","line":77,"column":11,"nodeType":"1564","messageId":"1565","endLine":77,"endColumn":25},{"ruleId":"1562","severity":1,"message":"1891","line":102,"column":11,"nodeType":"1564","messageId":"1565","endLine":102,"endColumn":22},{"ruleId":"1883","severity":1,"message":"1884","line":195,"column":57,"nodeType":"1826","endLine":195,"endColumn":76},{"ruleId":"1562","severity":1,"message":"1587","line":3,"column":64,"nodeType":"1564","messageId":"1565","endLine":3,"endColumn":75},{"ruleId":"1562","severity":1,"message":"1589","line":3,"column":77,"nodeType":"1564","messageId":"1565","endLine":3,"endColumn":87},{"ruleId":"1562","severity":1,"message":"1581","line":3,"column":89,"nodeType":"1564","messageId":"1565","endLine":3,"endColumn":97},{"ruleId":"1562","severity":1,"message":"1800","line":4,"column":22,"nodeType":"1564","messageId":"1565","endLine":4,"endColumn":26},{"ruleId":"1562","severity":1,"message":"1801","line":4,"column":28,"nodeType":"1564","messageId":"1565","endLine":4,"endColumn":36},{"ruleId":"1562","severity":1,"message":"1831","line":4,"column":38,"nodeType":"1564","messageId":"1565","endLine":4,"endColumn":46},{"ruleId":"1562","severity":1,"message":"1653","line":4,"column":48,"nodeType":"1564","messageId":"1565","endLine":4,"endColumn":64},{"ruleId":"1562","severity":1,"message":"1585","line":6,"column":16,"nodeType":"1564","messageId":"1565","endLine":6,"endColumn":20},{"ruleId":"1562","severity":1,"message":"1654","line":8,"column":5,"nodeType":"1564","messageId":"1565","endLine":8,"endColumn":14},{"ruleId":"1562","severity":1,"message":"1832","line":8,"column":16,"nodeType":"1564","messageId":"1565","endLine":8,"endColumn":25},{"ruleId":"1562","severity":1,"message":"1802","line":8,"column":27,"nodeType":"1564","messageId":"1565","endLine":8,"endColumn":41},{"ruleId":"1562","severity":1,"message":"1833","line":10,"column":8,"nodeType":"1564","messageId":"1565","endLine":10,"endColumn":19},{"ruleId":"1562","severity":1,"message":"1574","line":13,"column":10,"nodeType":"1564","messageId":"1565","endLine":13,"endColumn":20},{"ruleId":"1562","severity":1,"message":"1588","line":15,"column":16,"nodeType":"1564","messageId":"1565","endLine":15,"endColumn":22},{"ruleId":"1562","severity":1,"message":"1806","line":48,"column":12,"nodeType":"1564","messageId":"1565","endLine":48,"endColumn":24},{"ruleId":"1562","severity":1,"message":"1807","line":48,"column":26,"nodeType":"1564","messageId":"1565","endLine":48,"endColumn":34},{"ruleId":"1562","severity":1,"message":"1808","line":49,"column":12,"nodeType":"1564","messageId":"1565","endLine":49,"endColumn":18},{"ruleId":"1562","severity":1,"message":"1809","line":53,"column":12,"nodeType":"1564","messageId":"1565","endLine":53,"endColumn":29},{"ruleId":"1562","severity":1,"message":"1815","line":53,"column":31,"nodeType":"1564","messageId":"1565","endLine":53,"endColumn":51},{"ruleId":"1562","severity":1,"message":"1813","line":78,"column":11,"nodeType":"1564","messageId":"1565","endLine":78,"endColumn":31},{"ruleId":"1562","severity":1,"message":"1892","line":79,"column":17,"nodeType":"1564","messageId":"1565","endLine":79,"endColumn":21},{"ruleId":"1562","severity":1,"message":"1893","line":79,"column":23,"nodeType":"1564","messageId":"1565","endLine":79,"endColumn":30},{"ruleId":"1562","severity":1,"message":"1841","line":82,"column":11,"nodeType":"1564","messageId":"1565","endLine":82,"endColumn":31},{"ruleId":"1716","severity":1,"message":"1877","line":100,"column":8,"nodeType":"1718","endLine":100,"endColumn":10,"suggestions":"1894"},{"ruleId":"1562","severity":1,"message":"1609","line":167,"column":11,"nodeType":"1564","messageId":"1565","endLine":167,"endColumn":18},{"ruleId":"1562","severity":1,"message":"1881","line":10,"column":8,"nodeType":"1564","messageId":"1565","endLine":10,"endColumn":17},{"ruleId":"1562","severity":1,"message":"1895","line":13,"column":8,"nodeType":"1564","messageId":"1565","endLine":13,"endColumn":14},{"ruleId":"1562","severity":1,"message":"1896","line":15,"column":8,"nodeType":"1564","messageId":"1565","endLine":15,"endColumn":20},{"ruleId":"1562","severity":1,"message":"1563","line":18,"column":8,"nodeType":"1564","messageId":"1565","endLine":18,"endColumn":18},{"ruleId":"1562","severity":1,"message":"1574","line":19,"column":8,"nodeType":"1564","messageId":"1565","endLine":19,"endColumn":18},{"ruleId":"1562","severity":1,"message":"1897","line":44,"column":29,"nodeType":"1564","messageId":"1565","endLine":44,"endColumn":47},{"ruleId":"1562","severity":1,"message":"1898","line":50,"column":12,"nodeType":"1564","messageId":"1565","endLine":50,"endColumn":31},{"ruleId":"1562","severity":1,"message":"1899","line":50,"column":33,"nodeType":"1564","messageId":"1565","endLine":50,"endColumn":55},{"ruleId":"1562","severity":1,"message":"1900","line":51,"column":35,"nodeType":"1564","messageId":"1565","endLine":51,"endColumn":59},{"ruleId":"1562","severity":1,"message":"1605","line":52,"column":10,"nodeType":"1564","messageId":"1565","endLine":52,"endColumn":15},{"ruleId":"1562","severity":1,"message":"1901","line":53,"column":12,"nodeType":"1564","messageId":"1565","endLine":53,"endColumn":17},{"ruleId":"1562","severity":1,"message":"1902","line":53,"column":19,"nodeType":"1564","messageId":"1565","endLine":53,"endColumn":27},{"ruleId":"1562","severity":1,"message":"1636","line":69,"column":11,"nodeType":"1564","messageId":"1565","endLine":69,"endColumn":21},{"ruleId":"1562","severity":1,"message":"1903","line":78,"column":11,"nodeType":"1564","messageId":"1565","endLine":78,"endColumn":15},{"ruleId":"1562","severity":1,"message":"1817","line":121,"column":11,"nodeType":"1564","messageId":"1565","endLine":121,"endColumn":23},{"ruleId":"1716","severity":1,"message":"1818","line":129,"column":8,"nodeType":"1718","endLine":129,"endColumn":10,"suggestions":"1904"},{"ruleId":"1562","severity":1,"message":"1905","line":130,"column":14,"nodeType":"1564","messageId":"1565","endLine":130,"endColumn":26},{"ruleId":"1562","severity":1,"message":"1906","line":186,"column":11,"nodeType":"1564","messageId":"1565","endLine":186,"endColumn":18},{"ruleId":"1562","severity":1,"message":"1907","line":198,"column":15,"nodeType":"1564","messageId":"1565","endLine":198,"endColumn":18},{"ruleId":"1562","severity":1,"message":"1908","line":290,"column":19,"nodeType":"1564","messageId":"1565","endLine":290,"endColumn":27},{"ruleId":"1824","severity":1,"message":"1825","line":519,"column":37,"nodeType":"1826","endLine":519,"endColumn":183},{"ruleId":"1827","severity":1,"message":"1828","line":519,"column":113,"nodeType":"1829","messageId":"1830","endLine":519,"endColumn":133},"no-native-reassign",["1909"],"no-negated-in-lhs",["1910"],"no-unused-vars","'IconButton' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Icon' is defined but never used.","'FacebookIcon' is defined but never used.","'TwitterIcon' is defined but never used.","'GithubIcon' is defined but never used.","'Header' is defined but never used.","'Sidebar' is defined but never used.","'Dashboard' is defined but never used.","'Typography' is defined but never used.","'Notifications' is defined but never used.","'Maps' is defined but never used.","'Icons' is defined but never used.","'Charts' is defined but never used.","'Category' is defined but never used.","'InputBase' is defined but never used.","'MenuItem' is defined but never used.","'Fab' is defined but never used.","'Button' is defined but never used.","'Grid' is defined but never used.","'Card' is defined but never used.","'Box' is defined but never used.","'FormControl' is defined but never used.","'Select' is defined but never used.","'InputLabel' is defined but never used.","'TextField' is defined but never used.","'Login' is defined but never used.","'BrowserRouter' is defined but never used.","'Routes' is defined but never used.","'Route' is defined but never used.","'MenuIcon' is defined but never used.","'SendIcon' is defined but never used.","'ArrowBackIcon' is defined but never used.","'fade' is defined but never used.","'classNames' is defined but never used.","'Badge' is defined but never used.","'UserAvatar' is defined but never used.","'messages' is assigned a value but never used.","'partyHeaders' is assigned a value but never used.","'age' is assigned a value but never used.","'error' is assigned a value but never used.","'setError' is assigned a value but never used.","'tabelIdList' is assigned a value but never used.","'setTabelIdList' is assigned a value but never used.","'onclick' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'onSubmit' is assigned a value but never used.","'casteHeaders' is assigned a value but never used.","'Dialog' is defined but never used.","'DialogActions' is defined but never used.","'DialogContent' is defined but never used.","'DialogTitle' is defined but never used.","'BoothService' is defined but never used.","'useFormik' is defined but never used.","'DeleteIcon' is defined but never used.","'EditIcon' is defined but never used.","'voterList' is assigned a value but never used.","'boothList' is assigned a value but never used.","'setBoothList' is assigned a value but never used.","'setAge' is assigned a value but never used.","'setCasteId' is assigned a value but never used.","'setPartyId' is assigned a value but never used.","'open' is assigned a value but never used.","'setOpen' is assigned a value but never used.","'activityIdList' is assigned a value but never used.","'setActivityIdList' is assigned a value but never used.","'contact' is assigned a value but never used.","'setContact' is assigned a value but never used.","'validationSchema' is assigned a value but never used.","'representiveContact' is assigned a value but never used.","'setRepresentiveContact' is assigned a value but never used.","'handleOpen' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'createObjectConstituency' is assigned a value but never used.","'handleClickOpen' is assigned a value but never used.","'selectDistrict' is assigned a value but never used.","'selectConstituency' is assigned a value but never used.","'LinearProgress' is defined but never used.","'OutlinedInput' is defined but never used.","'VisibilityIcon' is defined but never used.","'DialogContentText' is defined but never used.","'TableRow' is defined but never used.","'Table' is defined but never used.","'TableHead' is defined but never used.","'TableBody' is defined but never used.","'TableCell' is defined but never used.","'Radio' is defined but never used.","'RadioGroup' is defined but never used.","'FormControlLabel' is defined but never used.","'FormLabel' is defined but never used.","'useContext' is defined but never used.","'useTheme' is defined but never used.","'ResponsiveContainer' is defined but never used.","'ComposedChart' is defined but never used.","'AreaChart' is defined but never used.","'LineChart' is defined but never used.","'Line' is defined but never used.","'Area' is defined but never used.","'PieChart' is defined but never used.","'Pie' is defined but never used.","'Cell' is defined but never used.","'YAxis' is defined but never used.","'XAxis' is defined but never used.","'yupResolver' is defined but never used.","'mock' is defined but never used.","'Widget' is defined but never used.","'Dot' is defined but never used.","'BigStat' is defined but never used.","'withStyles' is defined but never used.","'classes' is assigned a value but never used.","'profileRegistrationList' is assigned a value but never used.","'setProfileRegistration' is assigned a value but never used.","'getProfileRegistrationList' is assigned a value but never used.","'CategoryServices' is defined but never used.","'NotificationsIcon' is defined but never used.","'TypographyIcon' is defined but never used.","no-useless-rename","Import HotTub unnecessarily renamed.","ImportSpecifier","unnecessarilyRenamed",{"range":"1911","text":"1912"},"Import ArtTrack unnecessarily renamed.",{"range":"1913","text":"1914"},"'TableIcon' is defined but never used.","'SupportIcon' is defined but never used.","Import SvgIconComponent unnecessarily renamed.",{"range":"1915","text":"1916"},"'SvgIconComponent' is defined but never used.","Import CalendarToday unnecessarily renamed.",{"range":"1917","text":"1918"},"'CalendarToday' is defined but never used.","Import AccessAlarmSharp unnecessarily renamed.",{"range":"1919","text":"1920"},"Import Create unnecessarily renamed.",{"range":"1921","text":"1922"},"'Create' is defined but never used.","'SupervisedUserCircle' is defined but never used.","'OpenInNew' is defined but never used.","'student' is assigned a value but never used.","no-self-assign","'structure' is assigned to itself.","selfAssignment","no-dupe-keys","Duplicate key 'count'.","ObjectExpression","unexpected","'BuildTwoTone' is defined but never used.","'isMailsUnread' is assigned a value but never used.","'isNotificationsUnread' is assigned a value but never used.","'partyIdList' is assigned a value but never used.","'casteIdList' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'onSubmit'. Either include it or remove the dependency array.","ArrayExpression",["1923"],"'Menu' is defined but never used.","'MoreIcon' is defined but never used.","'moreButtonRef' is assigned a value but never used.","'isMoreMenuOpen' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'useState' is defined but never used.","'FileSaver' is defined but never used.","'fileType' is assigned a value but never used.","'fileExtension' is assigned a value but never used.","Duplicate key 'findRepresentiveContactList'.","'voter' is assigned a value but never used.","Duplicate key 'votersPolled'.","'StyledTableRow' is assigned a value but never used.","'mainChartData' is assigned a value but never used.","'theme' is assigned a value but never used.","'mainChartState' is assigned a value but never used.","'setMainChartState' is assigned a value but never used.",["1909"],["1910"],"'villageList' is assigned a value but never used.","no-redeclare","'constituencyId' is already defined.","redeclared","'setConstituencyId' is already defined.","no-whitespace-before-property","Unexpected whitespace before property boothCount.","MemberExpression","unexpectedWhitespace",{"range":"1924","text":"1925"},"'ExportExcel' is defined but never used.","'AddIcon' is defined but never used.","'districtList' is assigned a value but never used.","'casteList' is assigned a value but never used.","'partyList' is assigned a value but never used.","'constituencyList' is assigned a value but never used.","'familyOpen' is assigned a value but never used.","'result' is assigned a value but never used.","'nameList' is assigned a value but never used.","'setNameList' is assigned a value but never used.",["1926"],"'getPartyIdList' is assigned a value but never used.","'editVoterData' is assigned a value but never used.","'deleteVoterData' is assigned a value but never used.","'addFamily' is assigned a value but never used.","'familyHandleChange' is assigned a value but never used.","'formik' is assigned a value but never used.","'familyHandleSubmit' is assigned a value but never used.","'updatedList' is assigned a value but never used.","'TrackService' is defined but never used.","'voterDataList' is assigned a value but never used.","'editVoter' is assigned a value but never used.","'userDetails' is assigned a value but never used.",["1909"],["1910"],"'ProfileRegistration' is defined but never used.","'Redirect' is defined but never used.","'LoginHeader' is defined but never used.","'Footer' is defined but never used.","'setRoleValue' is assigned a value but never used.",{"range":"1927","text":"1912"},{"range":"1928","text":"1914"},"'ArtTrack' is defined but never used.","'UIElementsIcon' is defined but never used.","'LibraryIcon' is defined but never used.","'FAQIcon' is defined but never used.",{"range":"1929","text":"1916"},{"range":"1930","text":"1918"},{"range":"1931","text":"1920"},"'AccessAlarmSharp' is defined but never used.",{"range":"1932","text":"1922"},"'HistorySharp' is defined but never used.","'EvStation' is defined but never used.","'SearchIcon' is defined but never used.","'isSearchOpen' is assigned a value but never used.","'setSearchOpen' is assigned a value but never used.",["1909"],["1910"],"'List' is defined but never used.","'ListItem' is defined but never used.","'FormHelperText' is defined but never used.","no-sparse-arrays","Unexpected comma in middle of array.","unexpectedSparseArray","'getParksList' is assigned a value but never used.","'setParks' is assigned a value but never used.","'qrCode' is assigned a value but never used.","'ticketBookingList' is assigned a value but never used.","'state' is assigned a value but never used.","'setState' is assigned a value but never used.","'checkboxes' is assigned a value but never used.","'handleCheckboxChange' is assigned a value but never used.","'getTicketBookingList' is assigned a value but never used.","'setTicketBookingList' is assigned a value but never used.","'sumOfTotal' is assigned a value but never used.","'pricePerItem' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getByIdList'. Either include it or remove the dependency array.",["1933"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","'Checkbox' is defined but never used.","'FormGroup' is defined but never used.","'ParkService' is defined but never used.","'ticketBooking' is assigned a value but never used.","'setTicketBooking' is assigned a value but never used.","'parkList' is assigned a value but never used.","'setParkList' is assigned a value but never used.","'setQrCode' is assigned a value but never used.","'park' is assigned a value but never used.","'setPark' is assigned a value but never used.","'handleHolidaysChange' is assigned a value but never used.","'setConstituencyList' is assigned a value but never used.","'setPartyList' is assigned a value but never used.","'setDistrictList' is assigned a value but never used.","'password' is assigned a value but never used.","'passwordError' is assigned a value but never used.","'setPasswordError' is assigned a value but never used.","'handlePasswordChange' is assigned a value but never used.","'handleFormSubmit' is assigned a value but never used.","'CircularProgress' is defined but never used.","'Tabs' is defined but never used.","'Tab' is defined but never used.","'Fade' is defined but never used.","'loginUser' is defined but never used.","'userDispatch' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'setIsLoading' is assigned a value but never used.","'activeTabId' is assigned a value but never used.","'setActiveTabId' is assigned a value but never used.","'loginValue' is assigned a value but never used.","'setLoginValue' is assigned a value but never used.","'passwordValue' is assigned a value but never used.","'setPasswordValue' is assigned a value but never used.","'roleValue' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'CachedIcon' is defined but never used.","'PhonelinkLockIcon' is defined but never used.","'PaymentIcon' is defined but never used.","'AcUnitIcon' is defined but never used.","'phone' is defined but never used.","'SRI' is defined but never used.","'setResult' is assigned a value but never used.","'date' is assigned a value but never used.","'activity' is assigned a value but never used.","'setActivity' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getProfileId'. Either include it or remove the dependency array.",["1934"],"'report' is assigned a value but never used.","'ProfileRegistrationService' is defined but never used.","'PageTitle' is defined but never used.",["1935"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Loader' is defined but never used.","'setParkName' is assigned a value but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'getQr' is assigned a value but never used.","'handleRedirect' is assigned a value but never used.","'getByIdList' is assigned a value but never used.","'name' is assigned a value but never used.","'checked' is assigned a value but never used.",["1936"],"'Avatar' is defined but never used.","'FavoriteIcon' is defined but never used.","'setCoachingBooking' is assigned a value but never used.","'coachingBookingList' is assigned a value but never used.","'setCoachingBookingList' is assigned a value but never used.","'setProfileRegistrationId' is assigned a value but never used.","'items' is assigned a value but never used.","'setItems' is assigned a value but never used.","'Item' is assigned a value but never used.",["1937"],"'getRandomInt' is defined but never used.","'payment' is assigned a value but never used.","'day' is assigned a value but never used.","'coaching' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[271,287],"HotTub",[292,312],"ArtTrack",[501,537],"SvgIconComponent",[542,572],"CalendarToday",[577,613],"AccessAlarmSharp",[618,634],"Create",{"desc":"1938","fix":"1939"},[4618,4620],".",{"desc":"1938","fix":"1940"},[271,287],[292,312],[501,537],[542,572],[577,613],[618,634],{"desc":"1941","fix":"1942"},{"desc":"1943","fix":"1944"},{"desc":"1941","fix":"1945"},{"desc":"1943","fix":"1946"},{"desc":"1941","fix":"1947"},"Update the dependencies array to be: [onSubmit]",{"range":"1948","text":"1949"},{"range":"1950","text":"1949"},"Update the dependencies array to be: [getByIdList]",{"range":"1951","text":"1952"},"Update the dependencies array to be: [getProfileId]",{"range":"1953","text":"1954"},{"range":"1955","text":"1952"},{"range":"1956","text":"1954"},{"range":"1957","text":"1952"},[4947,4949],"[onSubmit]",[4771,4773],[4225,4227],"[getByIdList]",[2432,2434],"[getProfileId]",[2104,2106],[3489,3491],[4570,4572]]